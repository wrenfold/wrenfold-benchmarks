// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

namespace sym {

/**
 * This function was autogenerated. Do not modify by hand.
 *
 * Args:
 *     world_R_imu_xyzw: Matrix41
 *     world_t_imu: Matrix31
 *     imu_R_cam_xyzw: Matrix41
 *     imu_t_cam: Matrix31
 *     angular_velocity_imu: Matrix31
 *     world_v_imu: Matrix31
 *     p_world: Matrix31
 *     row_time: Scalar
 *     camera: Matrix91
 *
 * Outputs:
 *     p_image: Matrix21
 *     D_world_R_imu: Matrix23
 *     D_world_t_imu: Matrix23
 *     D_imu_R_cam: Matrix23
 *     D_imu_t_cam: Matrix23
 *     D_angular_velocity_imu: Matrix23
 *     D_world_v_imu: Matrix23
 *     D_p_world: Matrix23
 */
template <typename Scalar>
void IntegrateAndProjectFirstOrder(
    const Eigen::Matrix<Scalar, 4, 1>& world_R_imu_xyzw,
    const Eigen::Matrix<Scalar, 3, 1>& world_t_imu,
    const Eigen::Matrix<Scalar, 4, 1>& imu_R_cam_xyzw, const Eigen::Matrix<Scalar, 3, 1>& imu_t_cam,
    const Eigen::Matrix<Scalar, 3, 1>& angular_velocity_imu,
    const Eigen::Matrix<Scalar, 3, 1>& world_v_imu, const Eigen::Matrix<Scalar, 3, 1>& p_world,
    const Scalar row_time, const Eigen::Matrix<Scalar, 9, 1>& camera,
    Eigen::Matrix<Scalar, 2, 1>* const p_image = nullptr,
    Eigen::Matrix<Scalar, 2, 3>* const D_world_R_imu = nullptr,
    Eigen::Matrix<Scalar, 2, 3>* const D_world_t_imu = nullptr,
    Eigen::Matrix<Scalar, 2, 3>* const D_imu_R_cam = nullptr,
    Eigen::Matrix<Scalar, 2, 3>* const D_imu_t_cam = nullptr,
    Eigen::Matrix<Scalar, 2, 3>* const D_angular_velocity_imu = nullptr,
    Eigen::Matrix<Scalar, 2, 3>* const D_world_v_imu = nullptr,
    Eigen::Matrix<Scalar, 2, 3>* const D_p_world = nullptr) {
  // Total ops: 2614

  // Input arrays

  // Intermediate terms (705)
  const Scalar _tmp0 = std::pow(angular_velocity_imu(0, 0), Scalar(2));
  const Scalar _tmp1 = std::pow(row_time, Scalar(2));
  const Scalar _tmp2 = std::pow(angular_velocity_imu(2, 0), Scalar(2));
  const Scalar _tmp3 = std::pow(angular_velocity_imu(1, 0), Scalar(2));
  const Scalar _tmp4 =
      _tmp0 * _tmp1 + _tmp1 * _tmp2 + _tmp1 * _tmp3 + Scalar(1.0000000000000001e-32);
  const Scalar _tmp5 = std::sqrt(_tmp4);
  const Scalar _tmp6 = (Scalar(1) / Scalar(2)) * _tmp5;
  const Scalar _tmp7 = std::sin(_tmp6);
  const Scalar _tmp8 = Scalar(1.0) / (_tmp5);
  const Scalar _tmp9 = _tmp8 * row_time;
  const Scalar _tmp10 = _tmp7 * _tmp9;
  const Scalar _tmp11 = _tmp10 * world_R_imu_xyzw(0, 0);
  const Scalar _tmp12 = _tmp11 * angular_velocity_imu(2, 0);
  const Scalar _tmp13 = _tmp10 * world_R_imu_xyzw(2, 0);
  const Scalar _tmp14 = _tmp13 * angular_velocity_imu(0, 0);
  const Scalar _tmp15 = _tmp7 * world_R_imu_xyzw(3, 0);
  const Scalar _tmp16 = _tmp15 * _tmp9;
  const Scalar _tmp17 = _tmp16 * angular_velocity_imu(1, 0);
  const Scalar _tmp18 = std::cos(_tmp6);
  const Scalar _tmp19 = _tmp18 * world_R_imu_xyzw(1, 0);
  const Scalar _tmp20 = -_tmp12 + _tmp14 + _tmp17 + _tmp19;
  const Scalar _tmp21 = _tmp20 * imu_R_cam_xyzw(3, 0);
  const Scalar _tmp22 = _tmp13 * angular_velocity_imu(2, 0);
  const Scalar _tmp23 = _tmp11 * angular_velocity_imu(0, 0);
  const Scalar _tmp24 = _tmp10 * world_R_imu_xyzw(1, 0);
  const Scalar _tmp25 = _tmp24 * angular_velocity_imu(1, 0);
  const Scalar _tmp26 = _tmp18 * world_R_imu_xyzw(3, 0);
  const Scalar _tmp27 = -_tmp22 - _tmp23 - _tmp25 + _tmp26;
  const Scalar _tmp28 = _tmp27 * imu_R_cam_xyzw(1, 0);
  const Scalar _tmp29 = _tmp24 * angular_velocity_imu(2, 0);
  const Scalar _tmp30 = _tmp16 * angular_velocity_imu(0, 0);
  const Scalar _tmp31 = _tmp13 * angular_velocity_imu(1, 0);
  const Scalar _tmp32 = _tmp18 * world_R_imu_xyzw(0, 0);
  const Scalar _tmp33 = _tmp29 + _tmp30 - _tmp31 + _tmp32;
  const Scalar _tmp34 = _tmp33 * imu_R_cam_xyzw(2, 0);
  const Scalar _tmp35 = _tmp16 * angular_velocity_imu(2, 0);
  const Scalar _tmp36 = _tmp24 * angular_velocity_imu(0, 0);
  const Scalar _tmp37 = _tmp11 * angular_velocity_imu(1, 0);
  const Scalar _tmp38 = _tmp18 * world_R_imu_xyzw(2, 0);
  const Scalar _tmp39 = _tmp35 - _tmp36 + _tmp37 + _tmp38;
  const Scalar _tmp40 = _tmp39 * imu_R_cam_xyzw(0, 0);
  const Scalar _tmp41 = _tmp21 + _tmp28 - _tmp34 + _tmp40;
  const Scalar _tmp42 = _tmp20 * imu_R_cam_xyzw(0, 0);
  const Scalar _tmp43 = _tmp27 * imu_R_cam_xyzw(2, 0);
  const Scalar _tmp44 = _tmp33 * imu_R_cam_xyzw(1, 0);
  const Scalar _tmp45 = _tmp39 * imu_R_cam_xyzw(3, 0);
  const Scalar _tmp46 = -_tmp42 + _tmp43 + _tmp44 + _tmp45;
  const Scalar _tmp47 = 2 * _tmp46;
  const Scalar _tmp48 = _tmp41 * _tmp47;
  const Scalar _tmp49 = _tmp20 * imu_R_cam_xyzw(2, 0);
  const Scalar _tmp50 = _tmp27 * imu_R_cam_xyzw(0, 0);
  const Scalar _tmp51 = _tmp33 * imu_R_cam_xyzw(3, 0);
  const Scalar _tmp52 = _tmp39 * imu_R_cam_xyzw(1, 0);
  const Scalar _tmp53 = _tmp49 + _tmp50 + _tmp51 - _tmp52;
  const Scalar _tmp54 = _tmp20 * imu_R_cam_xyzw(1, 0);
  const Scalar _tmp55 = _tmp33 * imu_R_cam_xyzw(0, 0);
  const Scalar _tmp56 = _tmp39 * imu_R_cam_xyzw(2, 0);
  const Scalar _tmp57 = _tmp27 * imu_R_cam_xyzw(3, 0);
  const Scalar _tmp58 = -2 * _tmp54 - 2 * _tmp55 - 2 * _tmp56 + 2 * _tmp57;
  const Scalar _tmp59 = _tmp53 * _tmp58;
  const Scalar _tmp60 = _tmp48 + _tmp59;
  const Scalar _tmp61 = 2 * std::pow(_tmp33, Scalar(2));
  const Scalar _tmp62 = -_tmp61;
  const Scalar _tmp63 = 2 * std::pow(_tmp20, Scalar(2));
  const Scalar _tmp64 = -_tmp63;
  const Scalar _tmp65 = 2 * _tmp39;
  const Scalar _tmp66 = _tmp33 * _tmp65;
  const Scalar _tmp67 = 2 * _tmp27;
  const Scalar _tmp68 = _tmp20 * _tmp67;
  const Scalar _tmp69 = -_tmp68;
  const Scalar _tmp70 = _tmp20 * _tmp65;
  const Scalar _tmp71 = _tmp33 * _tmp67;
  const Scalar _tmp72 = -imu_t_cam(0, 0) * (_tmp66 + _tmp69) - imu_t_cam(1, 0) * (_tmp70 + _tmp71) -
                        imu_t_cam(2, 0) * (_tmp62 + _tmp64 + 1) + p_world(2, 0) -
                        row_time * world_v_imu(2, 0) - world_t_imu(2, 0);
  const Scalar _tmp73 = -2 * std::pow(_tmp46, Scalar(2));
  const Scalar _tmp74 = 1 - 2 * std::pow(_tmp53, Scalar(2));
  const Scalar _tmp75 = _tmp73 + _tmp74;
  const Scalar _tmp76 = 2 * _tmp20;
  const Scalar _tmp77 = _tmp33 * _tmp76;
  const Scalar _tmp78 = _tmp39 * _tmp67;
  const Scalar _tmp79 = -_tmp71;
  const Scalar _tmp80 = 2 * std::pow(_tmp39, Scalar(2));
  const Scalar _tmp81 = 1 - _tmp80;
  const Scalar _tmp82 = -imu_t_cam(0, 0) * (_tmp77 + _tmp78) - imu_t_cam(1, 0) * (_tmp62 + _tmp81) -
                        imu_t_cam(2, 0) * (_tmp70 + _tmp79) + p_world(1, 0) -
                        row_time * world_v_imu(1, 0) - world_t_imu(1, 0);
  const Scalar _tmp83 = -_tmp78;
  const Scalar _tmp84 = -imu_t_cam(0, 0) * (_tmp64 + _tmp81) - imu_t_cam(1, 0) * (_tmp77 + _tmp83) -
                        imu_t_cam(2, 0) * (_tmp66 + _tmp68) + p_world(0, 0) -
                        row_time * world_v_imu(0, 0) - world_t_imu(0, 0);
  const Scalar _tmp85 = 2 * _tmp53;
  const Scalar _tmp86 = _tmp41 * _tmp85;
  const Scalar _tmp87 = _tmp46 * _tmp58;
  const Scalar _tmp88 = _tmp86 - _tmp87;
  const Scalar _tmp89 = _tmp60 * _tmp72 + _tmp75 * _tmp82 + _tmp84 * _tmp88;
  const Scalar _tmp90 = std::pow(_tmp89, Scalar(2));
  const Scalar _tmp91 = -2 * std::pow(_tmp41, Scalar(2));
  const Scalar _tmp92 = _tmp74 + _tmp91;
  const Scalar _tmp93 = _tmp47 * _tmp53;
  const Scalar _tmp94 = _tmp41 * _tmp58;
  const Scalar _tmp95 = _tmp93 + _tmp94;
  const Scalar _tmp96 = _tmp48 - _tmp59;
  const Scalar _tmp97 = _tmp72 * _tmp92 + _tmp82 * _tmp96 + _tmp84 * _tmp95;
  const Scalar _tmp98 = std::pow(_tmp97, Scalar(-2));
  const Scalar _tmp99 = _tmp90 * _tmp98;
  const Scalar _tmp100 = _tmp86 + _tmp87;
  const Scalar _tmp101 = _tmp93 - _tmp94;
  const Scalar _tmp102 = _tmp73 + _tmp91 + 1;
  const Scalar _tmp103 = _tmp100 * _tmp82 + _tmp101 * _tmp72 + _tmp102 * _tmp84;
  const Scalar _tmp104 = std::pow(_tmp103, Scalar(2));
  const Scalar _tmp105 = _tmp104 * _tmp98;
  const Scalar _tmp106 = _tmp105 + _tmp99;
  const Scalar _tmp107 = std::pow(_tmp106, Scalar(2));
  const Scalar _tmp108 =
      [&]() {
        const Scalar base = _tmp106;
        return base * base * base;
      }() *
          camera(6, 0) +
      _tmp106 * camera(4, 0) + _tmp107 * camera(5, 0) + 1;
  const Scalar _tmp109 = Scalar(1.0) / (_tmp97);
  const Scalar _tmp110 = _tmp103 * _tmp109;
  const Scalar _tmp111 = 2 * camera(7, 0);
  const Scalar _tmp112 = _tmp103 * _tmp98;
  const Scalar _tmp113 = _tmp111 * _tmp112;
  const Scalar _tmp114 = _tmp109 * _tmp89;
  const Scalar _tmp115 = _tmp112 * camera(8, 0);
  const Scalar _tmp116 = (Scalar(1) / Scalar(2)) * _tmp23;
  const Scalar _tmp117 = (Scalar(1) / Scalar(2)) * _tmp25;
  const Scalar _tmp118 = (Scalar(1) / Scalar(2)) * _tmp22;
  const Scalar _tmp119 = (Scalar(1) / Scalar(2)) * _tmp26;
  const Scalar _tmp120 = _tmp118 + _tmp119;
  const Scalar _tmp121 = -_tmp116 + _tmp117 + _tmp120;
  const Scalar _tmp122 = (Scalar(1) / Scalar(2)) * _tmp17;
  const Scalar _tmp123 = (Scalar(1) / Scalar(2)) * _tmp19;
  const Scalar _tmp124 = -_tmp123;
  const Scalar _tmp125 = -Scalar(1) / Scalar(2) * _tmp12;
  const Scalar _tmp126 = (Scalar(1) / Scalar(2)) * _tmp14;
  const Scalar _tmp127 = _tmp125 - _tmp126;
  const Scalar _tmp128 = _tmp122 + _tmp124 + _tmp127;
  const Scalar _tmp129 = (Scalar(1) / Scalar(2)) * _tmp29;
  const Scalar _tmp130 = (Scalar(1) / Scalar(2)) * _tmp30;
  const Scalar _tmp131 = -_tmp130;
  const Scalar _tmp132 = -Scalar(1) / Scalar(2) * _tmp31;
  const Scalar _tmp133 = (Scalar(1) / Scalar(2)) * _tmp32;
  const Scalar _tmp134 = -_tmp133;
  const Scalar _tmp135 = _tmp129 + _tmp131 + _tmp132 + _tmp134;
  const Scalar _tmp136 = (Scalar(1) / Scalar(2)) * _tmp35;
  const Scalar _tmp137 = -_tmp136;
  const Scalar _tmp138 = (Scalar(1) / Scalar(2)) * _tmp38;
  const Scalar _tmp139 = -Scalar(1) / Scalar(2) * _tmp36;
  const Scalar _tmp140 = (Scalar(1) / Scalar(2)) * _tmp37;
  const Scalar _tmp141 = _tmp139 - _tmp140;
  const Scalar _tmp142 = _tmp137 + _tmp138 + _tmp141;
  const Scalar _tmp143 = _tmp121 * imu_R_cam_xyzw(1, 0) + _tmp128 * imu_R_cam_xyzw(3, 0) +
                         _tmp135 * imu_R_cam_xyzw(2, 0) - _tmp142 * imu_R_cam_xyzw(0, 0);
  const Scalar _tmp144 = 4 * _tmp46;
  const Scalar _tmp145 = -_tmp143 * _tmp144;
  const Scalar _tmp146 = -_tmp121 * imu_R_cam_xyzw(2, 0) + _tmp128 * imu_R_cam_xyzw(0, 0) +
                         _tmp135 * imu_R_cam_xyzw(1, 0) + _tmp142 * imu_R_cam_xyzw(3, 0);
  const Scalar _tmp147 = 4 * _tmp41;
  const Scalar _tmp148 = -_tmp146 * _tmp147;
  const Scalar _tmp149 = _tmp146 * _tmp58;
  const Scalar _tmp150 = -_tmp121 * imu_R_cam_xyzw(0, 0) - _tmp128 * imu_R_cam_xyzw(2, 0) +
                         _tmp135 * imu_R_cam_xyzw(3, 0) - _tmp142 * imu_R_cam_xyzw(1, 0);
  const Scalar _tmp151 = 2 * _tmp41;
  const Scalar _tmp152 = _tmp150 * _tmp151;
  const Scalar _tmp153 = _tmp121 * imu_R_cam_xyzw(3, 0) - _tmp128 * imu_R_cam_xyzw(1, 0) +
                         _tmp135 * imu_R_cam_xyzw(0, 0) + _tmp142 * imu_R_cam_xyzw(2, 0);
  const Scalar _tmp154 = _tmp143 * _tmp85 + _tmp153 * _tmp47;
  const Scalar _tmp155 = 2 * _tmp33;
  const Scalar _tmp156 = _tmp135 * _tmp155;
  const Scalar _tmp157 = _tmp121 * _tmp67;
  const Scalar _tmp158 = _tmp128 * _tmp76 + _tmp142 * _tmp65;
  const Scalar _tmp159 = _tmp135 * _tmp65;
  const Scalar _tmp160 = _tmp128 * _tmp67;
  const Scalar _tmp161 = _tmp121 * _tmp76 + _tmp142 * _tmp155;
  const Scalar _tmp162 = 4 * _tmp39;
  const Scalar _tmp163 = -_tmp128 * _tmp162;
  const Scalar _tmp164 = 4 * _tmp33;
  const Scalar _tmp165 = -_tmp121 * _tmp164;
  const Scalar _tmp166 = -imu_t_cam(0, 0) * (_tmp159 + _tmp160 + _tmp161) -
                         imu_t_cam(1, 0) * (_tmp163 + _tmp165) -
                         imu_t_cam(2, 0) * (-_tmp156 - _tmp157 + _tmp158);
  const Scalar _tmp167 = _tmp143 * _tmp58;
  const Scalar _tmp168 = _tmp150 * _tmp47;
  const Scalar _tmp169 = _tmp146 * _tmp85 + _tmp151 * _tmp153;
  const Scalar _tmp170 = _tmp135 * _tmp76;
  const Scalar _tmp171 = _tmp142 * _tmp67;
  const Scalar _tmp172 = _tmp121 * _tmp65 + _tmp128 * _tmp155;
  const Scalar _tmp173 = 4 * _tmp20;
  const Scalar _tmp174 = -_tmp142 * _tmp173;
  const Scalar _tmp175 = -imu_t_cam(0, 0) * (_tmp163 + _tmp174) -
                         imu_t_cam(1, 0) * (-_tmp159 - _tmp160 + _tmp161) -
                         imu_t_cam(2, 0) * (_tmp170 + _tmp171 + _tmp172);
  const Scalar _tmp176 = -imu_t_cam(0, 0) * (-_tmp170 - _tmp171 + _tmp172) -
                         imu_t_cam(1, 0) * (_tmp156 + _tmp157 + _tmp158) -
                         imu_t_cam(2, 0) * (_tmp165 + _tmp174);
  const Scalar _tmp177 = _tmp100 * _tmp166 + _tmp101 * _tmp176 + _tmp102 * _tmp175 +
                         _tmp72 * (-_tmp149 - _tmp152 + _tmp154) +
                         _tmp82 * (_tmp167 + _tmp168 + _tmp169) + _tmp84 * (_tmp145 + _tmp148);
  const Scalar _tmp178 = _tmp108 * _tmp109;
  const Scalar _tmp179 = _tmp153 * _tmp58;
  const Scalar _tmp180 = _tmp150 * _tmp85;
  const Scalar _tmp181 = _tmp143 * _tmp151 + _tmp146 * _tmp47;
  const Scalar _tmp182 = 4 * _tmp53;
  const Scalar _tmp183 = -_tmp153 * _tmp182;
  const Scalar _tmp184 = _tmp166 * _tmp96 + _tmp175 * _tmp95 + _tmp176 * _tmp92 +
                         _tmp72 * (_tmp148 + _tmp183) + _tmp82 * (-_tmp179 - _tmp180 + _tmp181) +
                         _tmp84 * (_tmp149 + _tmp152 + _tmp154);
  const Scalar _tmp185 = _tmp108 * _tmp112;
  const Scalar _tmp186 = _tmp89 * _tmp98;
  const Scalar _tmp187 = _tmp111 * _tmp186;
  const Scalar _tmp188 = 6 * _tmp112;
  const Scalar _tmp189 = std::pow(_tmp97, Scalar(-3));
  const Scalar _tmp190 = _tmp104 * _tmp189;
  const Scalar _tmp191 = 6 * _tmp190;
  const Scalar _tmp192 = 2 * _tmp89;
  const Scalar _tmp193 = _tmp166 * _tmp75 + _tmp175 * _tmp88 + _tmp176 * _tmp60 +
                         _tmp72 * (_tmp179 + _tmp180 + _tmp181) + _tmp82 * (_tmp145 + _tmp183) +
                         _tmp84 * (-_tmp167 - _tmp168 + _tmp169);
  const Scalar _tmp194 = _tmp193 * _tmp98;
  const Scalar _tmp195 = _tmp189 * _tmp90;
  const Scalar _tmp196 = 2 * _tmp184;
  const Scalar _tmp197 = _tmp192 * _tmp194 - _tmp195 * _tmp196;
  const Scalar _tmp198 = _tmp103 * _tmp189;
  const Scalar _tmp199 = _tmp184 * _tmp198;
  const Scalar _tmp200 = 4 * _tmp89 * camera(7, 0);
  const Scalar _tmp201 = 2 * _tmp112;
  const Scalar _tmp202 = _tmp177 * _tmp201 - _tmp190 * _tmp196;
  const Scalar _tmp203 = _tmp197 + _tmp202;
  const Scalar _tmp204 = 2 * _tmp106 * camera(5, 0);
  const Scalar _tmp205 = 3 * _tmp107 * camera(6, 0);
  const Scalar _tmp206 = _tmp203 * _tmp204 + _tmp203 * _tmp205 + _tmp203 * camera(4, 0);
  const Scalar _tmp207 = _tmp186 * camera(8, 0);
  const Scalar _tmp208 = 6 * _tmp89;
  const Scalar _tmp209 = 6 * _tmp195;
  const Scalar _tmp210 = _tmp108 * _tmp186;
  const Scalar _tmp211 = _tmp192 * camera(8, 0);
  const Scalar _tmp212 = _tmp116 - _tmp117 + _tmp120;
  const Scalar _tmp213 = -_tmp122;
  const Scalar _tmp214 = _tmp124 + _tmp125 + _tmp126 + _tmp213;
  const Scalar _tmp215 = -_tmp129 + _tmp132;
  const Scalar _tmp216 = _tmp131 + _tmp133 + _tmp215;
  const Scalar _tmp217 = -_tmp138;
  const Scalar _tmp218 = _tmp136 + _tmp141 + _tmp217;
  const Scalar _tmp219 = _tmp212 * imu_R_cam_xyzw(3, 0) + _tmp214 * imu_R_cam_xyzw(1, 0) +
                         _tmp216 * imu_R_cam_xyzw(0, 0) - _tmp218 * imu_R_cam_xyzw(2, 0);
  const Scalar _tmp220 = _tmp219 * _tmp58;
  const Scalar _tmp221 = -_tmp212 * imu_R_cam_xyzw(1, 0) + _tmp214 * imu_R_cam_xyzw(3, 0) -
                         _tmp216 * imu_R_cam_xyzw(2, 0) - _tmp218 * imu_R_cam_xyzw(0, 0);
  const Scalar _tmp222 = _tmp151 * _tmp221;
  const Scalar _tmp223 = _tmp212 * imu_R_cam_xyzw(2, 0) + _tmp214 * imu_R_cam_xyzw(0, 0) -
                         _tmp216 * imu_R_cam_xyzw(1, 0) + _tmp218 * imu_R_cam_xyzw(3, 0);
  const Scalar _tmp224 = -_tmp212 * imu_R_cam_xyzw(0, 0) + _tmp214 * imu_R_cam_xyzw(2, 0) +
                         _tmp216 * imu_R_cam_xyzw(3, 0) + _tmp218 * imu_R_cam_xyzw(1, 0);
  const Scalar _tmp225 = _tmp223 * _tmp47 + _tmp224 * _tmp85;
  const Scalar _tmp226 = _tmp224 * _tmp58;
  const Scalar _tmp227 = _tmp221 * _tmp47;
  const Scalar _tmp228 = _tmp151 * _tmp223 + _tmp219 * _tmp85;
  const Scalar _tmp229 = _tmp214 * _tmp76;
  const Scalar _tmp230 = _tmp212 * _tmp67;
  const Scalar _tmp231 = _tmp155 * _tmp216 + _tmp218 * _tmp65;
  const Scalar _tmp232 = _tmp214 * _tmp65;
  const Scalar _tmp233 = _tmp216 * _tmp67;
  const Scalar _tmp234 = _tmp155 * _tmp212 + _tmp218 * _tmp76;
  const Scalar _tmp235 = -_tmp162 * _tmp216;
  const Scalar _tmp236 = -_tmp173 * _tmp212;
  const Scalar _tmp237 = -imu_t_cam(0, 0) * (_tmp235 + _tmp236) -
                         imu_t_cam(1, 0) * (-_tmp232 - _tmp233 + _tmp234) -
                         imu_t_cam(2, 0) * (_tmp229 + _tmp230 + _tmp231);
  const Scalar _tmp238 = -_tmp144 * _tmp224;
  const Scalar _tmp239 = -_tmp147 * _tmp219;
  const Scalar _tmp240 = -_tmp164 * _tmp218;
  const Scalar _tmp241 = _tmp155 * _tmp214;
  const Scalar _tmp242 = _tmp218 * _tmp67;
  const Scalar _tmp243 = _tmp212 * _tmp65 + _tmp216 * _tmp76;
  const Scalar _tmp244 = -imu_t_cam(0, 0) * (_tmp232 + _tmp233 + _tmp234) -
                         imu_t_cam(1, 0) * (_tmp235 + _tmp240) -
                         imu_t_cam(2, 0) * (-_tmp241 - _tmp242 + _tmp243);
  const Scalar _tmp245 = -imu_t_cam(0, 0) * (-_tmp229 - _tmp230 + _tmp231) -
                         imu_t_cam(1, 0) * (_tmp241 + _tmp242 + _tmp243) -
                         imu_t_cam(2, 0) * (_tmp236 + _tmp240);
  const Scalar _tmp246 = _tmp100 * _tmp244 + _tmp101 * _tmp245 + _tmp102 * _tmp237 +
                         _tmp72 * (-_tmp220 - _tmp222 + _tmp225) +
                         _tmp82 * (_tmp226 + _tmp227 + _tmp228) + _tmp84 * (_tmp238 + _tmp239);
  const Scalar _tmp247 = _tmp223 * _tmp58;
  const Scalar _tmp248 = _tmp221 * _tmp85;
  const Scalar _tmp249 = _tmp151 * _tmp224 + _tmp219 * _tmp47;
  const Scalar _tmp250 = -_tmp182 * _tmp223;
  const Scalar _tmp251 = _tmp237 * _tmp95 + _tmp244 * _tmp96 + _tmp245 * _tmp92 +
                         _tmp72 * (_tmp239 + _tmp250) + _tmp82 * (-_tmp247 - _tmp248 + _tmp249) +
                         _tmp84 * (_tmp220 + _tmp222 + _tmp225);
  const Scalar _tmp252 = 2 * _tmp195;
  const Scalar _tmp253 = _tmp237 * _tmp88 + _tmp244 * _tmp75 + _tmp245 * _tmp60 +
                         _tmp72 * (_tmp247 + _tmp248 + _tmp249) + _tmp82 * (_tmp238 + _tmp250) +
                         _tmp84 * (-_tmp226 - _tmp227 + _tmp228);
  const Scalar _tmp254 = _tmp253 * _tmp98;
  const Scalar _tmp255 = _tmp192 * _tmp254 - _tmp251 * _tmp252;
  const Scalar _tmp256 = _tmp198 * _tmp200;
  const Scalar _tmp257 = 2 * _tmp190;
  const Scalar _tmp258 = _tmp201 * _tmp246 - _tmp251 * _tmp257;
  const Scalar _tmp259 = _tmp255 + _tmp258;
  const Scalar _tmp260 = _tmp204 * _tmp259 + _tmp205 * _tmp259 + _tmp259 * camera(4, 0);
  const Scalar _tmp261 = _tmp198 * _tmp211;
  const Scalar _tmp262 = _tmp137 + _tmp139 + _tmp140 + _tmp217;
  const Scalar _tmp263 = _tmp262 * _tmp65;
  const Scalar _tmp264 = _tmp116 + _tmp117 - _tmp118 + _tmp119;
  const Scalar _tmp265 = _tmp264 * _tmp67;
  const Scalar _tmp266 = _tmp123 + _tmp127 + _tmp213;
  const Scalar _tmp267 = _tmp130 + _tmp134 + _tmp215;
  const Scalar _tmp268 = _tmp155 * _tmp267 + _tmp266 * _tmp76;
  const Scalar _tmp269 = _tmp155 * _tmp262;
  const Scalar _tmp270 = _tmp266 * _tmp67;
  const Scalar _tmp271 = _tmp264 * _tmp76 + _tmp267 * _tmp65;
  const Scalar _tmp272 = -_tmp164 * _tmp266;
  const Scalar _tmp273 = -_tmp162 * _tmp264;
  const Scalar _tmp274 = -imu_t_cam(0, 0) * (_tmp263 + _tmp265 + _tmp268) -
                         imu_t_cam(1, 0) * (_tmp272 + _tmp273) -
                         imu_t_cam(2, 0) * (-_tmp269 - _tmp270 + _tmp271);
  const Scalar _tmp275 = _tmp262 * imu_R_cam_xyzw(2, 0) + _tmp264 * imu_R_cam_xyzw(3, 0) +
                         _tmp266 * imu_R_cam_xyzw(1, 0) - _tmp267 * imu_R_cam_xyzw(0, 0);
  const Scalar _tmp276 = _tmp275 * _tmp58;
  const Scalar _tmp277 = _tmp262 * imu_R_cam_xyzw(3, 0) - _tmp264 * imu_R_cam_xyzw(2, 0) -
                         _tmp266 * imu_R_cam_xyzw(0, 0) - _tmp267 * imu_R_cam_xyzw(1, 0);
  const Scalar _tmp278 = _tmp277 * _tmp47;
  const Scalar _tmp279 = _tmp262 * imu_R_cam_xyzw(0, 0) - _tmp264 * imu_R_cam_xyzw(1, 0) +
                         _tmp266 * imu_R_cam_xyzw(3, 0) + _tmp267 * imu_R_cam_xyzw(2, 0);
  const Scalar _tmp280 = _tmp262 * imu_R_cam_xyzw(1, 0) + _tmp264 * imu_R_cam_xyzw(0, 0) -
                         _tmp266 * imu_R_cam_xyzw(2, 0) + _tmp267 * imu_R_cam_xyzw(3, 0);
  const Scalar _tmp281 = _tmp151 * _tmp279 + _tmp280 * _tmp85;
  const Scalar _tmp282 = _tmp267 * _tmp67;
  const Scalar _tmp283 = _tmp262 * _tmp76;
  const Scalar _tmp284 = _tmp155 * _tmp264 + _tmp266 * _tmp65;
  const Scalar _tmp285 = -_tmp173 * _tmp267;
  const Scalar _tmp286 = -imu_t_cam(0, 0) * (_tmp273 + _tmp285) -
                         imu_t_cam(1, 0) * (-_tmp263 - _tmp265 + _tmp268) -
                         imu_t_cam(2, 0) * (_tmp282 + _tmp283 + _tmp284);
  const Scalar _tmp287 = -imu_t_cam(0, 0) * (-_tmp282 - _tmp283 + _tmp284) -
                         imu_t_cam(1, 0) * (_tmp269 + _tmp270 + _tmp271) -
                         imu_t_cam(2, 0) * (_tmp272 + _tmp285);
  const Scalar _tmp288 = _tmp279 * _tmp58;
  const Scalar _tmp289 = _tmp277 * _tmp85;
  const Scalar _tmp290 = _tmp151 * _tmp275 + _tmp280 * _tmp47;
  const Scalar _tmp291 = -_tmp144 * _tmp275;
  const Scalar _tmp292 = -_tmp182 * _tmp279;
  const Scalar _tmp293 = _tmp274 * _tmp75 + _tmp286 * _tmp88 + _tmp287 * _tmp60 +
                         _tmp72 * (_tmp288 + _tmp289 + _tmp290) + _tmp82 * (_tmp291 + _tmp292) +
                         _tmp84 * (-_tmp276 - _tmp278 + _tmp281);
  const Scalar _tmp294 = -_tmp147 * _tmp280;
  const Scalar _tmp295 = _tmp280 * _tmp58;
  const Scalar _tmp296 = _tmp151 * _tmp277;
  const Scalar _tmp297 = _tmp275 * _tmp85 + _tmp279 * _tmp47;
  const Scalar _tmp298 = _tmp100 * _tmp274 + _tmp101 * _tmp287 + _tmp102 * _tmp286 +
                         _tmp72 * (-_tmp295 - _tmp296 + _tmp297) +
                         _tmp82 * (_tmp276 + _tmp278 + _tmp281) + _tmp84 * (_tmp291 + _tmp294);
  const Scalar _tmp299 = _tmp274 * _tmp96 + _tmp286 * _tmp95 + _tmp287 * _tmp92 +
                         _tmp72 * (_tmp292 + _tmp294) + _tmp82 * (-_tmp288 - _tmp289 + _tmp290) +
                         _tmp84 * (_tmp295 + _tmp296 + _tmp297);
  const Scalar _tmp300 = _tmp192 * _tmp98;
  const Scalar _tmp301 = -_tmp252 * _tmp299 + _tmp293 * _tmp300;
  const Scalar _tmp302 = _tmp108 * _tmp299;
  const Scalar _tmp303 = _tmp201 * _tmp298 - _tmp257 * _tmp299;
  const Scalar _tmp304 = _tmp301 + _tmp303;
  const Scalar _tmp305 = _tmp204 * _tmp304 + _tmp205 * _tmp304 + _tmp304 * camera(4, 0);
  const Scalar _tmp306 = _tmp208 * _tmp98;
  const Scalar _tmp307 = _tmp256 * _tmp95;
  const Scalar _tmp308 = _tmp102 * _tmp187;
  const Scalar _tmp309 = _tmp102 * _tmp178;
  const Scalar _tmp310 = _tmp113 * _tmp88;
  const Scalar _tmp311 = _tmp252 * _tmp95;
  const Scalar _tmp312 = _tmp88 * _tmp98;
  const Scalar _tmp313 = _tmp192 * _tmp312;
  const Scalar _tmp314 = _tmp311 - _tmp313;
  const Scalar _tmp315 = _tmp257 * _tmp95;
  const Scalar _tmp316 = _tmp102 * _tmp201;
  const Scalar _tmp317 = _tmp315 - _tmp316;
  const Scalar _tmp318 = _tmp314 + _tmp317;
  const Scalar _tmp319 = _tmp204 * _tmp318 + _tmp205 * _tmp318 + _tmp318 * camera(4, 0);
  const Scalar _tmp320 = _tmp185 * _tmp95;
  const Scalar _tmp321 = _tmp191 * _tmp95;
  const Scalar _tmp322 = _tmp102 * _tmp188;
  const Scalar _tmp323 = _tmp210 * _tmp95;
  const Scalar _tmp324 = _tmp261 * _tmp95;
  const Scalar _tmp325 = _tmp178 * _tmp88;
  const Scalar _tmp326 = _tmp102 * _tmp207;
  const Scalar _tmp327 = _tmp115 * _tmp88;
  const Scalar _tmp328 = _tmp209 * _tmp95;
  const Scalar _tmp329 = _tmp208 * _tmp312;
  const Scalar _tmp330 = _tmp185 * _tmp96;
  const Scalar _tmp331 = _tmp100 * _tmp188;
  const Scalar _tmp332 = _tmp190 * _tmp96;
  const Scalar _tmp333 = 6 * _tmp332;
  const Scalar _tmp334 = _tmp75 * _tmp98;
  const Scalar _tmp335 = _tmp192 * _tmp334;
  const Scalar _tmp336 = _tmp252 * _tmp96;
  const Scalar _tmp337 = -_tmp335 + _tmp336;
  const Scalar _tmp338 = _tmp256 * _tmp96;
  const Scalar _tmp339 = _tmp100 * _tmp178;
  const Scalar _tmp340 = _tmp100 * _tmp201;
  const Scalar _tmp341 = 2 * _tmp332;
  const Scalar _tmp342 = -_tmp340 + _tmp341;
  const Scalar _tmp343 = _tmp337 + _tmp342;
  const Scalar _tmp344 = _tmp204 * _tmp343 + _tmp205 * _tmp343 + _tmp343 * camera(4, 0);
  const Scalar _tmp345 = _tmp113 * _tmp75;
  const Scalar _tmp346 = _tmp100 * _tmp187;
  const Scalar _tmp347 = _tmp208 * _tmp334;
  const Scalar _tmp348 = _tmp209 * _tmp96;
  const Scalar _tmp349 = _tmp261 * _tmp96;
  const Scalar _tmp350 = _tmp178 * _tmp75;
  const Scalar _tmp351 = _tmp115 * _tmp75;
  const Scalar _tmp352 = _tmp210 * _tmp96;
  const Scalar _tmp353 = _tmp100 * _tmp207;
  const Scalar _tmp354 = _tmp101 * _tmp178;
  const Scalar _tmp355 = _tmp101 * _tmp187;
  const Scalar _tmp356 = _tmp101 * _tmp188;
  const Scalar _tmp357 = _tmp191 * _tmp92;
  const Scalar _tmp358 = _tmp300 * _tmp60;
  const Scalar _tmp359 = _tmp252 * _tmp92;
  const Scalar _tmp360 = -_tmp358 + _tmp359;
  const Scalar _tmp361 = _tmp256 * _tmp92;
  const Scalar _tmp362 = _tmp185 * _tmp92;
  const Scalar _tmp363 = _tmp101 * _tmp201;
  const Scalar _tmp364 = _tmp257 * _tmp92;
  const Scalar _tmp365 = -_tmp363 + _tmp364;
  const Scalar _tmp366 = _tmp360 + _tmp365;
  const Scalar _tmp367 = _tmp204 * _tmp366 + _tmp205 * _tmp366 + _tmp366 * camera(4, 0);
  const Scalar _tmp368 = _tmp113 * _tmp60;
  const Scalar _tmp369 = _tmp101 * _tmp207;
  const Scalar _tmp370 = _tmp306 * _tmp60;
  const Scalar _tmp371 = _tmp209 * _tmp92;
  const Scalar _tmp372 = _tmp210 * _tmp92;
  const Scalar _tmp373 = _tmp178 * _tmp60;
  const Scalar _tmp374 = _tmp261 * _tmp92;
  const Scalar _tmp375 = _tmp115 * _tmp60;
  const Scalar _tmp376 = (Scalar(1) / Scalar(2)) * _tmp21;
  const Scalar _tmp377 = (Scalar(1) / Scalar(2)) * _tmp28;
  const Scalar _tmp378 = (Scalar(1) / Scalar(2)) * _tmp34;
  const Scalar _tmp379 = (Scalar(1) / Scalar(2)) * _tmp40;
  const Scalar _tmp380 = -_tmp376 - _tmp377 + _tmp378 - _tmp379;
  const Scalar _tmp381 = _tmp151 * _tmp380;
  const Scalar _tmp382 = (Scalar(1) / Scalar(2)) * _tmp49;
  const Scalar _tmp383 = (Scalar(1) / Scalar(2)) * _tmp50;
  const Scalar _tmp384 = (Scalar(1) / Scalar(2)) * _tmp51;
  const Scalar _tmp385 = (Scalar(1) / Scalar(2)) * _tmp52;
  const Scalar _tmp386 = -_tmp382 - _tmp383 - _tmp384 + _tmp385;
  const Scalar _tmp387 = _tmp386 * _tmp85;
  const Scalar _tmp388 = (Scalar(1) / Scalar(2)) * _tmp42;
  const Scalar _tmp389 = (Scalar(1) / Scalar(2)) * _tmp43;
  const Scalar _tmp390 = (Scalar(1) / Scalar(2)) * _tmp44;
  const Scalar _tmp391 = (Scalar(1) / Scalar(2)) * _tmp45;
  const Scalar _tmp392 = -_tmp388 + _tmp389 + _tmp390 + _tmp391;
  const Scalar _tmp393 = _tmp392 * _tmp47;
  const Scalar _tmp394 = -Scalar(1) / Scalar(2) * _tmp54 - Scalar(1) / Scalar(2) * _tmp55 -
                         Scalar(1) / Scalar(2) * _tmp56 + (Scalar(1) / Scalar(2)) * _tmp57;
  const Scalar _tmp395 = _tmp394 * _tmp58;
  const Scalar _tmp396 = -_tmp395;
  const Scalar _tmp397 = -_tmp147 * _tmp392;
  const Scalar _tmp398 = -_tmp182 * _tmp394;
  const Scalar _tmp399 = _tmp151 * _tmp386;
  const Scalar _tmp400 = _tmp392 * _tmp58;
  const Scalar _tmp401 = _tmp380 * _tmp85;
  const Scalar _tmp402 = _tmp394 * _tmp47;
  const Scalar _tmp403 = _tmp401 + _tmp402;
  const Scalar _tmp404 = _tmp72 * (_tmp397 + _tmp398) +
                         _tmp82 * (_tmp381 - _tmp387 + _tmp393 + _tmp396) +
                         _tmp84 * (_tmp399 + _tmp400 + _tmp403);
  const Scalar _tmp405 = _tmp392 * _tmp85;
  const Scalar _tmp406 = _tmp380 * _tmp58;
  const Scalar _tmp407 = _tmp386 * _tmp47;
  const Scalar _tmp408 = _tmp151 * _tmp394;
  const Scalar _tmp409 = _tmp407 + _tmp408;
  const Scalar _tmp410 = -_tmp144 * _tmp380;
  const Scalar _tmp411 = _tmp72 * (-_tmp399 - _tmp400 + _tmp403) +
                         _tmp82 * (_tmp405 + _tmp406 + _tmp409) + _tmp84 * (_tmp397 + _tmp410);
  const Scalar _tmp412 = _tmp381 + _tmp395;
  const Scalar _tmp413 = _tmp72 * (_tmp387 + _tmp393 + _tmp412) + _tmp82 * (_tmp398 + _tmp410) +
                         _tmp84 * (_tmp405 - _tmp406 - _tmp407 + _tmp408);
  const Scalar _tmp414 = -_tmp252 * _tmp404 + _tmp300 * _tmp413;
  const Scalar _tmp415 = _tmp201 * _tmp411 - _tmp257 * _tmp404;
  const Scalar _tmp416 = _tmp414 + _tmp415;
  const Scalar _tmp417 = _tmp204 * _tmp416 + _tmp205 * _tmp416 + _tmp416 * camera(4, 0);
  const Scalar _tmp418 = _tmp382 + _tmp383 + _tmp384 - _tmp385;
  const Scalar _tmp419 = _tmp388 - _tmp389 - _tmp390 - _tmp391;
  const Scalar _tmp420 = _tmp419 * _tmp47;
  const Scalar _tmp421 = _tmp418 * _tmp85 + _tmp420;
  const Scalar _tmp422 = _tmp380 * _tmp47;
  const Scalar _tmp423 = _tmp418 * _tmp58;
  const Scalar _tmp424 = _tmp151 * _tmp419;
  const Scalar _tmp425 = _tmp394 * _tmp85;
  const Scalar _tmp426 = _tmp424 + _tmp425;
  const Scalar _tmp427 = -_tmp144 * _tmp418;
  const Scalar _tmp428 = -_tmp147 * _tmp394;
  const Scalar _tmp429 = _tmp72 * (-_tmp381 + _tmp396 + _tmp421) +
                         _tmp82 * (_tmp422 + _tmp423 + _tmp426) + _tmp84 * (_tmp427 + _tmp428);
  const Scalar _tmp430 = -_tmp182 * _tmp419;
  const Scalar _tmp431 = _tmp151 * _tmp418;
  const Scalar _tmp432 = _tmp419 * _tmp58;
  const Scalar _tmp433 = _tmp72 * (_tmp428 + _tmp430) +
                         _tmp82 * (-_tmp401 + _tmp402 + _tmp431 - _tmp432) +
                         _tmp84 * (_tmp412 + _tmp421);
  const Scalar _tmp434 = _tmp72 * (_tmp403 + _tmp431 + _tmp432) + _tmp82 * (_tmp427 + _tmp430) +
                         _tmp84 * (-_tmp422 - _tmp423 + _tmp426);
  const Scalar _tmp435 = -_tmp252 * _tmp433 + _tmp300 * _tmp434;
  const Scalar _tmp436 = _tmp201 * _tmp429 - _tmp257 * _tmp433;
  const Scalar _tmp437 = _tmp435 + _tmp436;
  const Scalar _tmp438 = _tmp204 * _tmp437 + _tmp205 * _tmp437 + _tmp437 * camera(4, 0);
  const Scalar _tmp439 = _tmp376 + _tmp377 - _tmp378 + _tmp379;
  const Scalar _tmp440 = _tmp151 * _tmp439 + _tmp387;
  const Scalar _tmp441 = _tmp439 * _tmp47;
  const Scalar _tmp442 = _tmp386 * _tmp58;
  const Scalar _tmp443 = -_tmp147 * _tmp386;
  const Scalar _tmp444 = -_tmp144 * _tmp394;
  const Scalar _tmp445 = _tmp72 * (-_tmp424 + _tmp425 + _tmp441 - _tmp442) +
                         _tmp82 * (_tmp395 + _tmp420 + _tmp440) + _tmp84 * (_tmp443 + _tmp444);
  const Scalar _tmp446 = _tmp419 * _tmp85;
  const Scalar _tmp447 = _tmp439 * _tmp58;
  const Scalar _tmp448 = -_tmp182 * _tmp439;
  const Scalar _tmp449 = _tmp72 * (_tmp443 + _tmp448) + _tmp82 * (_tmp409 - _tmp446 - _tmp447) +
                         _tmp84 * (_tmp426 + _tmp441 + _tmp442);
  const Scalar _tmp450 = _tmp72 * (_tmp409 + _tmp446 + _tmp447) + _tmp82 * (_tmp444 + _tmp448) +
                         _tmp84 * (_tmp396 - _tmp420 + _tmp440);
  const Scalar _tmp451 = _tmp450 * _tmp98;
  const Scalar _tmp452 = _tmp195 * _tmp449;
  const Scalar _tmp453 = _tmp192 * _tmp451 - 2 * _tmp452;
  const Scalar _tmp454 = _tmp201 * _tmp445 - _tmp257 * _tmp449;
  const Scalar _tmp455 = _tmp453 + _tmp454;
  const Scalar _tmp456 = _tmp204 * _tmp455 + _tmp205 * _tmp455 + _tmp455 * camera(4, 0);
  const Scalar _tmp457 = -_tmp77;
  const Scalar _tmp458 = _tmp457 + _tmp83;
  const Scalar _tmp459 = -_tmp66;
  const Scalar _tmp460 = _tmp459 + _tmp68;
  const Scalar _tmp461 = _tmp80 - 1;
  const Scalar _tmp462 = _tmp461 + _tmp63;
  const Scalar _tmp463 = _tmp458 * _tmp96 + _tmp460 * _tmp92 + _tmp462 * _tmp95;
  const Scalar _tmp464 = _tmp100 * _tmp458 + _tmp101 * _tmp460 + _tmp102 * _tmp462;
  const Scalar _tmp465 = _tmp201 * _tmp464 - _tmp257 * _tmp463;
  const Scalar _tmp466 = _tmp458 * _tmp75 + _tmp460 * _tmp60 + _tmp462 * _tmp88;
  const Scalar _tmp467 = -_tmp252 * _tmp463 + _tmp300 * _tmp466;
  const Scalar _tmp468 = _tmp465 + _tmp467;
  const Scalar _tmp469 = _tmp204 * _tmp468 + _tmp205 * _tmp468 + _tmp468 * camera(4, 0);
  const Scalar _tmp470 = _tmp461 + _tmp61;
  const Scalar _tmp471 = _tmp457 + _tmp78;
  const Scalar _tmp472 = -_tmp70;
  const Scalar _tmp473 = _tmp472 + _tmp79;
  const Scalar _tmp474 = _tmp100 * _tmp470 + _tmp101 * _tmp473 + _tmp102 * _tmp471;
  const Scalar _tmp475 = _tmp470 * _tmp96 + _tmp471 * _tmp95 + _tmp473 * _tmp92;
  const Scalar _tmp476 = _tmp470 * _tmp75 + _tmp471 * _tmp88 + _tmp473 * _tmp60;
  const Scalar _tmp477 = _tmp195 * _tmp475;
  const Scalar _tmp478 = _tmp300 * _tmp476 - 2 * _tmp477;
  const Scalar _tmp479 = _tmp201 * _tmp474 - _tmp257 * _tmp475;
  const Scalar _tmp480 = _tmp478 + _tmp479;
  const Scalar _tmp481 = _tmp204 * _tmp480 + _tmp205 * _tmp480 + _tmp480 * camera(4, 0);
  const Scalar _tmp482 = _tmp459 + _tmp69;
  const Scalar _tmp483 = _tmp61 + _tmp63 - 1;
  const Scalar _tmp484 = _tmp472 + _tmp71;
  const Scalar _tmp485 = _tmp482 * _tmp95 + _tmp483 * _tmp92 + _tmp484 * _tmp96;
  const Scalar _tmp486 = _tmp100 * _tmp484 + _tmp101 * _tmp483 + _tmp102 * _tmp482;
  const Scalar _tmp487 = _tmp482 * _tmp88 + _tmp483 * _tmp60 + _tmp484 * _tmp75;
  const Scalar _tmp488 = _tmp487 * _tmp98;
  const Scalar _tmp489 = _tmp192 * _tmp488 - _tmp252 * _tmp485;
  const Scalar _tmp490 = _tmp201 * _tmp486 - _tmp257 * _tmp485;
  const Scalar _tmp491 = _tmp489 + _tmp490;
  const Scalar _tmp492 = _tmp204 * _tmp491 + _tmp205 * _tmp491 + _tmp491 * camera(4, 0);
  const Scalar _tmp493 = _tmp103 * _tmp488;
  const Scalar _tmp494 = -_tmp11;
  const Scalar _tmp495 = _tmp7 * angular_velocity_imu(2, 0);
  const Scalar _tmp496 = _tmp495 * world_R_imu_xyzw(2, 0);
  const Scalar _tmp497 = [&]() {
    const Scalar base = row_time;
    return base * base * base;
  }();
  const Scalar _tmp498 = _tmp497 / (_tmp4 * std::sqrt(_tmp4));
  const Scalar _tmp499 = _tmp498 * angular_velocity_imu(0, 0);
  const Scalar _tmp500 = _tmp496 * _tmp499;
  const Scalar _tmp501 = _tmp497 / _tmp4;
  const Scalar _tmp502 = _tmp138 * _tmp501;
  const Scalar _tmp503 = angular_velocity_imu(0, 0) * angular_velocity_imu(2, 0);
  const Scalar _tmp504 = _tmp502 * _tmp503;
  const Scalar _tmp505 = _tmp0 * _tmp498;
  const Scalar _tmp506 = _tmp505 * _tmp7;
  const Scalar _tmp507 = _tmp133 * _tmp501;
  const Scalar _tmp508 = (Scalar(1) / Scalar(2)) * _tmp1 * _tmp8;
  const Scalar _tmp509 = _tmp15 * _tmp508;
  const Scalar _tmp510 = angular_velocity_imu(0, 0) * angular_velocity_imu(1, 0);
  const Scalar _tmp511 = _tmp501 * _tmp510;
  const Scalar _tmp512 = _tmp7 * world_R_imu_xyzw(1, 0);
  const Scalar _tmp513 = _tmp498 * angular_velocity_imu(1, 0);
  const Scalar _tmp514 = _tmp513 * angular_velocity_imu(0, 0);
  const Scalar _tmp515 = -_tmp123 * _tmp511 + _tmp512 * _tmp514;
  const Scalar _tmp516 = -_tmp0 * _tmp507 + _tmp494 + _tmp500 - _tmp504 +
                         _tmp506 * world_R_imu_xyzw(0, 0) - _tmp509 * angular_velocity_imu(0, 0) +
                         _tmp515;
  const Scalar _tmp517 = _tmp155 * _tmp516;
  const Scalar _tmp518 = _tmp502 * _tmp510;
  const Scalar _tmp519 = _tmp513 * _tmp7;
  const Scalar _tmp520 = _tmp519 * world_R_imu_xyzw(2, 0);
  const Scalar _tmp521 = _tmp520 * angular_velocity_imu(0, 0);
  const Scalar _tmp522 = _tmp501 * _tmp503;
  const Scalar _tmp523 = _tmp123 * _tmp522;
  const Scalar _tmp524 = _tmp512 * angular_velocity_imu(2, 0);
  const Scalar _tmp525 = _tmp499 * _tmp524;
  const Scalar _tmp526 = _tmp0 * _tmp501;
  const Scalar _tmp527 = angular_velocity_imu(0, 0) * world_R_imu_xyzw(0, 0);
  const Scalar _tmp528 = _tmp119 * _tmp526 - _tmp15 * _tmp505 + _tmp16 - _tmp508 * _tmp527 * _tmp7 -
                         _tmp518 + _tmp521 + _tmp523 - _tmp525;
  const Scalar _tmp529 = _tmp528 * _tmp67;
  const Scalar _tmp530 = -_tmp24;
  const Scalar _tmp531 = _tmp519 * _tmp527;
  const Scalar _tmp532 = _tmp507 * angular_velocity_imu(1, 0);
  const Scalar _tmp533 = _tmp532 * angular_velocity_imu(0, 0);
  const Scalar _tmp534 = _tmp508 * world_R_imu_xyzw(2, 0);
  const Scalar _tmp535 = _tmp15 * angular_velocity_imu(2, 0);
  const Scalar _tmp536 = _tmp119 * _tmp522 - _tmp499 * _tmp535;
  const Scalar _tmp537 = -_tmp123 * _tmp526 + _tmp506 * world_R_imu_xyzw(1, 0) + _tmp530 - _tmp531 +
                         _tmp533 - _tmp534 * _tmp7 * angular_velocity_imu(0, 0) + _tmp536;
  const Scalar _tmp538 = _tmp508 * _tmp512;
  const Scalar _tmp539 = _tmp119 * _tmp511 - _tmp15 * _tmp514;
  const Scalar _tmp540 = _tmp495 * _tmp498 * _tmp527 - _tmp503 * _tmp507;
  const Scalar _tmp541 = _tmp0 * _tmp502 + _tmp13 - _tmp506 * world_R_imu_xyzw(2, 0) -
                         _tmp538 * angular_velocity_imu(0, 0) + _tmp539 + _tmp540;
  const Scalar _tmp542 = _tmp537 * _tmp76 + _tmp541 * _tmp65;
  const Scalar _tmp543 = -_tmp162 * _tmp537;
  const Scalar _tmp544 = -_tmp164 * _tmp528;
  const Scalar _tmp545 = _tmp516 * _tmp65;
  const Scalar _tmp546 = _tmp537 * _tmp67;
  const Scalar _tmp547 = _tmp155 * _tmp541 + _tmp528 * _tmp76;
  const Scalar _tmp548 = -imu_t_cam(0, 0) * (_tmp545 + _tmp546 + _tmp547) -
                         imu_t_cam(1, 0) * (_tmp543 + _tmp544) -
                         imu_t_cam(2, 0) * (-_tmp517 - _tmp529 + _tmp542);
  const Scalar _tmp549 = _tmp516 * _tmp76;
  const Scalar _tmp550 = _tmp541 * _tmp67;
  const Scalar _tmp551 = _tmp155 * _tmp537 + _tmp528 * _tmp65;
  const Scalar _tmp552 = -_tmp173 * _tmp541;
  const Scalar _tmp553 = -imu_t_cam(0, 0) * (-_tmp549 - _tmp550 + _tmp551) -
                         imu_t_cam(1, 0) * (_tmp517 + _tmp529 + _tmp542) -
                         imu_t_cam(2, 0) * (_tmp544 + _tmp552);
  const Scalar _tmp554 = _tmp516 * imu_R_cam_xyzw(1, 0) - _tmp528 * imu_R_cam_xyzw(2, 0) +
                         _tmp537 * imu_R_cam_xyzw(0, 0) + _tmp541 * imu_R_cam_xyzw(3, 0);
  const Scalar _tmp555 = _tmp554 * _tmp58;
  const Scalar _tmp556 = _tmp516 * imu_R_cam_xyzw(3, 0) - _tmp528 * imu_R_cam_xyzw(0, 0) -
                         _tmp537 * imu_R_cam_xyzw(2, 0) - _tmp541 * imu_R_cam_xyzw(1, 0);
  const Scalar _tmp557 = _tmp151 * _tmp556;
  const Scalar _tmp558 = _tmp516 * imu_R_cam_xyzw(0, 0) + _tmp528 * imu_R_cam_xyzw(3, 0) -
                         _tmp537 * imu_R_cam_xyzw(1, 0) + _tmp541 * imu_R_cam_xyzw(2, 0);
  const Scalar _tmp559 = _tmp516 * imu_R_cam_xyzw(2, 0) + _tmp528 * imu_R_cam_xyzw(1, 0) +
                         _tmp537 * imu_R_cam_xyzw(3, 0) - _tmp541 * imu_R_cam_xyzw(0, 0);
  const Scalar _tmp560 = _tmp47 * _tmp558 + _tmp559 * _tmp85;
  const Scalar _tmp561 = -imu_t_cam(0, 0) * (_tmp543 + _tmp552) -
                         imu_t_cam(1, 0) * (-_tmp545 - _tmp546 + _tmp547) -
                         imu_t_cam(2, 0) * (_tmp549 + _tmp550 + _tmp551);
  const Scalar _tmp562 = _tmp558 * _tmp58;
  const Scalar _tmp563 = _tmp556 * _tmp85;
  const Scalar _tmp564 = _tmp151 * _tmp559 + _tmp47 * _tmp554;
  const Scalar _tmp565 = -_tmp182 * _tmp558;
  const Scalar _tmp566 = -_tmp147 * _tmp554;
  const Scalar _tmp567 = _tmp548 * _tmp96 + _tmp553 * _tmp92 + _tmp561 * _tmp95 +
                         _tmp72 * (_tmp565 + _tmp566) + _tmp82 * (-_tmp562 - _tmp563 + _tmp564) +
                         _tmp84 * (_tmp555 + _tmp557 + _tmp560);
  const Scalar _tmp568 = -_tmp144 * _tmp559;
  const Scalar _tmp569 = _tmp47 * _tmp556;
  const Scalar _tmp570 = _tmp559 * _tmp58;
  const Scalar _tmp571 = _tmp151 * _tmp558 + _tmp554 * _tmp85;
  const Scalar _tmp572 = _tmp100 * _tmp548 + _tmp101 * _tmp553 + _tmp102 * _tmp561 +
                         _tmp72 * (-_tmp555 - _tmp557 + _tmp560) +
                         _tmp82 * (_tmp569 + _tmp570 + _tmp571) + _tmp84 * (_tmp566 + _tmp568);
  const Scalar _tmp573 = _tmp201 * _tmp572 - _tmp257 * _tmp567;
  const Scalar _tmp574 = _tmp548 * _tmp75 + _tmp553 * _tmp60 + _tmp561 * _tmp88 +
                         _tmp72 * (_tmp562 + _tmp563 + _tmp564) + _tmp82 * (_tmp565 + _tmp568) +
                         _tmp84 * (-_tmp569 - _tmp570 + _tmp571);
  const Scalar _tmp575 = -_tmp252 * _tmp567 + _tmp300 * _tmp574;
  const Scalar _tmp576 = _tmp573 + _tmp575;
  const Scalar _tmp577 = _tmp204 * _tmp576 + _tmp205 * _tmp576 + _tmp576 * camera(4, 0);
  const Scalar _tmp578 = _tmp513 * _tmp524;
  const Scalar _tmp579 = angular_velocity_imu(1, 0) * angular_velocity_imu(2, 0);
  const Scalar _tmp580 = _tmp501 * _tmp579;
  const Scalar _tmp581 = _tmp123 * _tmp580;
  const Scalar _tmp582 = -_tmp13;
  const Scalar _tmp583 = _tmp3 * _tmp498;
  const Scalar _tmp584 = _tmp583 * _tmp7;
  const Scalar _tmp585 = _tmp508 * world_R_imu_xyzw(0, 0);
  const Scalar _tmp586 = _tmp7 * angular_velocity_imu(1, 0);
  const Scalar _tmp587 = -_tmp3 * _tmp502 + _tmp539 - _tmp578 + _tmp581 + _tmp582 +
                         _tmp584 * world_R_imu_xyzw(2, 0) - _tmp585 * _tmp586;
  const Scalar _tmp588 = _tmp587 * _tmp67;
  const Scalar _tmp589 = _tmp3 * _tmp501;
  const Scalar _tmp590 = -_tmp502 * _tmp579 + _tmp520 * angular_velocity_imu(2, 0);
  const Scalar _tmp591 = -_tmp123 * _tmp589 - _tmp509 * angular_velocity_imu(1, 0) +
                         _tmp512 * _tmp583 + _tmp530 + _tmp531 - _tmp533 + _tmp590;
  const Scalar _tmp592 = _tmp155 * _tmp591;
  const Scalar _tmp593 = _tmp119 * _tmp580 - _tmp513 * _tmp535;
  const Scalar _tmp594 = _tmp11 + _tmp3 * _tmp507 + _tmp515 - _tmp534 * _tmp586 -
                         _tmp584 * world_R_imu_xyzw(0, 0) + _tmp593;
  const Scalar _tmp595 = _tmp532 * angular_velocity_imu(2, 0);
  const Scalar _tmp596 = _tmp519 * angular_velocity_imu(2, 0) * world_R_imu_xyzw(0, 0);
  const Scalar _tmp597 = _tmp119 * _tmp589 - _tmp15 * _tmp583 + _tmp16 + _tmp518 - _tmp521 -
                         _tmp538 * angular_velocity_imu(1, 0) - _tmp595 + _tmp596;
  const Scalar _tmp598 = _tmp594 * _tmp76 + _tmp597 * _tmp65;
  const Scalar _tmp599 = -_tmp162 * _tmp594;
  const Scalar _tmp600 = -_tmp164 * _tmp587;
  const Scalar _tmp601 = _tmp594 * _tmp67;
  const Scalar _tmp602 = _tmp591 * _tmp65;
  const Scalar _tmp603 = _tmp155 * _tmp597 + _tmp587 * _tmp76;
  const Scalar _tmp604 = -imu_t_cam(0, 0) * (_tmp601 + _tmp602 + _tmp603) -
                         imu_t_cam(1, 0) * (_tmp599 + _tmp600) -
                         imu_t_cam(2, 0) * (-_tmp588 - _tmp592 + _tmp598);
  const Scalar _tmp605 = -_tmp587 * imu_R_cam_xyzw(0, 0) + _tmp591 * imu_R_cam_xyzw(3, 0) -
                         _tmp594 * imu_R_cam_xyzw(2, 0) - _tmp597 * imu_R_cam_xyzw(1, 0);
  const Scalar _tmp606 = _tmp47 * _tmp605;
  const Scalar _tmp607 = _tmp587 * imu_R_cam_xyzw(1, 0) + _tmp591 * imu_R_cam_xyzw(2, 0) +
                         _tmp594 * imu_R_cam_xyzw(3, 0) - _tmp597 * imu_R_cam_xyzw(0, 0);
  const Scalar _tmp608 = _tmp58 * _tmp607;
  const Scalar _tmp609 = -_tmp587 * imu_R_cam_xyzw(2, 0) + _tmp591 * imu_R_cam_xyzw(1, 0) +
                         _tmp594 * imu_R_cam_xyzw(0, 0) + _tmp597 * imu_R_cam_xyzw(3, 0);
  const Scalar _tmp610 = _tmp587 * imu_R_cam_xyzw(3, 0) + _tmp591 * imu_R_cam_xyzw(0, 0) -
                         _tmp594 * imu_R_cam_xyzw(1, 0) + _tmp597 * imu_R_cam_xyzw(2, 0);
  const Scalar _tmp611 = _tmp151 * _tmp610 + _tmp609 * _tmp85;
  const Scalar _tmp612 = _tmp151 * _tmp605;
  const Scalar _tmp613 = _tmp58 * _tmp609;
  const Scalar _tmp614 = _tmp47 * _tmp610 + _tmp607 * _tmp85;
  const Scalar _tmp615 = -_tmp147 * _tmp609;
  const Scalar _tmp616 = -_tmp144 * _tmp607;
  const Scalar _tmp617 = -_tmp173 * _tmp597;
  const Scalar _tmp618 = _tmp591 * _tmp76;
  const Scalar _tmp619 = _tmp597 * _tmp67;
  const Scalar _tmp620 = _tmp155 * _tmp594 + _tmp587 * _tmp65;
  const Scalar _tmp621 = -imu_t_cam(0, 0) * (_tmp599 + _tmp617) -
                         imu_t_cam(1, 0) * (-_tmp601 - _tmp602 + _tmp603) -
                         imu_t_cam(2, 0) * (_tmp618 + _tmp619 + _tmp620);
  const Scalar _tmp622 = -imu_t_cam(0, 0) * (-_tmp618 - _tmp619 + _tmp620) -
                         imu_t_cam(1, 0) * (_tmp588 + _tmp592 + _tmp598) -
                         imu_t_cam(2, 0) * (_tmp600 + _tmp617);
  const Scalar _tmp623 = _tmp100 * _tmp604 + _tmp101 * _tmp622 + _tmp102 * _tmp621 +
                         _tmp72 * (-_tmp612 - _tmp613 + _tmp614) +
                         _tmp82 * (_tmp606 + _tmp608 + _tmp611) + _tmp84 * (_tmp615 + _tmp616);
  const Scalar _tmp624 = -_tmp182 * _tmp610;
  const Scalar _tmp625 = _tmp605 * _tmp85;
  const Scalar _tmp626 = _tmp58 * _tmp610;
  const Scalar _tmp627 = _tmp151 * _tmp607 + _tmp47 * _tmp609;
  const Scalar _tmp628 = _tmp60 * _tmp622 + _tmp604 * _tmp75 + _tmp621 * _tmp88 +
                         _tmp72 * (_tmp625 + _tmp626 + _tmp627) + _tmp82 * (_tmp616 + _tmp624) +
                         _tmp84 * (-_tmp606 - _tmp608 + _tmp611);
  const Scalar _tmp629 = _tmp604 * _tmp96 + _tmp621 * _tmp95 + _tmp622 * _tmp92 +
                         _tmp72 * (_tmp615 + _tmp624) + _tmp82 * (-_tmp625 - _tmp626 + _tmp627) +
                         _tmp84 * (_tmp612 + _tmp613 + _tmp614);
  const Scalar _tmp630 = _tmp628 * _tmp98;
  const Scalar _tmp631 = _tmp192 * _tmp630 - _tmp252 * _tmp629;
  const Scalar _tmp632 = _tmp201 * _tmp623 - _tmp257 * _tmp629;
  const Scalar _tmp633 = _tmp631 + _tmp632;
  const Scalar _tmp634 = _tmp204 * _tmp633 + _tmp205 * _tmp633 + _tmp633 * camera(4, 0);
  const Scalar _tmp635 = _tmp2 * _tmp501;
  const Scalar _tmp636 = _tmp2 * _tmp498;
  const Scalar _tmp637 = _tmp636 * _tmp7;
  const Scalar _tmp638 = -_tmp133 * _tmp635 + _tmp494 - _tmp500 + _tmp504 -
                         _tmp538 * angular_velocity_imu(2, 0) + _tmp593 +
                         _tmp637 * world_R_imu_xyzw(0, 0);
  const Scalar _tmp639 = -_tmp138 * _tmp635 - _tmp508 * _tmp535 + _tmp540 + _tmp578 - _tmp581 +
                         _tmp582 + _tmp637 * world_R_imu_xyzw(2, 0);
  const Scalar _tmp640 = _tmp119 * _tmp635 - _tmp15 * _tmp636 + _tmp16 - _tmp496 * _tmp508 -
                         _tmp523 + _tmp525 + _tmp595 - _tmp596;
  const Scalar _tmp641 = _tmp123 * _tmp635 + _tmp24 - _tmp495 * _tmp585 + _tmp536 + _tmp590 -
                         _tmp637 * world_R_imu_xyzw(1, 0);
  const Scalar _tmp642 = _tmp638 * imu_R_cam_xyzw(3, 0) + _tmp639 * imu_R_cam_xyzw(1, 0) +
                         _tmp640 * imu_R_cam_xyzw(0, 0) - _tmp641 * imu_R_cam_xyzw(2, 0);
  const Scalar _tmp643 = _tmp58 * _tmp642;
  const Scalar _tmp644 = -_tmp638 * imu_R_cam_xyzw(1, 0) + _tmp639 * imu_R_cam_xyzw(3, 0) -
                         _tmp640 * imu_R_cam_xyzw(2, 0) - _tmp641 * imu_R_cam_xyzw(0, 0);
  const Scalar _tmp645 = _tmp151 * _tmp644;
  const Scalar _tmp646 = -_tmp638 * imu_R_cam_xyzw(0, 0) + _tmp639 * imu_R_cam_xyzw(2, 0) +
                         _tmp640 * imu_R_cam_xyzw(3, 0) + _tmp641 * imu_R_cam_xyzw(1, 0);
  const Scalar _tmp647 = _tmp638 * imu_R_cam_xyzw(2, 0) + _tmp639 * imu_R_cam_xyzw(0, 0) -
                         _tmp640 * imu_R_cam_xyzw(1, 0) + _tmp641 * imu_R_cam_xyzw(3, 0);
  const Scalar _tmp648 = _tmp47 * _tmp647 + _tmp646 * _tmp85;
  const Scalar _tmp649 = -_tmp144 * _tmp646;
  const Scalar _tmp650 = -_tmp147 * _tmp642;
  const Scalar _tmp651 = _tmp639 * _tmp76;
  const Scalar _tmp652 = _tmp638 * _tmp67;
  const Scalar _tmp653 = _tmp155 * _tmp640 + _tmp641 * _tmp65;
  const Scalar _tmp654 = -_tmp162 * _tmp640;
  const Scalar _tmp655 = -_tmp173 * _tmp638;
  const Scalar _tmp656 = _tmp640 * _tmp67;
  const Scalar _tmp657 = _tmp639 * _tmp65;
  const Scalar _tmp658 = _tmp155 * _tmp638 + _tmp641 * _tmp76;
  const Scalar _tmp659 = -imu_t_cam(0, 0) * (_tmp654 + _tmp655) -
                         imu_t_cam(1, 0) * (-_tmp656 - _tmp657 + _tmp658) -
                         imu_t_cam(2, 0) * (_tmp651 + _tmp652 + _tmp653);
  const Scalar _tmp660 = _tmp58 * _tmp646;
  const Scalar _tmp661 = _tmp47 * _tmp644;
  const Scalar _tmp662 = _tmp151 * _tmp647 + _tmp642 * _tmp85;
  const Scalar _tmp663 = -_tmp164 * _tmp641;
  const Scalar _tmp664 = _tmp641 * _tmp67;
  const Scalar _tmp665 = _tmp155 * _tmp639;
  const Scalar _tmp666 = _tmp638 * _tmp65 + _tmp640 * _tmp76;
  const Scalar _tmp667 = -imu_t_cam(0, 0) * (_tmp656 + _tmp657 + _tmp658) -
                         imu_t_cam(1, 0) * (_tmp654 + _tmp663) -
                         imu_t_cam(2, 0) * (-_tmp664 - _tmp665 + _tmp666);
  const Scalar _tmp668 = -imu_t_cam(0, 0) * (-_tmp651 - _tmp652 + _tmp653) -
                         imu_t_cam(1, 0) * (_tmp664 + _tmp665 + _tmp666) -
                         imu_t_cam(2, 0) * (_tmp655 + _tmp663);
  const Scalar _tmp669 = _tmp100 * _tmp667 + _tmp101 * _tmp668 + _tmp102 * _tmp659 +
                         _tmp72 * (-_tmp643 - _tmp645 + _tmp648) +
                         _tmp82 * (_tmp660 + _tmp661 + _tmp662) + _tmp84 * (_tmp649 + _tmp650);
  const Scalar _tmp670 = -_tmp182 * _tmp647;
  const Scalar _tmp671 = _tmp58 * _tmp647;
  const Scalar _tmp672 = _tmp644 * _tmp85;
  const Scalar _tmp673 = _tmp151 * _tmp646 + _tmp47 * _tmp642;
  const Scalar _tmp674 = _tmp659 * _tmp95 + _tmp667 * _tmp96 + _tmp668 * _tmp92 +
                         _tmp72 * (_tmp650 + _tmp670) + _tmp82 * (-_tmp671 - _tmp672 + _tmp673) +
                         _tmp84 * (_tmp643 + _tmp645 + _tmp648);
  const Scalar _tmp675 = _tmp195 * _tmp674;
  const Scalar _tmp676 = _tmp60 * _tmp668 + _tmp659 * _tmp88 + _tmp667 * _tmp75 +
                         _tmp72 * (_tmp671 + _tmp672 + _tmp673) + _tmp82 * (_tmp649 + _tmp670) +
                         _tmp84 * (-_tmp660 - _tmp661 + _tmp662);
  const Scalar _tmp677 = _tmp300 * _tmp676 - 2 * _tmp675;
  const Scalar _tmp678 = _tmp201 * _tmp669 - _tmp257 * _tmp674;
  const Scalar _tmp679 = _tmp677 + _tmp678;
  const Scalar _tmp680 = _tmp204 * _tmp679 + _tmp205 * _tmp679 + _tmp679 * camera(4, 0);
  const Scalar _tmp681 = _tmp311 * row_time - _tmp313 * row_time;
  const Scalar _tmp682 = _tmp315 * row_time - _tmp316 * row_time;
  const Scalar _tmp683 = _tmp681 + _tmp682;
  const Scalar _tmp684 = _tmp204 * _tmp683 + _tmp205 * _tmp683 + _tmp683 * camera(4, 0);
  const Scalar _tmp685 = -_tmp335 * row_time + _tmp336 * row_time;
  const Scalar _tmp686 = -_tmp340 * row_time + _tmp341 * row_time;
  const Scalar _tmp687 = _tmp685 + _tmp686;
  const Scalar _tmp688 = _tmp204 * _tmp687 + _tmp205 * _tmp687 + _tmp687 * camera(4, 0);
  const Scalar _tmp689 = -_tmp363 * row_time + _tmp364 * row_time;
  const Scalar _tmp690 = -_tmp358 * row_time + _tmp359 * row_time;
  const Scalar _tmp691 = _tmp689 + _tmp690;
  const Scalar _tmp692 = _tmp204 * _tmp691 + _tmp205 * _tmp691 + _tmp691 * camera(4, 0);
  const Scalar _tmp693 = -_tmp315 + _tmp316;
  const Scalar _tmp694 = -_tmp311 + _tmp313;
  const Scalar _tmp695 = _tmp693 + _tmp694;
  const Scalar _tmp696 = _tmp204 * _tmp695 + _tmp205 * _tmp695 + _tmp695 * camera(4, 0);
  const Scalar _tmp697 = _tmp335 - _tmp336;
  const Scalar _tmp698 = _tmp340 - _tmp341;
  const Scalar _tmp699 = _tmp697 + _tmp698;
  const Scalar _tmp700 = _tmp204 * _tmp699 + _tmp205 * _tmp699 + _tmp699 * camera(4, 0);
  const Scalar _tmp701 = _tmp358 - _tmp359;
  const Scalar _tmp702 = _tmp363 - _tmp364;
  const Scalar _tmp703 = _tmp701 + _tmp702;
  const Scalar _tmp704 = _tmp204 * _tmp703 + _tmp205 * _tmp703 + _tmp703 * camera(4, 0);

  // Output terms (8)
  if (p_image != nullptr) {
    Eigen::Matrix<Scalar, 2, 1>& _p_image = (*p_image);

    _p_image(0, 0) = camera(0, 0) * (_tmp108 * _tmp110 + _tmp113 * _tmp89 +
                                     camera(8, 0) * (3 * _tmp105 + _tmp99)) +
                     camera(2, 0);
    _p_image(1, 0) =
        camera(1, 0) * (_tmp108 * _tmp114 + _tmp111 * (_tmp105 + 3 * _tmp99) + _tmp115 * _tmp89) +
        camera(3, 0);
  }

  if (D_world_R_imu != nullptr) {
    Eigen::Matrix<Scalar, 2, 3>& _D_world_R_imu = (*D_world_R_imu);

    _D_world_R_imu(0, 0) =
        camera(0, 0) * (_tmp110 * _tmp206 + _tmp113 * _tmp193 + _tmp177 * _tmp178 +
                        _tmp177 * _tmp187 - _tmp184 * _tmp185 - _tmp199 * _tmp200 +
                        camera(8, 0) * (_tmp177 * _tmp188 - _tmp184 * _tmp191 + _tmp197));
    _D_world_R_imu(1, 0) =
        camera(1, 0) * (_tmp111 * (-_tmp184 * _tmp209 + _tmp194 * _tmp208 + _tmp202) +
                        _tmp114 * _tmp206 + _tmp115 * _tmp193 + _tmp177 * _tmp207 +
                        _tmp178 * _tmp193 - _tmp184 * _tmp210 - _tmp199 * _tmp211);
    _D_world_R_imu(0, 1) =
        camera(0, 0) * (_tmp110 * _tmp260 + _tmp113 * _tmp253 + _tmp178 * _tmp246 -
                        _tmp185 * _tmp251 + _tmp187 * _tmp246 - _tmp251 * _tmp256 +
                        camera(8, 0) * (_tmp188 * _tmp246 - _tmp191 * _tmp251 + _tmp255));
    _D_world_R_imu(1, 1) =
        camera(1, 0) * (_tmp111 * (_tmp208 * _tmp254 - _tmp209 * _tmp251 + _tmp258) +
                        _tmp114 * _tmp260 + _tmp115 * _tmp253 + _tmp178 * _tmp253 +
                        _tmp207 * _tmp246 - _tmp210 * _tmp251 - _tmp251 * _tmp261);
    _D_world_R_imu(0, 2) =
        camera(0, 0) * (_tmp110 * _tmp305 - _tmp112 * _tmp302 + _tmp113 * _tmp293 +
                        _tmp178 * _tmp298 + _tmp187 * _tmp298 - _tmp256 * _tmp299 +
                        camera(8, 0) * (_tmp188 * _tmp298 - _tmp191 * _tmp299 + _tmp301));
    _D_world_R_imu(1, 2) =
        camera(1, 0) * (_tmp111 * (-_tmp209 * _tmp299 + _tmp293 * _tmp306 + _tmp303) +
                        _tmp114 * _tmp305 + _tmp115 * _tmp293 + _tmp178 * _tmp293 -
                        _tmp186 * _tmp302 + _tmp207 * _tmp298 - _tmp261 * _tmp299);
  }

  if (D_world_t_imu != nullptr) {
    Eigen::Matrix<Scalar, 2, 3>& _D_world_t_imu = (*D_world_t_imu);

    _D_world_t_imu(0, 0) =
        camera(0, 0) * (_tmp110 * _tmp319 + _tmp307 - _tmp308 - _tmp309 - _tmp310 + _tmp320 +
                        camera(8, 0) * (_tmp314 + _tmp321 - _tmp322));
    _D_world_t_imu(1, 0) =
        camera(1, 0) * (_tmp111 * (_tmp317 + _tmp328 - _tmp329) + _tmp114 * _tmp319 + _tmp323 +
                        _tmp324 - _tmp325 - _tmp326 - _tmp327);
    _D_world_t_imu(0, 1) =
        camera(0, 0) * (_tmp110 * _tmp344 + _tmp330 + _tmp338 - _tmp339 - _tmp345 - _tmp346 +
                        camera(8, 0) * (-_tmp331 + _tmp333 + _tmp337));
    _D_world_t_imu(1, 1) =
        camera(1, 0) * (_tmp111 * (_tmp342 - _tmp347 + _tmp348) + _tmp114 * _tmp344 + _tmp349 -
                        _tmp350 - _tmp351 + _tmp352 - _tmp353);
    _D_world_t_imu(0, 2) =
        camera(0, 0) * (_tmp110 * _tmp367 - _tmp354 - _tmp355 + _tmp361 + _tmp362 - _tmp368 +
                        camera(8, 0) * (-_tmp356 + _tmp357 + _tmp360));
    _D_world_t_imu(1, 2) =
        camera(1, 0) * (_tmp111 * (_tmp365 - _tmp370 + _tmp371) + _tmp114 * _tmp367 - _tmp369 +
                        _tmp372 - _tmp373 + _tmp374 - _tmp375);
  }

  if (D_imu_R_cam != nullptr) {
    Eigen::Matrix<Scalar, 2, 3>& _D_imu_R_cam = (*D_imu_R_cam);

    _D_imu_R_cam(0, 0) =
        camera(0, 0) * (_tmp110 * _tmp417 + _tmp113 * _tmp413 + _tmp178 * _tmp411 -
                        _tmp185 * _tmp404 + _tmp187 * _tmp411 - _tmp256 * _tmp404 +
                        camera(8, 0) * (_tmp188 * _tmp411 - _tmp191 * _tmp404 + _tmp414));
    _D_imu_R_cam(1, 0) =
        camera(1, 0) * (_tmp111 * (-_tmp209 * _tmp404 + _tmp306 * _tmp413 + _tmp415) +
                        _tmp114 * _tmp417 + _tmp115 * _tmp413 + _tmp178 * _tmp413 +
                        _tmp207 * _tmp411 - _tmp210 * _tmp404 - _tmp261 * _tmp404);
    _D_imu_R_cam(0, 1) =
        camera(0, 0) * (_tmp110 * _tmp438 + _tmp113 * _tmp434 + _tmp178 * _tmp429 -
                        _tmp185 * _tmp433 + _tmp187 * _tmp429 - _tmp256 * _tmp433 +
                        camera(8, 0) * (_tmp188 * _tmp429 - _tmp191 * _tmp433 + _tmp435));
    _D_imu_R_cam(1, 1) =
        camera(1, 0) * (_tmp111 * (-_tmp209 * _tmp433 + _tmp306 * _tmp434 + _tmp436) +
                        _tmp114 * _tmp438 + _tmp115 * _tmp434 + _tmp178 * _tmp434 +
                        _tmp207 * _tmp429 - _tmp210 * _tmp433 - _tmp261 * _tmp433);
    _D_imu_R_cam(0, 2) =
        camera(0, 0) * (_tmp110 * _tmp456 + _tmp113 * _tmp450 + _tmp178 * _tmp445 -
                        _tmp185 * _tmp449 + _tmp187 * _tmp445 - _tmp256 * _tmp449 +
                        camera(8, 0) * (_tmp188 * _tmp445 - _tmp191 * _tmp449 + _tmp453));
    _D_imu_R_cam(1, 2) = camera(1, 0) * (_tmp111 * (_tmp208 * _tmp451 - 6 * _tmp452 + _tmp454) +
                                         _tmp114 * _tmp456 + _tmp115 * _tmp450 + _tmp178 * _tmp450 +
                                         _tmp207 * _tmp445 - _tmp210 * _tmp449 - _tmp261 * _tmp449);
  }

  if (D_imu_t_cam != nullptr) {
    Eigen::Matrix<Scalar, 2, 3>& _D_imu_t_cam = (*D_imu_t_cam);

    _D_imu_t_cam(0, 0) =
        camera(0, 0) * (_tmp110 * _tmp469 + _tmp113 * _tmp466 + _tmp178 * _tmp464 -
                        _tmp185 * _tmp463 + _tmp187 * _tmp464 - _tmp256 * _tmp463 +
                        camera(8, 0) * (_tmp188 * _tmp464 - _tmp191 * _tmp463 + _tmp467));
    _D_imu_t_cam(1, 0) =
        camera(1, 0) * (_tmp111 * (-_tmp209 * _tmp463 + _tmp306 * _tmp466 + _tmp465) +
                        _tmp114 * _tmp469 + _tmp115 * _tmp466 + _tmp178 * _tmp466 +
                        _tmp207 * _tmp464 - _tmp210 * _tmp463 - _tmp261 * _tmp463);
    _D_imu_t_cam(0, 1) =
        camera(0, 0) * (_tmp110 * _tmp481 + _tmp113 * _tmp476 + _tmp178 * _tmp474 -
                        _tmp185 * _tmp475 + _tmp187 * _tmp474 - _tmp256 * _tmp475 +
                        camera(8, 0) * (_tmp188 * _tmp474 - _tmp191 * _tmp475 + _tmp478));
    _D_imu_t_cam(1, 1) = camera(1, 0) * (_tmp111 * (_tmp306 * _tmp476 - 6 * _tmp477 + _tmp479) +
                                         _tmp114 * _tmp481 + _tmp115 * _tmp476 + _tmp178 * _tmp476 +
                                         _tmp207 * _tmp474 - _tmp210 * _tmp475 - _tmp261 * _tmp475);
    _D_imu_t_cam(0, 2) =
        camera(0, 0) * (_tmp110 * _tmp492 + _tmp111 * _tmp493 + _tmp178 * _tmp486 -
                        _tmp185 * _tmp485 + _tmp187 * _tmp486 - _tmp256 * _tmp485 +
                        camera(8, 0) * (_tmp188 * _tmp486 - _tmp191 * _tmp485 + _tmp489));
    _D_imu_t_cam(1, 2) =
        camera(1, 0) * (_tmp111 * (_tmp208 * _tmp488 - _tmp209 * _tmp485 + _tmp490) +
                        _tmp114 * _tmp492 + _tmp178 * _tmp487 + _tmp207 * _tmp486 -
                        _tmp210 * _tmp485 - _tmp261 * _tmp485 + _tmp493 * camera(8, 0));
  }

  if (D_angular_velocity_imu != nullptr) {
    Eigen::Matrix<Scalar, 2, 3>& _D_angular_velocity_imu = (*D_angular_velocity_imu);

    _D_angular_velocity_imu(0, 0) =
        camera(0, 0) * (_tmp110 * _tmp577 + _tmp113 * _tmp574 + _tmp178 * _tmp572 -
                        _tmp185 * _tmp567 + _tmp187 * _tmp572 - _tmp256 * _tmp567 +
                        camera(8, 0) * (_tmp188 * _tmp572 - _tmp191 * _tmp567 + _tmp575));
    _D_angular_velocity_imu(1, 0) =
        camera(1, 0) * (_tmp111 * (-_tmp209 * _tmp567 + _tmp306 * _tmp574 + _tmp573) +
                        _tmp114 * _tmp577 + _tmp115 * _tmp574 + _tmp178 * _tmp574 +
                        _tmp207 * _tmp572 - _tmp210 * _tmp567 - _tmp261 * _tmp567);
    _D_angular_velocity_imu(0, 1) =
        camera(0, 0) * (_tmp110 * _tmp634 + _tmp113 * _tmp628 + _tmp178 * _tmp623 -
                        _tmp185 * _tmp629 + _tmp187 * _tmp623 - _tmp256 * _tmp629 +
                        camera(8, 0) * (_tmp188 * _tmp623 - _tmp191 * _tmp629 + _tmp631));
    _D_angular_velocity_imu(1, 1) =
        camera(1, 0) * (_tmp111 * (_tmp208 * _tmp630 - _tmp209 * _tmp629 + _tmp632) +
                        _tmp114 * _tmp634 + _tmp115 * _tmp628 + _tmp178 * _tmp628 +
                        _tmp207 * _tmp623 - _tmp210 * _tmp629 - _tmp261 * _tmp629);
    _D_angular_velocity_imu(0, 2) =
        camera(0, 0) * (_tmp110 * _tmp680 + _tmp113 * _tmp676 + _tmp178 * _tmp669 -
                        _tmp185 * _tmp674 + _tmp187 * _tmp669 - _tmp256 * _tmp674 +
                        camera(8, 0) * (_tmp188 * _tmp669 - _tmp191 * _tmp674 + _tmp677));
    _D_angular_velocity_imu(1, 2) =
        camera(1, 0) * (_tmp111 * (_tmp306 * _tmp676 - 6 * _tmp675 + _tmp678) + _tmp114 * _tmp680 +
                        _tmp115 * _tmp676 + _tmp178 * _tmp676 + _tmp207 * _tmp669 -
                        _tmp210 * _tmp674 - _tmp261 * _tmp674);
  }

  if (D_world_v_imu != nullptr) {
    Eigen::Matrix<Scalar, 2, 3>& _D_world_v_imu = (*D_world_v_imu);

    _D_world_v_imu(0, 0) =
        camera(0, 0) * (_tmp110 * _tmp684 + _tmp307 * row_time - _tmp308 * row_time -
                        _tmp309 * row_time - _tmp310 * row_time + _tmp320 * row_time +
                        camera(8, 0) * (_tmp321 * row_time - _tmp322 * row_time + _tmp681));
    _D_world_v_imu(1, 0) =
        camera(1, 0) * (_tmp111 * (_tmp328 * row_time - _tmp329 * row_time + _tmp682) +
                        _tmp114 * _tmp684 + _tmp323 * row_time + _tmp324 * row_time -
                        _tmp325 * row_time - _tmp326 * row_time - _tmp327 * row_time);
    _D_world_v_imu(0, 1) =
        camera(0, 0) * (_tmp110 * _tmp688 + _tmp330 * row_time + _tmp338 * row_time -
                        _tmp339 * row_time - _tmp345 * row_time - _tmp346 * row_time +
                        camera(8, 0) * (-_tmp331 * row_time + _tmp333 * row_time + _tmp685));
    _D_world_v_imu(1, 1) =
        camera(1, 0) * (_tmp111 * (-_tmp347 * row_time + _tmp348 * row_time + _tmp686) +
                        _tmp114 * _tmp688 + _tmp349 * row_time - _tmp350 * row_time -
                        _tmp351 * row_time + _tmp352 * row_time - _tmp353 * row_time);
    _D_world_v_imu(0, 2) =
        camera(0, 0) * (_tmp110 * _tmp692 - _tmp354 * row_time - _tmp355 * row_time +
                        _tmp361 * row_time + _tmp362 * row_time - _tmp368 * row_time +
                        camera(8, 0) * (-_tmp356 * row_time + _tmp357 * row_time + _tmp690));
    _D_world_v_imu(1, 2) =
        camera(1, 0) * (_tmp111 * (-_tmp370 * row_time + _tmp371 * row_time + _tmp689) +
                        _tmp114 * _tmp692 - _tmp369 * row_time + _tmp372 * row_time -
                        _tmp373 * row_time + _tmp374 * row_time - _tmp375 * row_time);
  }

  if (D_p_world != nullptr) {
    Eigen::Matrix<Scalar, 2, 3>& _D_p_world = (*D_p_world);

    _D_p_world(0, 0) = camera(0, 0) * (_tmp110 * _tmp696 - _tmp307 + _tmp308 + _tmp309 + _tmp310 -
                                       _tmp320 + camera(8, 0) * (-_tmp321 + _tmp322 + _tmp694));
    _D_p_world(1, 0) =
        camera(1, 0) * (_tmp111 * (-_tmp328 + _tmp329 + _tmp693) + _tmp114 * _tmp696 - _tmp323 -
                        _tmp324 + _tmp325 + _tmp326 + _tmp327);
    _D_p_world(0, 1) = camera(0, 0) * (_tmp110 * _tmp700 - _tmp330 - _tmp338 + _tmp339 + _tmp345 +
                                       _tmp346 + camera(8, 0) * (_tmp331 - _tmp333 + _tmp697));
    _D_p_world(1, 1) = camera(1, 0) * (_tmp111 * (_tmp347 - _tmp348 + _tmp698) + _tmp114 * _tmp700 -
                                       _tmp349 + _tmp350 + _tmp351 - _tmp352 + _tmp353);
    _D_p_world(0, 2) = camera(0, 0) * (_tmp110 * _tmp704 + _tmp354 + _tmp355 - _tmp361 - _tmp362 +
                                       _tmp368 + camera(8, 0) * (_tmp356 - _tmp357 + _tmp701));
    _D_p_world(1, 2) = camera(1, 0) * (_tmp111 * (_tmp370 - _tmp371 + _tmp702) + _tmp114 * _tmp704 +
                                       _tmp369 - _tmp372 + _tmp373 - _tmp374 + _tmp375);
  }
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
