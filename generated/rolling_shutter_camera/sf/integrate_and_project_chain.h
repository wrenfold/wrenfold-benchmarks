// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

namespace sym {

template <typename Scalar>
void IntegrateAndProjectChain(const Eigen::Matrix<Scalar, 4, 1>& world_R_imu_xyzw,
                              const Eigen::Matrix<Scalar, 3, 1>& world_t_imu,
                              const Eigen::Matrix<Scalar, 4, 1>& imu_R_cam_xyzw,
                              const Eigen::Matrix<Scalar, 3, 1>& imu_t_cam,
                              const Eigen::Matrix<Scalar, 3, 1>& angular_velocity_imu,
                              const Eigen::Matrix<Scalar, 3, 1>& world_v_imu,
                              const Eigen::Matrix<Scalar, 3, 1>& p_world, const Scalar row_time,
                              const Eigen::Matrix<Scalar, 9, 1>& camera,
                              Eigen::Matrix<Scalar, 2, 1>* const p_image = nullptr,
                              Eigen::Matrix<Scalar, 2, 3>* const D_world_R_imu = nullptr,
                              Eigen::Matrix<Scalar, 2, 3>* const D_world_t_imu = nullptr,
                              Eigen::Matrix<Scalar, 2, 3>* const D_imu_R_cam = nullptr,
                              Eigen::Matrix<Scalar, 2, 3>* const D_imu_t_cam = nullptr,
                              Eigen::Matrix<Scalar, 2, 3>* const D_angular_velocity_imu = nullptr,
                              Eigen::Matrix<Scalar, 2, 3>* const D_world_v_imu = nullptr,
                              Eigen::Matrix<Scalar, 2, 3>* const D_p_world = nullptr) {
  // Total ops: 2745

  // Input arrays

  // Intermediate terms (704)
  const Scalar _tmp0 = std::pow(angular_velocity_imu(0, 0), Scalar(2));
  const Scalar _tmp1 = std::pow(row_time, Scalar(2));
  const Scalar _tmp2 = std::pow(angular_velocity_imu(2, 0), Scalar(2));
  const Scalar _tmp3 = std::pow(angular_velocity_imu(1, 0), Scalar(2));
  const Scalar _tmp4 =
      _tmp0 * _tmp1 + _tmp1 * _tmp2 + _tmp1 * _tmp3 + Scalar(1.0000000000000001e-32);
  const Scalar _tmp5 = std::sqrt(_tmp4);
  const Scalar _tmp6 = (Scalar(1) / Scalar(2)) * _tmp5;
  const Scalar _tmp7 = std::sin(_tmp6);
  const Scalar _tmp8 = Scalar(1.0) / (_tmp5);
  const Scalar _tmp9 = _tmp8 * row_time;
  const Scalar _tmp10 = _tmp7 * _tmp9;
  const Scalar _tmp11 = _tmp10 * world_R_imu_xyzw(0, 0);
  const Scalar _tmp12 = _tmp11 * angular_velocity_imu(2, 0);
  const Scalar _tmp13 = _tmp10 * world_R_imu_xyzw(2, 0);
  const Scalar _tmp14 = _tmp13 * angular_velocity_imu(0, 0);
  const Scalar _tmp15 = _tmp7 * world_R_imu_xyzw(3, 0);
  const Scalar _tmp16 = _tmp15 * _tmp9;
  const Scalar _tmp17 = _tmp16 * angular_velocity_imu(1, 0);
  const Scalar _tmp18 = std::cos(_tmp6);
  const Scalar _tmp19 = _tmp18 * world_R_imu_xyzw(1, 0);
  const Scalar _tmp20 = -_tmp12 + _tmp14 + _tmp17 + _tmp19;
  const Scalar _tmp21 = _tmp10 * world_R_imu_xyzw(1, 0);
  const Scalar _tmp22 = _tmp21 * angular_velocity_imu(2, 0);
  const Scalar _tmp23 = _tmp16 * angular_velocity_imu(0, 0);
  const Scalar _tmp24 = _tmp13 * angular_velocity_imu(1, 0);
  const Scalar _tmp25 = _tmp18 * world_R_imu_xyzw(0, 0);
  const Scalar _tmp26 = _tmp22 + _tmp23 - _tmp24 + _tmp25;
  const Scalar _tmp27 = 2 * _tmp26;
  const Scalar _tmp28 = _tmp20 * _tmp27;
  const Scalar _tmp29 = _tmp18 * world_R_imu_xyzw(3, 0);
  const Scalar _tmp30 = -_tmp11 * angular_velocity_imu(0, 0) - _tmp13 * angular_velocity_imu(2, 0) -
                        _tmp21 * angular_velocity_imu(1, 0) + _tmp29;
  const Scalar _tmp31 = _tmp16 * angular_velocity_imu(2, 0);
  const Scalar _tmp32 = _tmp21 * angular_velocity_imu(0, 0);
  const Scalar _tmp33 = _tmp11 * angular_velocity_imu(1, 0);
  const Scalar _tmp34 = _tmp18 * world_R_imu_xyzw(2, 0);
  const Scalar _tmp35 = _tmp31 - _tmp32 + _tmp33 + _tmp34;
  const Scalar _tmp36 = 2 * _tmp35;
  const Scalar _tmp37 = _tmp30 * _tmp36;
  const Scalar _tmp38 = _tmp20 * _tmp36;
  const Scalar _tmp39 = 2 * _tmp30;
  const Scalar _tmp40 = _tmp26 * _tmp39;
  const Scalar _tmp41 = -_tmp40;
  const Scalar _tmp42 = 2 * std::pow(_tmp35, Scalar(2));
  const Scalar _tmp43 = -_tmp42;
  const Scalar _tmp44 = 2 * std::pow(_tmp26, Scalar(2));
  const Scalar _tmp45 = 1 - _tmp44;
  const Scalar _tmp46 = -imu_t_cam(0, 0) * (_tmp28 + _tmp37) - imu_t_cam(1, 0) * (_tmp43 + _tmp45) -
                        imu_t_cam(2, 0) * (_tmp38 + _tmp41) + p_world(1, 0) -
                        row_time * world_v_imu(1, 0) - world_t_imu(1, 0);
  const Scalar _tmp47 = _tmp20 * imu_R_cam_xyzw(3, 0) - _tmp26 * imu_R_cam_xyzw(2, 0) +
                        _tmp30 * imu_R_cam_xyzw(1, 0) + _tmp35 * imu_R_cam_xyzw(0, 0);
  const Scalar _tmp48 = _tmp20 * imu_R_cam_xyzw(2, 0) + _tmp26 * imu_R_cam_xyzw(3, 0) +
                        _tmp30 * imu_R_cam_xyzw(0, 0) - _tmp35 * imu_R_cam_xyzw(1, 0);
  const Scalar _tmp49 = 2 * _tmp48;
  const Scalar _tmp50 = _tmp47 * _tmp49;
  const Scalar _tmp51 = -_tmp20 * imu_R_cam_xyzw(0, 0) + _tmp26 * imu_R_cam_xyzw(1, 0) +
                        _tmp30 * imu_R_cam_xyzw(2, 0) + _tmp35 * imu_R_cam_xyzw(3, 0);
  const Scalar _tmp52 = -_tmp20 * imu_R_cam_xyzw(1, 0) - _tmp26 * imu_R_cam_xyzw(0, 0) +
                        _tmp30 * imu_R_cam_xyzw(3, 0) - _tmp35 * imu_R_cam_xyzw(2, 0);
  const Scalar _tmp53 = 2 * _tmp52;
  const Scalar _tmp54 = _tmp51 * _tmp53;
  const Scalar _tmp55 = _tmp50 + _tmp54;
  const Scalar _tmp56 = 2 * std::pow(_tmp20, Scalar(2));
  const Scalar _tmp57 = -_tmp56;
  const Scalar _tmp58 = _tmp26 * _tmp36;
  const Scalar _tmp59 = _tmp20 * _tmp39;
  const Scalar _tmp60 = -_tmp59;
  const Scalar _tmp61 = -imu_t_cam(0, 0) * (_tmp58 + _tmp60) - imu_t_cam(1, 0) * (_tmp38 + _tmp40) -
                        imu_t_cam(2, 0) * (_tmp45 + _tmp57) + p_world(2, 0) -
                        row_time * world_v_imu(2, 0) - world_t_imu(2, 0);
  const Scalar _tmp62 = _tmp49 * _tmp51;
  const Scalar _tmp63 = _tmp47 * _tmp53;
  const Scalar _tmp64 = _tmp62 - _tmp63;
  const Scalar _tmp65 = -2 * std::pow(_tmp47, Scalar(2));
  const Scalar _tmp66 = 1 - 2 * std::pow(_tmp51, Scalar(2));
  const Scalar _tmp67 = _tmp65 + _tmp66;
  const Scalar _tmp68 = -_tmp37;
  const Scalar _tmp69 = -imu_t_cam(0, 0) * (_tmp43 + _tmp57 + 1) -
                        imu_t_cam(1, 0) * (_tmp28 + _tmp68) - imu_t_cam(2, 0) * (_tmp58 + _tmp59) +
                        p_world(0, 0) - row_time * world_v_imu(0, 0) - world_t_imu(0, 0);
  const Scalar _tmp70 = _tmp46 * _tmp55 + _tmp61 * _tmp64 + _tmp67 * _tmp69;
  const Scalar _tmp71 = 2 * _tmp47;
  const Scalar _tmp72 = _tmp51 * _tmp71;
  const Scalar _tmp73 = _tmp48 * _tmp53;
  const Scalar _tmp74 = _tmp72 + _tmp73;
  const Scalar _tmp75 = -2 * std::pow(_tmp48, Scalar(2));
  const Scalar _tmp76 = _tmp66 + _tmp75;
  const Scalar _tmp77 = _tmp50 - _tmp54;
  const Scalar _tmp78 = _tmp46 * _tmp76 + _tmp61 * _tmp74 + _tmp69 * _tmp77;
  const Scalar _tmp79 = std::pow(_tmp78, Scalar(2));
  const Scalar _tmp80 = _tmp65 + _tmp75 + 1;
  const Scalar _tmp81 = _tmp62 + _tmp63;
  const Scalar _tmp82 = _tmp72 - _tmp73;
  const Scalar _tmp83 = _tmp46 * _tmp82 + _tmp61 * _tmp80 + _tmp69 * _tmp81;
  const Scalar _tmp84 = std::pow(_tmp83, Scalar(-2));
  const Scalar _tmp85 = _tmp79 * _tmp84;
  const Scalar _tmp86 = std::pow(_tmp70, Scalar(2));
  const Scalar _tmp87 = _tmp84 * _tmp86;
  const Scalar _tmp88 = _tmp85 + _tmp87;
  const Scalar _tmp89 = std::pow(_tmp88, Scalar(2));
  const Scalar _tmp90 =
      [&]() {
        const Scalar base = _tmp88;
        return base * base * base;
      }() *
          camera(6, 0) +
      _tmp88 * camera(4, 0) + _tmp89 * camera(5, 0) + 1;
  const Scalar _tmp91 = Scalar(1.0) / (_tmp83);
  const Scalar _tmp92 = _tmp90 * _tmp91;
  const Scalar _tmp93 = 2 * camera(7, 0);
  const Scalar _tmp94 = _tmp70 * _tmp84;
  const Scalar _tmp95 = _tmp93 * _tmp94;
  const Scalar _tmp96 = _tmp94 * camera(8, 0);
  const Scalar _tmp97 = _tmp10 * angular_velocity_imu(2, 0);
  const Scalar _tmp98 = _tmp97 * imu_R_cam_xyzw(0, 0);
  const Scalar _tmp99 = _tmp10 * angular_velocity_imu(0, 0);
  const Scalar _tmp100 = _tmp99 * imu_R_cam_xyzw(2, 0);
  const Scalar _tmp101 = _tmp18 * imu_R_cam_xyzw(1, 0);
  const Scalar _tmp102 = _tmp10 * angular_velocity_imu(1, 0);
  const Scalar _tmp103 = _tmp102 * imu_R_cam_xyzw(3, 0);
  const Scalar _tmp104 = -_tmp100 + _tmp101 + _tmp103 + _tmp98;
  const Scalar _tmp105 = 4 * _tmp104;
  const Scalar _tmp106 = -_tmp105 * _tmp47;
  const Scalar _tmp107 = _tmp97 * imu_R_cam_xyzw(1, 0);
  const Scalar _tmp108 = _tmp99 * imu_R_cam_xyzw(3, 0);
  const Scalar _tmp109 = _tmp18 * imu_R_cam_xyzw(0, 0);
  const Scalar _tmp110 = _tmp102 * imu_R_cam_xyzw(2, 0);
  const Scalar _tmp111 = -_tmp107 + _tmp108 + _tmp109 + _tmp110;
  const Scalar _tmp112 = 4 * _tmp48;
  const Scalar _tmp113 = -_tmp111 * _tmp112;
  const Scalar _tmp114 = _tmp27 * _tmp97;
  const Scalar _tmp115 = 2 * _tmp20;
  const Scalar _tmp116 = _tmp115 * _tmp18;
  const Scalar _tmp117 = _tmp36 * _tmp99;
  const Scalar _tmp118 = _tmp102 * _tmp39;
  const Scalar _tmp119 = _tmp117 - _tmp118;
  const Scalar _tmp120 = 4 * _tmp26;
  const Scalar _tmp121 = -_tmp120 * _tmp99;
  const Scalar _tmp122 = 4 * _tmp20;
  const Scalar _tmp123 = -_tmp102 * _tmp122;
  const Scalar _tmp124 = _tmp18 * _tmp27;
  const Scalar _tmp125 = _tmp102 * _tmp36;
  const Scalar _tmp126 = _tmp115 * _tmp97;
  const Scalar _tmp127 = _tmp39 * _tmp99;
  const Scalar _tmp128 = -imu_t_cam(1, 0) * (_tmp124 + _tmp125 + _tmp126 + _tmp127);
  const Scalar _tmp129 = _tmp128 - imu_t_cam(0, 0) * (_tmp114 - _tmp116 + _tmp119) -
                         imu_t_cam(2, 0) * (_tmp121 + _tmp123);
  const Scalar _tmp130 = _tmp111 * _tmp53;
  const Scalar _tmp131 = -_tmp130;
  const Scalar _tmp132 = -_tmp102 * imu_R_cam_xyzw(1, 0) + _tmp18 * imu_R_cam_xyzw(3, 0) -
                         _tmp97 * imu_R_cam_xyzw(2, 0) - _tmp99 * imu_R_cam_xyzw(0, 0);
  const Scalar _tmp133 = _tmp132 * _tmp48;
  const Scalar _tmp134 = 2 * _tmp133;
  const Scalar _tmp135 = 2 * _tmp51;
  const Scalar _tmp136 = _tmp104 * _tmp135;
  const Scalar _tmp137 = _tmp97 * imu_R_cam_xyzw(3, 0);
  const Scalar _tmp138 = _tmp99 * imu_R_cam_xyzw(1, 0);
  const Scalar _tmp139 = _tmp18 * imu_R_cam_xyzw(2, 0);
  const Scalar _tmp140 = _tmp102 * imu_R_cam_xyzw(0, 0);
  const Scalar _tmp141 = _tmp137 + _tmp138 + _tmp139 - _tmp140;
  const Scalar _tmp142 = _tmp141 * _tmp71;
  const Scalar _tmp143 = 4 * _tmp35;
  const Scalar _tmp144 = -_tmp143 * _tmp97;
  const Scalar _tmp145 = -imu_t_cam(2, 0) * (_tmp114 + _tmp116 + _tmp117 + _tmp118);
  const Scalar _tmp146 = _tmp18 * _tmp36;
  const Scalar _tmp147 = _tmp115 * _tmp99;
  const Scalar _tmp148 = _tmp102 * _tmp27;
  const Scalar _tmp149 = _tmp39 * _tmp97;
  const Scalar _tmp150 = _tmp148 - _tmp149;
  const Scalar _tmp151 = _tmp145 - imu_t_cam(0, 0) * (_tmp123 + _tmp144) -
                         imu_t_cam(1, 0) * (-_tmp146 + _tmp147 + _tmp150);
  const Scalar _tmp152 = _tmp104 * _tmp53;
  const Scalar _tmp153 = _tmp132 * _tmp71;
  const Scalar _tmp154 = _tmp152 + _tmp153;
  const Scalar _tmp155 = 2 * _tmp111;
  const Scalar _tmp156 = _tmp155 * _tmp51;
  const Scalar _tmp157 = _tmp141 * _tmp49 + _tmp156;
  const Scalar _tmp158 = -imu_t_cam(0, 0) * (_tmp146 + _tmp147 + _tmp148 + _tmp149);
  const Scalar _tmp159 = _tmp126 - _tmp127;
  const Scalar _tmp160 = _tmp158 - imu_t_cam(1, 0) * (_tmp121 + _tmp144) -
                         imu_t_cam(2, 0) * (-_tmp124 + _tmp125 + _tmp159);
  const Scalar _tmp161 = _tmp129 * _tmp80 + _tmp151 * _tmp81 + _tmp160 * _tmp82 +
                         _tmp46 * (_tmp131 - _tmp134 + _tmp136 + _tmp142) +
                         _tmp61 * (_tmp106 + _tmp113) + _tmp69 * (_tmp154 + _tmp157);
  const Scalar _tmp162 = std::pow(_tmp83, Scalar(-3));
  const Scalar _tmp163 = _tmp162 * _tmp86;
  const Scalar _tmp164 = _tmp161 * _tmp163;
  const Scalar _tmp165 = _tmp141 * _tmp53;
  const Scalar _tmp166 = _tmp132 * _tmp51;
  const Scalar _tmp167 = 2 * _tmp166;
  const Scalar _tmp168 = _tmp165 + _tmp167;
  const Scalar _tmp169 = _tmp104 * _tmp49;
  const Scalar _tmp170 = _tmp111 * _tmp47;
  const Scalar _tmp171 = _tmp169 + 2 * _tmp170;
  const Scalar _tmp172 = -_tmp152;
  const Scalar _tmp173 = 4 * _tmp51;
  const Scalar _tmp174 = -_tmp141 * _tmp173;
  const Scalar _tmp175 = _tmp129 * _tmp64 + _tmp151 * _tmp67 + _tmp160 * _tmp55 +
                         _tmp46 * (_tmp168 + _tmp171) + _tmp61 * (-_tmp153 + _tmp157 + _tmp172) +
                         _tmp69 * (_tmp106 + _tmp174);
  const Scalar _tmp176 = 6 * _tmp94;
  const Scalar _tmp177 = _tmp162 * _tmp79;
  const Scalar _tmp178 = 2 * _tmp177;
  const Scalar _tmp179 = _tmp134 + _tmp142;
  const Scalar _tmp180 = -_tmp165;
  const Scalar _tmp181 = _tmp129 * _tmp74 + _tmp151 * _tmp77 + _tmp160 * _tmp76 +
                         _tmp46 * (_tmp113 + _tmp174) + _tmp61 * (_tmp130 + _tmp136 + _tmp179) +
                         _tmp69 * (-_tmp167 + _tmp171 + _tmp180);
  const Scalar _tmp182 = _tmp78 * _tmp84;
  const Scalar _tmp183 = 2 * _tmp182;
  const Scalar _tmp184 = -_tmp161 * _tmp178 + _tmp181 * _tmp183;
  const Scalar _tmp185 = _tmp182 * _tmp93;
  const Scalar _tmp186 = _tmp162 * _tmp70 * _tmp78;
  const Scalar _tmp187 = 4 * camera(7, 0);
  const Scalar _tmp188 = _tmp186 * _tmp187;
  const Scalar _tmp189 = 2 * _tmp94;
  const Scalar _tmp190 = -2 * _tmp164 + _tmp175 * _tmp189;
  const Scalar _tmp191 = _tmp184 + _tmp190;
  const Scalar _tmp192 = 2 * _tmp88 * camera(5, 0);
  const Scalar _tmp193 = 3 * _tmp89 * camera(6, 0);
  const Scalar _tmp194 = _tmp191 * _tmp192 + _tmp191 * _tmp193 + _tmp191 * camera(4, 0);
  const Scalar _tmp195 = _tmp70 * _tmp91;
  const Scalar _tmp196 = _tmp90 * _tmp94;
  const Scalar _tmp197 = (Scalar(1) / Scalar(2)) * camera(0, 0);
  const Scalar _tmp198 = _tmp197 * (-_tmp161 * _tmp188 - _tmp161 * _tmp196 + _tmp175 * _tmp185 +
                                    _tmp175 * _tmp92 + _tmp181 * _tmp95 + _tmp194 * _tmp195 +
                                    camera(8, 0) * (-6 * _tmp164 + _tmp175 * _tmp176 + _tmp184));
  const Scalar _tmp199 = _tmp100 - _tmp101 - _tmp103 - _tmp98;
  const Scalar _tmp200 = _tmp199 * _tmp71;
  const Scalar _tmp201 = _tmp132 * _tmp53;
  const Scalar _tmp202 = -_tmp201;
  const Scalar _tmp203 = _tmp107 - _tmp108 - _tmp109 - _tmp110;
  const Scalar _tmp204 = 2 * _tmp203;
  const Scalar _tmp205 = _tmp204 * _tmp48;
  const Scalar _tmp206 = _tmp135 * _tmp141 + _tmp205;
  const Scalar _tmp207 = -_tmp120 * _tmp97;
  const Scalar _tmp208 = -_tmp122 * _tmp18;
  const Scalar _tmp209 = _tmp146 - _tmp147;
  const Scalar _tmp210 = _tmp18 * _tmp39;
  const Scalar _tmp211 = -_tmp210;
  const Scalar _tmp212 = _tmp36 * _tmp97;
  const Scalar _tmp213 = _tmp211 + _tmp212;
  const Scalar _tmp214 = _tmp27 * _tmp99;
  const Scalar _tmp215 = -_tmp214;
  const Scalar _tmp216 = _tmp102 * _tmp115;
  const Scalar _tmp217 = _tmp215 + _tmp216;
  const Scalar _tmp218 = -imu_t_cam(0, 0) * (_tmp213 + _tmp217) -
                         imu_t_cam(1, 0) * (-_tmp148 + _tmp149 + _tmp209) -
                         imu_t_cam(2, 0) * (_tmp207 + _tmp208);
  const Scalar _tmp219 = _tmp203 * _tmp53;
  const Scalar _tmp220 = _tmp135 * _tmp199;
  const Scalar _tmp221 = _tmp143 * _tmp99;
  const Scalar _tmp222 = -imu_t_cam(2, 0) * (_tmp150 + _tmp209);
  const Scalar _tmp223 = _tmp124 - _tmp125;
  const Scalar _tmp224 = -imu_t_cam(0, 0) * (_tmp159 + _tmp223);
  const Scalar _tmp225 = _tmp222 + _tmp224 - imu_t_cam(1, 0) * (_tmp207 + _tmp221);
  const Scalar _tmp226 = -_tmp216;
  const Scalar _tmp227 = _tmp128 - imu_t_cam(0, 0) * (_tmp208 + _tmp221) -
                         imu_t_cam(2, 0) * (_tmp210 + _tmp212 + _tmp215 + _tmp226);
  const Scalar _tmp228 = 4 * _tmp47;
  const Scalar _tmp229 = -_tmp132 * _tmp228;
  const Scalar _tmp230 = -_tmp173 * _tmp203;
  const Scalar _tmp231 = _tmp218 * _tmp64 + _tmp225 * _tmp55 + _tmp227 * _tmp67 +
                         _tmp46 * (_tmp179 + _tmp219 + _tmp220) +
                         _tmp61 * (-_tmp200 + _tmp202 + _tmp206) + _tmp69 * (_tmp229 + _tmp230);
  const Scalar _tmp232 = _tmp199 * _tmp49;
  const Scalar _tmp233 = _tmp204 * _tmp47;
  const Scalar _tmp234 = _tmp167 + _tmp233;
  const Scalar _tmp235 = _tmp200 + _tmp201;
  const Scalar _tmp236 = -_tmp112 * _tmp141;
  const Scalar _tmp237 = _tmp218 * _tmp80 + _tmp225 * _tmp82 + _tmp227 * _tmp81 +
                         _tmp46 * (_tmp180 - _tmp232 + _tmp234) + _tmp61 * (_tmp229 + _tmp236) +
                         _tmp69 * (_tmp206 + _tmp235);
  const Scalar _tmp238 = _tmp186 * _tmp237;
  const Scalar _tmp239 = _tmp218 * _tmp74 + _tmp225 * _tmp76 + _tmp227 * _tmp77 +
                         _tmp46 * (_tmp230 + _tmp236) + _tmp61 * (_tmp168 + _tmp232 + _tmp233) +
                         _tmp69 * (_tmp179 - _tmp219 - _tmp220);
  const Scalar _tmp240 = _tmp182 * _tmp239;
  const Scalar _tmp241 = -_tmp178 * _tmp237 + 2 * _tmp240;
  const Scalar _tmp242 = _tmp231 * _tmp94;
  const Scalar _tmp243 = 2 * _tmp163;
  const Scalar _tmp244 = -_tmp237 * _tmp243 + 2 * _tmp242;
  const Scalar _tmp245 = _tmp241 + _tmp244;
  const Scalar _tmp246 = _tmp192 * _tmp245 + _tmp193 * _tmp245 + _tmp245 * camera(4, 0);
  const Scalar _tmp247 = 6 * _tmp163;
  const Scalar _tmp248 = _tmp197 * (_tmp185 * _tmp231 - _tmp187 * _tmp238 + _tmp195 * _tmp246 -
                                    _tmp196 * _tmp237 + _tmp231 * _tmp92 + _tmp239 * _tmp95 +
                                    camera(8, 0) * (-_tmp237 * _tmp247 + _tmp241 + 6 * _tmp242));
  const Scalar _tmp249 = -_tmp120 * _tmp18;
  const Scalar _tmp250 = -_tmp102 * _tmp143;
  const Scalar _tmp251 = -_tmp114 + _tmp116;
  const Scalar _tmp252 = -_tmp212;
  const Scalar _tmp253 = -imu_t_cam(0, 0) * (-_tmp117 + _tmp118 + _tmp251) -
                         imu_t_cam(1, 0) * (_tmp249 + _tmp250) -
                         imu_t_cam(2, 0) * (_tmp211 + _tmp214 + _tmp216 + _tmp252);
  const Scalar _tmp254 = -4 * _tmp133;
  const Scalar _tmp255 = -_tmp137 - _tmp138 - _tmp139 + _tmp140;
  const Scalar _tmp256 = -_tmp228 * _tmp255;
  const Scalar _tmp257 = _tmp122 * _tmp97;
  const Scalar _tmp258 = _tmp210 + _tmp252;
  const Scalar _tmp259 =
      _tmp158 - imu_t_cam(1, 0) * (_tmp217 + _tmp258) - imu_t_cam(2, 0) * (_tmp249 + _tmp257);
  const Scalar _tmp260 = _tmp255 * _tmp53;
  const Scalar _tmp261 = _tmp135 * _tmp255;
  const Scalar _tmp262 = _tmp104 * _tmp71 + _tmp261;
  const Scalar _tmp263 = -imu_t_cam(1, 0) * (_tmp119 + _tmp251);
  const Scalar _tmp264 = _tmp222 + _tmp263 - imu_t_cam(0, 0) * (_tmp250 + _tmp257);
  const Scalar _tmp265 = _tmp253 * _tmp82 + _tmp259 * _tmp80 + _tmp264 * _tmp81 +
                         _tmp46 * (_tmp202 - _tmp205 + _tmp262) + _tmp61 * (_tmp254 + _tmp256) +
                         _tmp69 * (_tmp169 + _tmp234 + _tmp260);
  const Scalar _tmp266 = _tmp204 * _tmp51;
  const Scalar _tmp267 = _tmp255 * _tmp49;
  const Scalar _tmp268 = -_tmp105 * _tmp51;
  const Scalar _tmp269 = _tmp253 * _tmp55 + _tmp259 * _tmp64 + _tmp264 * _tmp67 +
                         _tmp46 * (_tmp154 + _tmp266 + _tmp267) +
                         _tmp61 * (_tmp167 + _tmp169 - _tmp233 - _tmp260) +
                         _tmp69 * (_tmp256 + _tmp268);
  const Scalar _tmp270 = _tmp253 * _tmp76 + _tmp259 * _tmp74 + _tmp264 * _tmp77 +
                         _tmp46 * (_tmp254 + _tmp268) + _tmp61 * (_tmp201 + _tmp205 + _tmp262) +
                         _tmp69 * (_tmp153 + _tmp172 - _tmp266 + _tmp267);
  const Scalar _tmp271 = -_tmp178 * _tmp265 + _tmp183 * _tmp270;
  const Scalar _tmp272 = _tmp189 * _tmp269 - _tmp243 * _tmp265;
  const Scalar _tmp273 = _tmp271 + _tmp272;
  const Scalar _tmp274 = _tmp192 * _tmp273 + _tmp193 * _tmp273 + _tmp273 * camera(4, 0);
  const Scalar _tmp275 =
      _tmp197 * (_tmp185 * _tmp269 - _tmp188 * _tmp265 + _tmp195 * _tmp274 - _tmp196 * _tmp265 +
                 _tmp269 * _tmp92 + _tmp270 * _tmp95 +
                 camera(8, 0) * (_tmp176 * _tmp269 - _tmp247 * _tmp265 + _tmp271));
  const Scalar _tmp276 = -4 * _tmp166;
  const Scalar _tmp277 = -4 * _tmp170;
  const Scalar _tmp278 = -_tmp143 * _tmp18;
  const Scalar _tmp279 = _tmp102 * _tmp120;
  const Scalar _tmp280 = _tmp214 + _tmp226;
  const Scalar _tmp281 =
      _tmp145 - imu_t_cam(0, 0) * (_tmp258 + _tmp280) - imu_t_cam(1, 0) * (_tmp278 + _tmp279);
  const Scalar _tmp282 = _tmp255 * _tmp71;
  const Scalar _tmp283 = _tmp134 + _tmp220;
  const Scalar _tmp284 = -_tmp122 * _tmp99;
  const Scalar _tmp285 = _tmp224 + _tmp263 - imu_t_cam(2, 0) * (_tmp279 + _tmp284);
  const Scalar _tmp286 = _tmp155 * _tmp48;
  const Scalar _tmp287 = -imu_t_cam(0, 0) * (_tmp278 + _tmp284) -
                         imu_t_cam(1, 0) * (_tmp213 + _tmp280) -
                         imu_t_cam(2, 0) * (-_tmp126 + _tmp127 + _tmp223);
  const Scalar _tmp288 = _tmp281 * _tmp55 + _tmp285 * _tmp64 + _tmp287 * _tmp67 +
                         _tmp46 * (_tmp235 + _tmp261 + _tmp286) +
                         _tmp61 * (_tmp131 - _tmp282 + _tmp283) + _tmp69 * (_tmp276 + _tmp277);
  const Scalar _tmp289 = _tmp199 * _tmp53;
  const Scalar _tmp290 = _tmp153 + _tmp156;
  const Scalar _tmp291 = -_tmp112 * _tmp199;
  const Scalar _tmp292 = _tmp281 * _tmp82 + _tmp285 * _tmp80 + _tmp287 * _tmp81 +
                         _tmp46 * (-_tmp267 - _tmp289 + _tmp290) + _tmp61 * (_tmp277 + _tmp291) +
                         _tmp69 * (_tmp130 + _tmp282 + _tmp283);
  const Scalar _tmp293 = 6 * _tmp292;
  const Scalar _tmp294 = _tmp281 * _tmp76 + _tmp285 * _tmp74 + _tmp287 * _tmp77 +
                         _tmp46 * (_tmp276 + _tmp291) + _tmp61 * (_tmp267 + _tmp289 + _tmp290) +
                         _tmp69 * (_tmp200 + _tmp202 - _tmp261 + _tmp286);
  const Scalar _tmp295 = -_tmp178 * _tmp292 + _tmp183 * _tmp294;
  const Scalar _tmp296 = _tmp189 * _tmp288 - _tmp243 * _tmp292;
  const Scalar _tmp297 = _tmp295 + _tmp296;
  const Scalar _tmp298 = _tmp192 * _tmp297 + _tmp193 * _tmp297 + _tmp297 * camera(4, 0);
  const Scalar _tmp299 =
      _tmp197 * (_tmp185 * _tmp288 - _tmp188 * _tmp292 + _tmp195 * _tmp298 - _tmp196 * _tmp292 +
                 _tmp288 * _tmp92 + _tmp294 * _tmp95 +
                 camera(8, 0) * (-_tmp163 * _tmp293 + _tmp176 * _tmp288 + _tmp295));
  const Scalar _tmp300 = _tmp182 * camera(8, 0);
  const Scalar _tmp301 = _tmp78 * _tmp91;
  const Scalar _tmp302 = 2 * camera(8, 0);
  const Scalar _tmp303 = _tmp186 * _tmp302;
  const Scalar _tmp304 = 6 * _tmp177;
  const Scalar _tmp305 = 6 * _tmp182;
  const Scalar _tmp306 = _tmp182 * _tmp90;
  const Scalar _tmp307 = (Scalar(1) / Scalar(2)) * camera(1, 0);
  const Scalar _tmp308 = _tmp307 * (-_tmp265 * _tmp303 - _tmp265 * _tmp306 + _tmp269 * _tmp300 +
                                    _tmp270 * _tmp92 + _tmp270 * _tmp96 + _tmp274 * _tmp301 +
                                    _tmp93 * (-_tmp265 * _tmp304 + _tmp270 * _tmp305 + _tmp272));
  const Scalar _tmp309 = _tmp307 * (_tmp231 * _tmp300 - _tmp237 * _tmp306 - _tmp238 * _tmp302 +
                                    _tmp239 * _tmp92 + _tmp239 * _tmp96 + _tmp246 * _tmp301 +
                                    _tmp93 * (-_tmp237 * _tmp304 + 6 * _tmp240 + _tmp244));
  const Scalar _tmp310 = _tmp307 * (-_tmp161 * _tmp303 - _tmp161 * _tmp306 + _tmp175 * _tmp300 +
                                    _tmp181 * _tmp92 + _tmp181 * _tmp96 + _tmp194 * _tmp301 +
                                    _tmp93 * (-_tmp161 * _tmp304 + _tmp181 * _tmp305 + _tmp190));
  const Scalar _tmp311 = _tmp307 * (_tmp288 * _tmp300 - _tmp292 * _tmp303 - _tmp292 * _tmp306 +
                                    _tmp294 * _tmp92 + _tmp294 * _tmp96 + _tmp298 * _tmp301 +
                                    _tmp93 * (-_tmp177 * _tmp293 + _tmp294 * _tmp305 + _tmp296));
  const Scalar _tmp312 = _tmp188 * _tmp81;
  const Scalar _tmp313 = _tmp185 * _tmp67;
  const Scalar _tmp314 = _tmp67 * _tmp92;
  const Scalar _tmp315 = _tmp77 * _tmp95;
  const Scalar _tmp316 = _tmp178 * _tmp81;
  const Scalar _tmp317 = _tmp183 * _tmp77;
  const Scalar _tmp318 = _tmp316 - _tmp317;
  const Scalar _tmp319 = _tmp243 * _tmp81;
  const Scalar _tmp320 = _tmp189 * _tmp67;
  const Scalar _tmp321 = _tmp319 - _tmp320;
  const Scalar _tmp322 = _tmp318 + _tmp321;
  const Scalar _tmp323 = _tmp192 * _tmp322 + _tmp193 * _tmp322 + _tmp322 * camera(4, 0);
  const Scalar _tmp324 = _tmp196 * _tmp81;
  const Scalar _tmp325 = _tmp247 * _tmp81;
  const Scalar _tmp326 = _tmp176 * _tmp67;
  const Scalar _tmp327 = _tmp306 * _tmp81;
  const Scalar _tmp328 = _tmp303 * _tmp81;
  const Scalar _tmp329 = _tmp77 * _tmp92;
  const Scalar _tmp330 = _tmp300 * _tmp67;
  const Scalar _tmp331 = _tmp77 * _tmp96;
  const Scalar _tmp332 = _tmp304 * _tmp81;
  const Scalar _tmp333 = _tmp305 * _tmp77;
  const Scalar _tmp334 = _tmp196 * _tmp82;
  const Scalar _tmp335 = _tmp176 * _tmp55;
  const Scalar _tmp336 = _tmp247 * _tmp82;
  const Scalar _tmp337 = _tmp183 * _tmp76;
  const Scalar _tmp338 = _tmp178 * _tmp82;
  const Scalar _tmp339 = -_tmp337 + _tmp338;
  const Scalar _tmp340 = _tmp188 * _tmp82;
  const Scalar _tmp341 = _tmp55 * _tmp92;
  const Scalar _tmp342 = _tmp189 * _tmp55;
  const Scalar _tmp343 = _tmp243 * _tmp82;
  const Scalar _tmp344 = -_tmp342 + _tmp343;
  const Scalar _tmp345 = _tmp339 + _tmp344;
  const Scalar _tmp346 = _tmp192 * _tmp345 + _tmp193 * _tmp345 + _tmp345 * camera(4, 0);
  const Scalar _tmp347 = _tmp76 * _tmp95;
  const Scalar _tmp348 = _tmp185 * _tmp55;
  const Scalar _tmp349 = _tmp305 * _tmp76;
  const Scalar _tmp350 = _tmp304 * _tmp82;
  const Scalar _tmp351 = _tmp303 * _tmp82;
  const Scalar _tmp352 = _tmp76 * _tmp92;
  const Scalar _tmp353 = _tmp76 * _tmp96;
  const Scalar _tmp354 = _tmp306 * _tmp82;
  const Scalar _tmp355 = _tmp300 * _tmp55;
  const Scalar _tmp356 = _tmp64 * _tmp92;
  const Scalar _tmp357 = _tmp185 * _tmp64;
  const Scalar _tmp358 = _tmp176 * _tmp64;
  const Scalar _tmp359 = _tmp247 * _tmp80;
  const Scalar _tmp360 = _tmp183 * _tmp74;
  const Scalar _tmp361 = _tmp178 * _tmp80;
  const Scalar _tmp362 = -_tmp360 + _tmp361;
  const Scalar _tmp363 = _tmp188 * _tmp80;
  const Scalar _tmp364 = _tmp196 * _tmp80;
  const Scalar _tmp365 = _tmp189 * _tmp64;
  const Scalar _tmp366 = _tmp243 * _tmp80;
  const Scalar _tmp367 = -_tmp365 + _tmp366;
  const Scalar _tmp368 = _tmp362 + _tmp367;
  const Scalar _tmp369 = _tmp192 * _tmp368 + _tmp193 * _tmp368 + _tmp368 * camera(4, 0);
  const Scalar _tmp370 = _tmp74 * _tmp95;
  const Scalar _tmp371 = _tmp300 * _tmp64;
  const Scalar _tmp372 = _tmp305 * _tmp74;
  const Scalar _tmp373 = _tmp304 * _tmp80;
  const Scalar _tmp374 = _tmp306 * _tmp80;
  const Scalar _tmp375 = _tmp74 * _tmp92;
  const Scalar _tmp376 = _tmp303 * _tmp80;
  const Scalar _tmp377 = _tmp74 * _tmp96;
  const Scalar _tmp378 = -_tmp20 * _tmp228;
  const Scalar _tmp379 = -_tmp120 * _tmp48;
  const Scalar _tmp380 = _tmp36 * _tmp47;
  const Scalar _tmp381 = _tmp115 * _tmp51;
  const Scalar _tmp382 = _tmp39 * _tmp48;
  const Scalar _tmp383 = _tmp26 * _tmp53;
  const Scalar _tmp384 = -_tmp383;
  const Scalar _tmp385 = _tmp39 * _tmp47;
  const Scalar _tmp386 = _tmp20 * _tmp53;
  const Scalar _tmp387 = _tmp36 * _tmp48;
  const Scalar _tmp388 = _tmp27 * _tmp51 + _tmp387;
  const Scalar _tmp389 = _tmp46 * (_tmp380 + _tmp381 - _tmp382 + _tmp384) +
                         _tmp61 * (_tmp378 + _tmp379) + _tmp69 * (_tmp385 + _tmp386 + _tmp388);
  const Scalar _tmp390 = -_tmp143 * _tmp51;
  const Scalar _tmp391 = _tmp36 * _tmp52;
  const Scalar _tmp392 = -_tmp391;
  const Scalar _tmp393 = _tmp39 * _tmp51;
  const Scalar _tmp394 = _tmp27 * _tmp47;
  const Scalar _tmp395 = _tmp115 * _tmp48 + _tmp394;
  const Scalar _tmp396 = _tmp381 + _tmp382;
  const Scalar _tmp397 = _tmp46 * (_tmp379 + _tmp390) + _tmp61 * (_tmp380 + _tmp383 + _tmp396) +
                         _tmp69 * (_tmp392 - _tmp393 + _tmp395);
  const Scalar _tmp398 = -_tmp386;
  const Scalar _tmp399 = _tmp391 + _tmp393;
  const Scalar _tmp400 = _tmp46 * (_tmp395 + _tmp399) + _tmp61 * (-_tmp385 + _tmp388 + _tmp398) +
                         _tmp69 * (_tmp378 + _tmp390);
  const Scalar _tmp401 = _tmp189 * _tmp400 - _tmp243 * _tmp389;
  const Scalar _tmp402 = -_tmp178 * _tmp389 + _tmp183 * _tmp397;
  const Scalar _tmp403 = _tmp401 + _tmp402;
  const Scalar _tmp404 = _tmp192 * _tmp403 + _tmp193 * _tmp403 + _tmp403 * camera(4, 0);
  const Scalar _tmp405 =
      _tmp197 * (_tmp185 * _tmp400 - _tmp188 * _tmp389 + _tmp195 * _tmp404 - _tmp196 * _tmp389 +
                 _tmp397 * _tmp95 + _tmp400 * _tmp92 +
                 camera(8, 0) * (_tmp176 * _tmp400 - _tmp247 * _tmp389 + _tmp402));
  const Scalar _tmp406 = _tmp12 - _tmp14 - _tmp17 - _tmp19;
  const Scalar _tmp407 = _tmp135 * _tmp406;
  const Scalar _tmp408 = -_tmp31 + _tmp32 - _tmp33 - _tmp34;
  const Scalar _tmp409 = _tmp408 * _tmp71;
  const Scalar _tmp410 = _tmp382 + _tmp409;
  const Scalar _tmp411 = _tmp408 * _tmp53;
  const Scalar _tmp412 = _tmp406 * _tmp49;
  const Scalar _tmp413 = _tmp393 + _tmp394;
  const Scalar _tmp414 = -_tmp112 * _tmp408;
  const Scalar _tmp415 = -_tmp120 * _tmp51;
  const Scalar _tmp416 = _tmp46 * (_tmp414 + _tmp415) + _tmp61 * (_tmp411 + _tmp412 + _tmp413) +
                         _tmp69 * (_tmp384 - _tmp407 + _tmp410);
  const Scalar _tmp417 = -_tmp228 * _tmp30;
  const Scalar _tmp418 = _tmp406 * _tmp71;
  const Scalar _tmp419 = _tmp27 * _tmp48;
  const Scalar _tmp420 = _tmp135 * _tmp408;
  const Scalar _tmp421 = _tmp30 * _tmp53;
  const Scalar _tmp422 = _tmp420 + _tmp421;
  const Scalar _tmp423 = _tmp46 * (-_tmp411 - _tmp412 + _tmp413) + _tmp61 * (_tmp414 + _tmp417) +
                         _tmp69 * (_tmp418 + _tmp419 + _tmp422);
  const Scalar _tmp424 = -_tmp178 * _tmp423 + _tmp183 * _tmp416;
  const Scalar _tmp425 = -_tmp421;
  const Scalar _tmp426 = _tmp46 * (_tmp383 + _tmp407 + _tmp410) +
                         _tmp61 * (-_tmp418 + _tmp419 + _tmp420 + _tmp425) +
                         _tmp69 * (_tmp415 + _tmp417);
  const Scalar _tmp427 = _tmp189 * _tmp426 - _tmp243 * _tmp423;
  const Scalar _tmp428 = _tmp424 + _tmp427;
  const Scalar _tmp429 = _tmp192 * _tmp428 + _tmp193 * _tmp428 + _tmp428 * camera(4, 0);
  const Scalar _tmp430 =
      _tmp197 * (_tmp185 * _tmp426 - _tmp188 * _tmp423 + _tmp195 * _tmp429 - _tmp196 * _tmp423 +
                 _tmp416 * _tmp95 + _tmp426 * _tmp92 +
                 camera(8, 0) * (_tmp176 * _tmp426 - _tmp247 * _tmp423 + _tmp424));
  const Scalar _tmp431 = -_tmp22 - _tmp23 + _tmp24 - _tmp25;
  const Scalar _tmp432 = _tmp431 * _tmp53;
  const Scalar _tmp433 = -_tmp112 * _tmp20;
  const Scalar _tmp434 = -_tmp228 * _tmp431;
  const Scalar _tmp435 = _tmp408 * _tmp49;
  const Scalar _tmp436 = _tmp135 * _tmp431;
  const Scalar _tmp437 = _tmp385 + _tmp436;
  const Scalar _tmp438 = _tmp46 * (_tmp398 - _tmp435 + _tmp437) + _tmp61 * (_tmp433 + _tmp434) +
                         _tmp69 * (_tmp396 + _tmp409 + _tmp432);
  const Scalar _tmp439 = _tmp431 * _tmp49;
  const Scalar _tmp440 = _tmp115 * _tmp47 + _tmp439;
  const Scalar _tmp441 = -_tmp173 * _tmp30;
  const Scalar _tmp442 = _tmp46 * (_tmp433 + _tmp441) + _tmp61 * (_tmp386 + _tmp435 + _tmp437) +
                         _tmp69 * (-_tmp420 + _tmp425 + _tmp440);
  const Scalar _tmp443 = -_tmp178 * _tmp438 + _tmp183 * _tmp442;
  const Scalar _tmp444 = _tmp46 * (_tmp422 + _tmp440) + _tmp61 * (_tmp396 - _tmp409 - _tmp432) +
                         _tmp69 * (_tmp434 + _tmp441);
  const Scalar _tmp445 = _tmp189 * _tmp444 - _tmp243 * _tmp438;
  const Scalar _tmp446 = _tmp443 + _tmp445;
  const Scalar _tmp447 = _tmp192 * _tmp446 + _tmp193 * _tmp446 + _tmp446 * camera(4, 0);
  const Scalar _tmp448 =
      _tmp197 * (_tmp185 * _tmp444 - _tmp188 * _tmp438 + _tmp195 * _tmp447 - _tmp196 * _tmp438 +
                 _tmp442 * _tmp95 + _tmp444 * _tmp92 +
                 camera(8, 0) * (_tmp176 * _tmp444 - _tmp247 * _tmp438 + _tmp443));
  const Scalar _tmp449 = _tmp431 * _tmp71;
  const Scalar _tmp450 = -_tmp143 * _tmp47;
  const Scalar _tmp451 = -_tmp112 * _tmp30;
  const Scalar _tmp452 = _tmp36 * _tmp51 + _tmp418;
  const Scalar _tmp453 = _tmp46 * (_tmp425 - _tmp439 + _tmp452) + _tmp61 * (_tmp450 + _tmp451) +
                         _tmp69 * (_tmp399 + _tmp412 + _tmp449);
  const Scalar _tmp454 = _tmp186 * _tmp453;
  const Scalar _tmp455 = -_tmp173 * _tmp406;
  const Scalar _tmp456 = _tmp406 * _tmp53;
  const Scalar _tmp457 = _tmp46 * (_tmp451 + _tmp455) + _tmp61 * (_tmp421 + _tmp439 + _tmp452) +
                         _tmp69 * (_tmp385 + _tmp387 - _tmp436 - _tmp456);
  const Scalar _tmp458 = -_tmp178 * _tmp453 + _tmp183 * _tmp457;
  const Scalar _tmp459 = _tmp46 * (_tmp387 + _tmp437 + _tmp456) +
                         _tmp61 * (_tmp392 + _tmp393 + _tmp412 - _tmp449) +
                         _tmp69 * (_tmp450 + _tmp455);
  const Scalar _tmp460 = _tmp189 * _tmp459 - _tmp243 * _tmp453;
  const Scalar _tmp461 = _tmp458 + _tmp460;
  const Scalar _tmp462 = _tmp192 * _tmp461 + _tmp193 * _tmp461 + _tmp461 * camera(4, 0);
  const Scalar _tmp463 =
      _tmp197 * (_tmp185 * _tmp459 - _tmp187 * _tmp454 + _tmp195 * _tmp462 - _tmp196 * _tmp453 +
                 _tmp457 * _tmp95 + _tmp459 * _tmp92 +
                 camera(8, 0) * (_tmp176 * _tmp459 - _tmp247 * _tmp453 + _tmp458));
  const Scalar _tmp464 = _tmp307 * (_tmp300 * _tmp444 + _tmp301 * _tmp447 - _tmp303 * _tmp438 -
                                    _tmp306 * _tmp438 + _tmp442 * _tmp92 + _tmp442 * _tmp96 +
                                    _tmp93 * (-_tmp304 * _tmp438 + _tmp305 * _tmp442 + _tmp445));
  const Scalar _tmp465 = _tmp307 * (_tmp300 * _tmp400 + _tmp301 * _tmp404 - _tmp303 * _tmp389 -
                                    _tmp306 * _tmp389 + _tmp397 * _tmp92 + _tmp397 * _tmp96 +
                                    _tmp93 * (-_tmp304 * _tmp389 + _tmp305 * _tmp397 + _tmp401));
  const Scalar _tmp466 = _tmp307 * (_tmp300 * _tmp426 + _tmp301 * _tmp429 - _tmp303 * _tmp423 -
                                    _tmp306 * _tmp423 + _tmp416 * _tmp92 + _tmp416 * _tmp96 +
                                    _tmp93 * (-_tmp304 * _tmp423 + _tmp305 * _tmp416 + _tmp427));
  const Scalar _tmp467 = _tmp307 * (_tmp300 * _tmp459 + _tmp301 * _tmp462 - _tmp302 * _tmp454 -
                                    _tmp306 * _tmp453 + _tmp457 * _tmp92 + _tmp457 * _tmp96 +
                                    _tmp93 * (-_tmp304 * _tmp453 + _tmp305 * _tmp457 + _tmp460));
  const Scalar _tmp468 = -_tmp28;
  const Scalar _tmp469 = _tmp468 + _tmp68;
  const Scalar _tmp470 = -_tmp58;
  const Scalar _tmp471 = _tmp470 + _tmp59;
  const Scalar _tmp472 = _tmp42 + _tmp56 - 1;
  const Scalar _tmp473 = _tmp469 * _tmp82 + _tmp471 * _tmp80 + _tmp472 * _tmp81;
  const Scalar _tmp474 = _tmp469 * _tmp55 + _tmp471 * _tmp64 + _tmp472 * _tmp67;
  const Scalar _tmp475 = _tmp189 * _tmp474 - _tmp243 * _tmp473;
  const Scalar _tmp476 = _tmp469 * _tmp76 + _tmp471 * _tmp74 + _tmp472 * _tmp77;
  const Scalar _tmp477 = -_tmp178 * _tmp473 + _tmp183 * _tmp476;
  const Scalar _tmp478 = _tmp475 + _tmp477;
  const Scalar _tmp479 = _tmp192 * _tmp478 + _tmp193 * _tmp478 + _tmp478 * camera(4, 0);
  const Scalar _tmp480 = _tmp44 - 1;
  const Scalar _tmp481 = _tmp42 + _tmp480;
  const Scalar _tmp482 = _tmp37 + _tmp468;
  const Scalar _tmp483 = -_tmp38;
  const Scalar _tmp484 = _tmp41 + _tmp483;
  const Scalar _tmp485 = _tmp481 * _tmp55 + _tmp482 * _tmp67 + _tmp484 * _tmp64;
  const Scalar _tmp486 = _tmp481 * _tmp82 + _tmp482 * _tmp81 + _tmp484 * _tmp80;
  const Scalar _tmp487 = _tmp481 * _tmp76 + _tmp482 * _tmp77 + _tmp484 * _tmp74;
  const Scalar _tmp488 = -_tmp178 * _tmp486 + _tmp183 * _tmp487;
  const Scalar _tmp489 = _tmp189 * _tmp485 - _tmp243 * _tmp486;
  const Scalar _tmp490 = _tmp488 + _tmp489;
  const Scalar _tmp491 = _tmp192 * _tmp490 + _tmp193 * _tmp490 + _tmp490 * camera(4, 0);
  const Scalar _tmp492 = _tmp470 + _tmp60;
  const Scalar _tmp493 = _tmp480 + _tmp56;
  const Scalar _tmp494 = _tmp40 + _tmp483;
  const Scalar _tmp495 = _tmp492 * _tmp81 + _tmp493 * _tmp80 + _tmp494 * _tmp82;
  const Scalar _tmp496 = _tmp492 * _tmp67 + _tmp493 * _tmp64 + _tmp494 * _tmp55;
  const Scalar _tmp497 = _tmp492 * _tmp77 + _tmp493 * _tmp74 + _tmp494 * _tmp76;
  const Scalar _tmp498 = -_tmp178 * _tmp495 + _tmp183 * _tmp497;
  const Scalar _tmp499 = _tmp189 * _tmp496 - _tmp243 * _tmp495;
  const Scalar _tmp500 = _tmp498 + _tmp499;
  const Scalar _tmp501 = _tmp192 * _tmp500 + _tmp193 * _tmp500 + _tmp500 * camera(4, 0);
  const Scalar _tmp502 = -_tmp11;
  const Scalar _tmp503 = _tmp7 * world_R_imu_xyzw(2, 0);
  const Scalar _tmp504 = _tmp503 * angular_velocity_imu(2, 0);
  const Scalar _tmp505 = [&]() {
    const Scalar base = row_time;
    return base * base * base;
  }();
  const Scalar _tmp506 = _tmp505 / (_tmp4 * std::sqrt(_tmp4));
  const Scalar _tmp507 = _tmp506 * angular_velocity_imu(0, 0);
  const Scalar _tmp508 = _tmp504 * _tmp507;
  const Scalar _tmp509 = (Scalar(1) / Scalar(2)) * _tmp505 / _tmp4;
  const Scalar _tmp510 = _tmp509 * angular_velocity_imu(2, 0);
  const Scalar _tmp511 = _tmp510 * angular_velocity_imu(0, 0);
  const Scalar _tmp512 = _tmp34 * _tmp511;
  const Scalar _tmp513 = _tmp0 * _tmp506;
  const Scalar _tmp514 = _tmp7 * world_R_imu_xyzw(0, 0);
  const Scalar _tmp515 = _tmp25 * _tmp509;
  const Scalar _tmp516 = (Scalar(1) / Scalar(2)) * _tmp1 * _tmp8;
  const Scalar _tmp517 = _tmp516 * angular_velocity_imu(0, 0);
  const Scalar _tmp518 = angular_velocity_imu(0, 0) * angular_velocity_imu(1, 0);
  const Scalar _tmp519 = _tmp509 * _tmp518;
  const Scalar _tmp520 = _tmp7 * world_R_imu_xyzw(1, 0);
  const Scalar _tmp521 = _tmp507 * angular_velocity_imu(1, 0);
  const Scalar _tmp522 = -_tmp19 * _tmp519 + _tmp520 * _tmp521;
  const Scalar _tmp523 = -_tmp0 * _tmp515 - _tmp15 * _tmp517 + _tmp502 + _tmp508 - _tmp512 +
                         _tmp513 * _tmp514 + _tmp522;
  const Scalar _tmp524 = _tmp27 * _tmp523;
  const Scalar _tmp525 = _tmp34 * _tmp519;
  const Scalar _tmp526 = _tmp503 * angular_velocity_imu(1, 0);
  const Scalar _tmp527 = _tmp507 * _tmp526;
  const Scalar _tmp528 = _tmp19 * _tmp511;
  const Scalar _tmp529 = _tmp507 * angular_velocity_imu(2, 0);
  const Scalar _tmp530 = _tmp520 * _tmp529;
  const Scalar _tmp531 = _tmp0 * _tmp509;
  const Scalar _tmp532 = -_tmp15 * _tmp513 + _tmp16 + _tmp29 * _tmp531 - _tmp514 * _tmp517 -
                         _tmp525 + _tmp527 + _tmp528 - _tmp530;
  const Scalar _tmp533 = _tmp39 * _tmp532;
  const Scalar _tmp534 = -_tmp21;
  const Scalar _tmp535 = _tmp514 * _tmp521;
  const Scalar _tmp536 = _tmp515 * _tmp518;
  const Scalar _tmp537 = -_tmp15 * _tmp529 + _tmp29 * _tmp511;
  const Scalar _tmp538 = -_tmp19 * _tmp531 - _tmp503 * _tmp517 + _tmp513 * _tmp520 + _tmp534 -
                         _tmp535 + _tmp536 + _tmp537;
  const Scalar _tmp539 = -_tmp15 * _tmp521 + _tmp29 * _tmp519;
  const Scalar _tmp540 = _tmp515 * angular_velocity_imu(2, 0);
  const Scalar _tmp541 = _tmp514 * _tmp529 - _tmp540 * angular_velocity_imu(0, 0);
  const Scalar _tmp542 =
      _tmp13 + _tmp34 * _tmp531 - _tmp503 * _tmp513 - _tmp517 * _tmp520 + _tmp539 + _tmp541;
  const Scalar _tmp543 = _tmp115 * _tmp538 + _tmp36 * _tmp542;
  const Scalar _tmp544 = _tmp115 * _tmp523;
  const Scalar _tmp545 = _tmp39 * _tmp542;
  const Scalar _tmp546 = _tmp27 * _tmp538 + _tmp36 * _tmp532;
  const Scalar _tmp547 = -_tmp120 * _tmp532;
  const Scalar _tmp548 = -_tmp122 * _tmp542;
  const Scalar _tmp549 = -imu_t_cam(0, 0) * (-_tmp544 - _tmp545 + _tmp546) -
                         imu_t_cam(1, 0) * (_tmp524 + _tmp533 + _tmp543) -
                         imu_t_cam(2, 0) * (_tmp547 + _tmp548);
  const Scalar _tmp550 = _tmp36 * _tmp523;
  const Scalar _tmp551 = _tmp39 * _tmp538;
  const Scalar _tmp552 = _tmp115 * _tmp532 + _tmp27 * _tmp542;
  const Scalar _tmp553 = -_tmp143 * _tmp538;
  const Scalar _tmp554 = -imu_t_cam(0, 0) * (_tmp548 + _tmp553) -
                         imu_t_cam(1, 0) * (-_tmp550 - _tmp551 + _tmp552) -
                         imu_t_cam(2, 0) * (_tmp544 + _tmp545 + _tmp546);
  const Scalar _tmp555 = _tmp523 * imu_R_cam_xyzw(0, 0) + _tmp532 * imu_R_cam_xyzw(3, 0) -
                         _tmp538 * imu_R_cam_xyzw(1, 0) + _tmp542 * imu_R_cam_xyzw(2, 0);
  const Scalar _tmp556 = _tmp53 * _tmp555;
  const Scalar _tmp557 = _tmp523 * imu_R_cam_xyzw(3, 0) - _tmp532 * imu_R_cam_xyzw(0, 0) -
                         _tmp538 * imu_R_cam_xyzw(2, 0) - _tmp542 * imu_R_cam_xyzw(1, 0);
  const Scalar _tmp558 = _tmp49 * _tmp557;
  const Scalar _tmp559 = _tmp523 * imu_R_cam_xyzw(1, 0) - _tmp532 * imu_R_cam_xyzw(2, 0) +
                         _tmp538 * imu_R_cam_xyzw(0, 0) + _tmp542 * imu_R_cam_xyzw(3, 0);
  const Scalar _tmp560 = _tmp523 * imu_R_cam_xyzw(2, 0) + _tmp532 * imu_R_cam_xyzw(1, 0) +
                         _tmp538 * imu_R_cam_xyzw(3, 0) - _tmp542 * imu_R_cam_xyzw(0, 0);
  const Scalar _tmp561 = _tmp135 * _tmp559 + _tmp560 * _tmp71;
  const Scalar _tmp562 = -_tmp112 * _tmp555;
  const Scalar _tmp563 = -_tmp173 * _tmp560;
  const Scalar _tmp564 = _tmp135 * _tmp557;
  const Scalar _tmp565 = _tmp53 * _tmp560;
  const Scalar _tmp566 = _tmp49 * _tmp559 + _tmp555 * _tmp71;
  const Scalar _tmp567 = -imu_t_cam(0, 0) * (_tmp550 + _tmp551 + _tmp552) -
                         imu_t_cam(1, 0) * (_tmp547 + _tmp553) -
                         imu_t_cam(2, 0) * (-_tmp524 - _tmp533 + _tmp543);
  const Scalar _tmp568 = _tmp46 * (_tmp562 + _tmp563) + _tmp549 * _tmp74 + _tmp554 * _tmp77 +
                         _tmp567 * _tmp76 + _tmp61 * (_tmp556 + _tmp558 + _tmp561) +
                         _tmp69 * (-_tmp564 - _tmp565 + _tmp566);
  const Scalar _tmp569 = _tmp53 * _tmp559;
  const Scalar _tmp570 = _tmp557 * _tmp71;
  const Scalar _tmp571 = _tmp135 * _tmp555 + _tmp49 * _tmp560;
  const Scalar _tmp572 = -_tmp228 * _tmp559;
  const Scalar _tmp573 = _tmp46 * (-_tmp556 - _tmp558 + _tmp561) + _tmp549 * _tmp80 +
                         _tmp554 * _tmp81 + _tmp567 * _tmp82 + _tmp61 * (_tmp562 + _tmp572) +
                         _tmp69 * (_tmp569 + _tmp570 + _tmp571);
  const Scalar _tmp574 = -_tmp178 * _tmp573 + _tmp183 * _tmp568;
  const Scalar _tmp575 = _tmp46 * (_tmp564 + _tmp565 + _tmp566) + _tmp549 * _tmp64 +
                         _tmp55 * _tmp567 + _tmp554 * _tmp67 +
                         _tmp61 * (-_tmp569 - _tmp570 + _tmp571) + _tmp69 * (_tmp563 + _tmp572);
  const Scalar _tmp576 = _tmp189 * _tmp575 - _tmp243 * _tmp573;
  const Scalar _tmp577 = _tmp574 + _tmp576;
  const Scalar _tmp578 = _tmp192 * _tmp577 + _tmp193 * _tmp577 + _tmp577 * camera(4, 0);
  const Scalar _tmp579 = _tmp506 * angular_velocity_imu(1, 0);
  const Scalar _tmp580 = _tmp579 * angular_velocity_imu(2, 0);
  const Scalar _tmp581 = _tmp520 * _tmp580;
  const Scalar _tmp582 = _tmp510 * angular_velocity_imu(1, 0);
  const Scalar _tmp583 = _tmp19 * _tmp582;
  const Scalar _tmp584 = -_tmp13;
  const Scalar _tmp585 = _tmp3 * _tmp506;
  const Scalar _tmp586 = _tmp3 * _tmp509;
  const Scalar _tmp587 = _tmp516 * angular_velocity_imu(1, 0);
  const Scalar _tmp588 = -_tmp34 * _tmp586 + _tmp503 * _tmp585 - _tmp514 * _tmp587 + _tmp539 -
                         _tmp581 + _tmp583 + _tmp584;
  const Scalar _tmp589 = _tmp39 * _tmp588;
  const Scalar _tmp590 = -_tmp34 * _tmp582 + _tmp504 * _tmp579;
  const Scalar _tmp591 = -_tmp15 * _tmp587 - _tmp19 * _tmp586 + _tmp520 * _tmp585 + _tmp534 +
                         _tmp535 - _tmp536 + _tmp590;
  const Scalar _tmp592 = _tmp27 * _tmp591;
  const Scalar _tmp593 = -_tmp15 * _tmp580 + _tmp29 * _tmp582;
  const Scalar _tmp594 =
      _tmp11 + _tmp3 * _tmp515 - _tmp514 * _tmp585 - _tmp516 * _tmp526 + _tmp522 + _tmp593;
  const Scalar _tmp595 = _tmp540 * angular_velocity_imu(1, 0);
  const Scalar _tmp596 = _tmp514 * _tmp580;
  const Scalar _tmp597 = -_tmp15 * _tmp585 + _tmp16 + _tmp29 * _tmp586 - _tmp520 * _tmp587 +
                         _tmp525 - _tmp527 - _tmp595 + _tmp596;
  const Scalar _tmp598 = _tmp115 * _tmp594 + _tmp36 * _tmp597;
  const Scalar _tmp599 = -_tmp143 * _tmp594;
  const Scalar _tmp600 = -_tmp120 * _tmp588;
  const Scalar _tmp601 = _tmp39 * _tmp594;
  const Scalar _tmp602 = _tmp36 * _tmp591;
  const Scalar _tmp603 = _tmp115 * _tmp588 + _tmp27 * _tmp597;
  const Scalar _tmp604 = -imu_t_cam(0, 0) * (_tmp601 + _tmp602 + _tmp603) -
                         imu_t_cam(1, 0) * (_tmp599 + _tmp600) -
                         imu_t_cam(2, 0) * (-_tmp589 - _tmp592 + _tmp598);
  const Scalar _tmp605 = -_tmp588 * imu_R_cam_xyzw(0, 0) + _tmp591 * imu_R_cam_xyzw(3, 0) -
                         _tmp594 * imu_R_cam_xyzw(2, 0) - _tmp597 * imu_R_cam_xyzw(1, 0);
  const Scalar _tmp606 = _tmp135 * _tmp605;
  const Scalar _tmp607 = _tmp588 * imu_R_cam_xyzw(1, 0) + _tmp591 * imu_R_cam_xyzw(2, 0) +
                         _tmp594 * imu_R_cam_xyzw(3, 0) - _tmp597 * imu_R_cam_xyzw(0, 0);
  const Scalar _tmp608 = _tmp53 * _tmp607;
  const Scalar _tmp609 = -_tmp588 * imu_R_cam_xyzw(2, 0) + _tmp591 * imu_R_cam_xyzw(1, 0) +
                         _tmp594 * imu_R_cam_xyzw(0, 0) + _tmp597 * imu_R_cam_xyzw(3, 0);
  const Scalar _tmp610 = _tmp588 * imu_R_cam_xyzw(3, 0) + _tmp591 * imu_R_cam_xyzw(0, 0) -
                         _tmp594 * imu_R_cam_xyzw(1, 0) + _tmp597 * imu_R_cam_xyzw(2, 0);
  const Scalar _tmp611 = _tmp49 * _tmp609 + _tmp610 * _tmp71;
  const Scalar _tmp612 = _tmp605 * _tmp71;
  const Scalar _tmp613 = _tmp53 * _tmp609;
  const Scalar _tmp614 = _tmp135 * _tmp610 + _tmp49 * _tmp607;
  const Scalar _tmp615 = -_tmp228 * _tmp609;
  const Scalar _tmp616 = -_tmp173 * _tmp607;
  const Scalar _tmp617 = -_tmp122 * _tmp597;
  const Scalar _tmp618 = _tmp115 * _tmp591;
  const Scalar _tmp619 = _tmp39 * _tmp597;
  const Scalar _tmp620 = _tmp27 * _tmp594 + _tmp36 * _tmp588;
  const Scalar _tmp621 = -imu_t_cam(0, 0) * (_tmp599 + _tmp617) -
                         imu_t_cam(1, 0) * (-_tmp601 - _tmp602 + _tmp603) -
                         imu_t_cam(2, 0) * (_tmp618 + _tmp619 + _tmp620);
  const Scalar _tmp622 = -imu_t_cam(0, 0) * (-_tmp618 - _tmp619 + _tmp620) -
                         imu_t_cam(1, 0) * (_tmp589 + _tmp592 + _tmp598) -
                         imu_t_cam(2, 0) * (_tmp600 + _tmp617);
  const Scalar _tmp623 = _tmp46 * (_tmp606 + _tmp608 + _tmp611) + _tmp55 * _tmp604 +
                         _tmp61 * (-_tmp612 - _tmp613 + _tmp614) + _tmp621 * _tmp67 +
                         _tmp622 * _tmp64 + _tmp69 * (_tmp615 + _tmp616);
  const Scalar _tmp624 = -_tmp112 * _tmp610;
  const Scalar _tmp625 = _tmp49 * _tmp605;
  const Scalar _tmp626 = _tmp53 * _tmp610;
  const Scalar _tmp627 = _tmp135 * _tmp609 + _tmp607 * _tmp71;
  const Scalar _tmp628 = _tmp46 * (_tmp616 + _tmp624) + _tmp604 * _tmp76 +
                         _tmp61 * (_tmp625 + _tmp626 + _tmp627) + _tmp621 * _tmp77 +
                         _tmp622 * _tmp74 + _tmp69 * (-_tmp606 - _tmp608 + _tmp611);
  const Scalar _tmp629 = _tmp46 * (-_tmp625 - _tmp626 + _tmp627) + _tmp604 * _tmp82 +
                         _tmp61 * (_tmp615 + _tmp624) + _tmp621 * _tmp81 + _tmp622 * _tmp80 +
                         _tmp69 * (_tmp612 + _tmp613 + _tmp614);
  const Scalar _tmp630 = -_tmp178 * _tmp629 + _tmp183 * _tmp628;
  const Scalar _tmp631 = _tmp189 * _tmp623 - _tmp243 * _tmp629;
  const Scalar _tmp632 = _tmp630 + _tmp631;
  const Scalar _tmp633 = _tmp192 * _tmp632 + _tmp193 * _tmp632 + _tmp632 * camera(4, 0);
  const Scalar _tmp634 = _tmp2 * _tmp509;
  const Scalar _tmp635 = _tmp2 * _tmp506;
  const Scalar _tmp636 = _tmp635 * _tmp7;
  const Scalar _tmp637 = _tmp516 * angular_velocity_imu(2, 0);
  const Scalar _tmp638 = -_tmp25 * _tmp634 + _tmp502 - _tmp508 + _tmp512 - _tmp520 * _tmp637 +
                         _tmp593 + _tmp636 * world_R_imu_xyzw(0, 0);
  const Scalar _tmp639 = -_tmp15 * _tmp637 - _tmp34 * _tmp634 + _tmp541 + _tmp581 - _tmp583 +
                         _tmp584 + _tmp636 * world_R_imu_xyzw(2, 0);
  const Scalar _tmp640 = -_tmp15 * _tmp635 + _tmp16 + _tmp29 * _tmp634 - _tmp504 * _tmp516 -
                         _tmp528 + _tmp530 + _tmp595 - _tmp596;
  const Scalar _tmp641 =
      _tmp19 * _tmp634 + _tmp21 - _tmp514 * _tmp637 - _tmp520 * _tmp635 + _tmp537 + _tmp590;
  const Scalar _tmp642 = _tmp638 * imu_R_cam_xyzw(3, 0) + _tmp639 * imu_R_cam_xyzw(1, 0) +
                         _tmp640 * imu_R_cam_xyzw(0, 0) - _tmp641 * imu_R_cam_xyzw(2, 0);
  const Scalar _tmp643 = _tmp53 * _tmp642;
  const Scalar _tmp644 = -_tmp638 * imu_R_cam_xyzw(1, 0) + _tmp639 * imu_R_cam_xyzw(3, 0) -
                         _tmp640 * imu_R_cam_xyzw(2, 0) - _tmp641 * imu_R_cam_xyzw(0, 0);
  const Scalar _tmp645 = _tmp644 * _tmp71;
  const Scalar _tmp646 = -_tmp638 * imu_R_cam_xyzw(0, 0) + _tmp639 * imu_R_cam_xyzw(2, 0) +
                         _tmp640 * imu_R_cam_xyzw(3, 0) + _tmp641 * imu_R_cam_xyzw(1, 0);
  const Scalar _tmp647 = _tmp638 * imu_R_cam_xyzw(2, 0) + _tmp639 * imu_R_cam_xyzw(0, 0) -
                         _tmp640 * imu_R_cam_xyzw(1, 0) + _tmp641 * imu_R_cam_xyzw(3, 0);
  const Scalar _tmp648 = _tmp135 * _tmp647 + _tmp49 * _tmp646;
  const Scalar _tmp649 = -_tmp173 * _tmp646;
  const Scalar _tmp650 = -_tmp228 * _tmp642;
  const Scalar _tmp651 = _tmp115 * _tmp639;
  const Scalar _tmp652 = _tmp39 * _tmp638;
  const Scalar _tmp653 = _tmp27 * _tmp640 + _tmp36 * _tmp641;
  const Scalar _tmp654 = -_tmp143 * _tmp640;
  const Scalar _tmp655 = -_tmp122 * _tmp638;
  const Scalar _tmp656 = _tmp39 * _tmp640;
  const Scalar _tmp657 = _tmp36 * _tmp639;
  const Scalar _tmp658 = _tmp115 * _tmp641 + _tmp27 * _tmp638;
  const Scalar _tmp659 = -imu_t_cam(0, 0) * (_tmp654 + _tmp655) -
                         imu_t_cam(1, 0) * (-_tmp656 - _tmp657 + _tmp658) -
                         imu_t_cam(2, 0) * (_tmp651 + _tmp652 + _tmp653);
  const Scalar _tmp660 = _tmp53 * _tmp646;
  const Scalar _tmp661 = _tmp135 * _tmp644;
  const Scalar _tmp662 = _tmp49 * _tmp642 + _tmp647 * _tmp71;
  const Scalar _tmp663 = -_tmp120 * _tmp641;
  const Scalar _tmp664 = _tmp39 * _tmp641;
  const Scalar _tmp665 = _tmp27 * _tmp639;
  const Scalar _tmp666 = _tmp115 * _tmp640 + _tmp36 * _tmp638;
  const Scalar _tmp667 = -imu_t_cam(0, 0) * (_tmp656 + _tmp657 + _tmp658) -
                         imu_t_cam(1, 0) * (_tmp654 + _tmp663) -
                         imu_t_cam(2, 0) * (-_tmp664 - _tmp665 + _tmp666);
  const Scalar _tmp668 = -imu_t_cam(0, 0) * (-_tmp651 - _tmp652 + _tmp653) -
                         imu_t_cam(1, 0) * (_tmp664 + _tmp665 + _tmp666) -
                         imu_t_cam(2, 0) * (_tmp655 + _tmp663);
  const Scalar _tmp669 = _tmp46 * (_tmp660 + _tmp661 + _tmp662) + _tmp55 * _tmp667 +
                         _tmp61 * (-_tmp643 - _tmp645 + _tmp648) + _tmp64 * _tmp668 +
                         _tmp659 * _tmp67 + _tmp69 * (_tmp649 + _tmp650);
  const Scalar _tmp670 = -_tmp112 * _tmp647;
  const Scalar _tmp671 = _tmp53 * _tmp647;
  const Scalar _tmp672 = _tmp49 * _tmp644;
  const Scalar _tmp673 = _tmp135 * _tmp642 + _tmp646 * _tmp71;
  const Scalar _tmp674 = _tmp46 * (-_tmp671 - _tmp672 + _tmp673) + _tmp61 * (_tmp650 + _tmp670) +
                         _tmp659 * _tmp81 + _tmp667 * _tmp82 + _tmp668 * _tmp80 +
                         _tmp69 * (_tmp643 + _tmp645 + _tmp648);
  const Scalar _tmp675 = _tmp46 * (_tmp649 + _tmp670) + _tmp61 * (_tmp671 + _tmp672 + _tmp673) +
                         _tmp659 * _tmp77 + _tmp667 * _tmp76 + _tmp668 * _tmp74 +
                         _tmp69 * (-_tmp660 - _tmp661 + _tmp662);
  const Scalar _tmp676 = -_tmp178 * _tmp674 + _tmp183 * _tmp675;
  const Scalar _tmp677 = _tmp189 * _tmp669 - _tmp243 * _tmp674;
  const Scalar _tmp678 = _tmp676 + _tmp677;
  const Scalar _tmp679 = _tmp192 * _tmp678 + _tmp193 * _tmp678 + _tmp678 * camera(4, 0);
  const Scalar _tmp680 = _tmp316 * row_time - _tmp317 * row_time;
  const Scalar _tmp681 = _tmp319 * row_time - _tmp320 * row_time;
  const Scalar _tmp682 = _tmp680 + _tmp681;
  const Scalar _tmp683 = _tmp192 * _tmp682 + _tmp193 * _tmp682 + _tmp682 * camera(4, 0);
  const Scalar _tmp684 = -_tmp337 * row_time + _tmp338 * row_time;
  const Scalar _tmp685 = -_tmp342 * row_time + _tmp343 * row_time;
  const Scalar _tmp686 = _tmp684 + _tmp685;
  const Scalar _tmp687 = _tmp192 * _tmp686 + _tmp193 * _tmp686 + _tmp686 * camera(4, 0);
  const Scalar _tmp688 = -_tmp360 * row_time + _tmp361 * row_time;
  const Scalar _tmp689 = -_tmp365 * row_time + _tmp366 * row_time;
  const Scalar _tmp690 = _tmp688 + _tmp689;
  const Scalar _tmp691 = _tmp192 * _tmp690 + _tmp193 * _tmp690 + _tmp690 * camera(4, 0);
  const Scalar _tmp692 = -_tmp316 + _tmp317;
  const Scalar _tmp693 = -_tmp319 + _tmp320;
  const Scalar _tmp694 = _tmp692 + _tmp693;
  const Scalar _tmp695 = _tmp192 * _tmp694 + _tmp193 * _tmp694 + _tmp694 * camera(4, 0);
  const Scalar _tmp696 = _tmp337 - _tmp338;
  const Scalar _tmp697 = _tmp342 - _tmp343;
  const Scalar _tmp698 = _tmp696 + _tmp697;
  const Scalar _tmp699 = _tmp192 * _tmp698 + _tmp193 * _tmp698 + _tmp698 * camera(4, 0);
  const Scalar _tmp700 = _tmp360 - _tmp361;
  const Scalar _tmp701 = _tmp365 - _tmp366;
  const Scalar _tmp702 = _tmp700 + _tmp701;
  const Scalar _tmp703 = _tmp192 * _tmp702 + _tmp193 * _tmp702 + _tmp702 * camera(4, 0);

  // Output terms (8)
  if (p_image != nullptr) {
    Eigen::Matrix<Scalar, 2, 1>& _p_image = (*p_image);

    _p_image(0, 0) =
        camera(0, 0) * (_tmp70 * _tmp92 + _tmp78 * _tmp95 + camera(8, 0) * (_tmp85 + 3 * _tmp87)) +
        camera(2, 0);
    _p_image(1, 0) =
        camera(1, 0) * (_tmp78 * _tmp92 + _tmp78 * _tmp96 + _tmp93 * (3 * _tmp85 + _tmp87)) +
        camera(3, 0);
  }

  if (D_world_R_imu != nullptr) {
    Eigen::Matrix<Scalar, 2, 3>& _D_world_R_imu = (*D_world_R_imu);

    _D_world_R_imu(0, 0) = -_tmp198 * world_R_imu_xyzw(0, 0) + _tmp248 * world_R_imu_xyzw(2, 0) +
                           _tmp275 * world_R_imu_xyzw(3, 0) - _tmp299 * world_R_imu_xyzw(1, 0);
    _D_world_R_imu(1, 0) = _tmp308 * world_R_imu_xyzw(3, 0) + _tmp309 * world_R_imu_xyzw(2, 0) -
                           _tmp310 * world_R_imu_xyzw(0, 0) - _tmp311 * world_R_imu_xyzw(1, 0);
    _D_world_R_imu(0, 1) = -_tmp198 * world_R_imu_xyzw(1, 0) + _tmp248 * world_R_imu_xyzw(3, 0) -
                           _tmp275 * world_R_imu_xyzw(2, 0) + _tmp299 * world_R_imu_xyzw(0, 0);
    _D_world_R_imu(1, 1) = -_tmp308 * world_R_imu_xyzw(2, 0) + _tmp309 * world_R_imu_xyzw(3, 0) -
                           _tmp310 * world_R_imu_xyzw(1, 0) + _tmp311 * world_R_imu_xyzw(0, 0);
    _D_world_R_imu(0, 2) = -_tmp198 * world_R_imu_xyzw(2, 0) - _tmp248 * world_R_imu_xyzw(0, 0) +
                           _tmp275 * world_R_imu_xyzw(1, 0) + _tmp299 * world_R_imu_xyzw(3, 0);
    _D_world_R_imu(1, 2) = _tmp308 * world_R_imu_xyzw(1, 0) - _tmp309 * world_R_imu_xyzw(0, 0) -
                           _tmp310 * world_R_imu_xyzw(2, 0) + _tmp311 * world_R_imu_xyzw(3, 0);
  }

  if (D_world_t_imu != nullptr) {
    Eigen::Matrix<Scalar, 2, 3>& _D_world_t_imu = (*D_world_t_imu);

    _D_world_t_imu(0, 0) =
        camera(0, 0) * (_tmp195 * _tmp323 + _tmp312 - _tmp313 - _tmp314 - _tmp315 + _tmp324 +
                        camera(8, 0) * (_tmp318 + _tmp325 - _tmp326));
    _D_world_t_imu(1, 0) =
        camera(1, 0) * (_tmp301 * _tmp323 + _tmp327 + _tmp328 - _tmp329 - _tmp330 - _tmp331 +
                        _tmp93 * (_tmp321 + _tmp332 - _tmp333));
    _D_world_t_imu(0, 1) =
        camera(0, 0) * (_tmp195 * _tmp346 + _tmp334 + _tmp340 - _tmp341 - _tmp347 - _tmp348 +
                        camera(8, 0) * (-_tmp335 + _tmp336 + _tmp339));
    _D_world_t_imu(1, 1) =
        camera(1, 0) * (_tmp301 * _tmp346 + _tmp351 - _tmp352 - _tmp353 + _tmp354 - _tmp355 +
                        _tmp93 * (_tmp344 - _tmp349 + _tmp350));
    _D_world_t_imu(0, 2) =
        camera(0, 0) * (_tmp195 * _tmp369 - _tmp356 - _tmp357 + _tmp363 + _tmp364 - _tmp370 +
                        camera(8, 0) * (-_tmp358 + _tmp359 + _tmp362));
    _D_world_t_imu(1, 2) =
        camera(1, 0) * (_tmp301 * _tmp369 - _tmp371 + _tmp374 - _tmp375 + _tmp376 - _tmp377 +
                        _tmp93 * (_tmp367 - _tmp372 + _tmp373));
  }

  if (D_imu_R_cam != nullptr) {
    Eigen::Matrix<Scalar, 2, 3>& _D_imu_R_cam = (*D_imu_R_cam);

    _D_imu_R_cam(0, 0) = -_tmp405 * imu_R_cam_xyzw(0, 0) + _tmp430 * imu_R_cam_xyzw(2, 0) -
                         _tmp448 * imu_R_cam_xyzw(1, 0) + _tmp463 * imu_R_cam_xyzw(3, 0);
    _D_imu_R_cam(1, 0) = -_tmp464 * imu_R_cam_xyzw(1, 0) - _tmp465 * imu_R_cam_xyzw(0, 0) +
                         _tmp466 * imu_R_cam_xyzw(2, 0) + _tmp467 * imu_R_cam_xyzw(3, 0);
    _D_imu_R_cam(0, 1) = -_tmp405 * imu_R_cam_xyzw(1, 0) + _tmp430 * imu_R_cam_xyzw(3, 0) +
                         _tmp448 * imu_R_cam_xyzw(0, 0) - _tmp463 * imu_R_cam_xyzw(2, 0);
    _D_imu_R_cam(1, 1) = _tmp464 * imu_R_cam_xyzw(0, 0) - _tmp465 * imu_R_cam_xyzw(1, 0) +
                         _tmp466 * imu_R_cam_xyzw(3, 0) - _tmp467 * imu_R_cam_xyzw(2, 0);
    _D_imu_R_cam(0, 2) = -_tmp405 * imu_R_cam_xyzw(2, 0) - _tmp430 * imu_R_cam_xyzw(0, 0) +
                         _tmp448 * imu_R_cam_xyzw(3, 0) + _tmp463 * imu_R_cam_xyzw(1, 0);
    _D_imu_R_cam(1, 2) = _tmp464 * imu_R_cam_xyzw(3, 0) - _tmp465 * imu_R_cam_xyzw(2, 0) -
                         _tmp466 * imu_R_cam_xyzw(0, 0) + _tmp467 * imu_R_cam_xyzw(1, 0);
  }

  if (D_imu_t_cam != nullptr) {
    Eigen::Matrix<Scalar, 2, 3>& _D_imu_t_cam = (*D_imu_t_cam);

    _D_imu_t_cam(0, 0) =
        camera(0, 0) * (_tmp185 * _tmp474 - _tmp188 * _tmp473 + _tmp195 * _tmp479 -
                        _tmp196 * _tmp473 + _tmp474 * _tmp92 + _tmp476 * _tmp95 +
                        camera(8, 0) * (_tmp176 * _tmp474 - _tmp247 * _tmp473 + _tmp477));
    _D_imu_t_cam(1, 0) =
        camera(1, 0) * (_tmp300 * _tmp474 + _tmp301 * _tmp479 - _tmp303 * _tmp473 -
                        _tmp306 * _tmp473 + _tmp476 * _tmp92 + _tmp476 * _tmp96 +
                        _tmp93 * (-_tmp304 * _tmp473 + _tmp305 * _tmp476 + _tmp475));
    _D_imu_t_cam(0, 1) =
        camera(0, 0) * (_tmp185 * _tmp485 - _tmp188 * _tmp486 + _tmp195 * _tmp491 -
                        _tmp196 * _tmp486 + _tmp485 * _tmp92 + _tmp487 * _tmp95 +
                        camera(8, 0) * (_tmp176 * _tmp485 - _tmp247 * _tmp486 + _tmp488));
    _D_imu_t_cam(1, 1) =
        camera(1, 0) * (_tmp300 * _tmp485 + _tmp301 * _tmp491 - _tmp303 * _tmp486 -
                        _tmp306 * _tmp486 + _tmp487 * _tmp92 + _tmp487 * _tmp96 +
                        _tmp93 * (-_tmp304 * _tmp486 + _tmp305 * _tmp487 + _tmp489));
    _D_imu_t_cam(0, 2) =
        camera(0, 0) * (_tmp185 * _tmp496 - _tmp188 * _tmp495 + _tmp195 * _tmp501 -
                        _tmp196 * _tmp495 + _tmp496 * _tmp92 + _tmp497 * _tmp95 +
                        camera(8, 0) * (_tmp176 * _tmp496 - _tmp247 * _tmp495 + _tmp498));
    _D_imu_t_cam(1, 2) =
        camera(1, 0) * (_tmp300 * _tmp496 + _tmp301 * _tmp501 - _tmp303 * _tmp495 -
                        _tmp306 * _tmp495 + _tmp497 * _tmp92 + _tmp497 * _tmp96 +
                        _tmp93 * (-_tmp304 * _tmp495 + _tmp305 * _tmp497 + _tmp499));
  }

  if (D_angular_velocity_imu != nullptr) {
    Eigen::Matrix<Scalar, 2, 3>& _D_angular_velocity_imu = (*D_angular_velocity_imu);

    _D_angular_velocity_imu(0, 0) =
        camera(0, 0) * (_tmp185 * _tmp575 - _tmp188 * _tmp573 + _tmp195 * _tmp578 -
                        _tmp196 * _tmp573 + _tmp568 * _tmp95 + _tmp575 * _tmp92 +
                        camera(8, 0) * (_tmp176 * _tmp575 - _tmp247 * _tmp573 + _tmp574));
    _D_angular_velocity_imu(1, 0) =
        camera(1, 0) * (_tmp300 * _tmp575 + _tmp301 * _tmp578 - _tmp303 * _tmp573 -
                        _tmp306 * _tmp573 + _tmp568 * _tmp92 + _tmp568 * _tmp96 +
                        _tmp93 * (-_tmp304 * _tmp573 + _tmp305 * _tmp568 + _tmp576));
    _D_angular_velocity_imu(0, 1) =
        camera(0, 0) * (_tmp185 * _tmp623 - _tmp188 * _tmp629 + _tmp195 * _tmp633 -
                        _tmp196 * _tmp629 + _tmp623 * _tmp92 + _tmp628 * _tmp95 +
                        camera(8, 0) * (_tmp176 * _tmp623 - _tmp247 * _tmp629 + _tmp630));
    _D_angular_velocity_imu(1, 1) =
        camera(1, 0) * (_tmp300 * _tmp623 + _tmp301 * _tmp633 - _tmp303 * _tmp629 -
                        _tmp306 * _tmp629 + _tmp628 * _tmp92 + _tmp628 * _tmp96 +
                        _tmp93 * (-_tmp304 * _tmp629 + _tmp305 * _tmp628 + _tmp631));
    _D_angular_velocity_imu(0, 2) =
        camera(0, 0) * (_tmp185 * _tmp669 - _tmp188 * _tmp674 + _tmp195 * _tmp679 -
                        _tmp196 * _tmp674 + _tmp669 * _tmp92 + _tmp675 * _tmp95 +
                        camera(8, 0) * (_tmp176 * _tmp669 - _tmp247 * _tmp674 + _tmp676));
    _D_angular_velocity_imu(1, 2) =
        camera(1, 0) * (_tmp300 * _tmp669 + _tmp301 * _tmp679 - _tmp303 * _tmp674 -
                        _tmp306 * _tmp674 + _tmp675 * _tmp92 + _tmp675 * _tmp96 +
                        _tmp93 * (-_tmp304 * _tmp674 + _tmp305 * _tmp675 + _tmp677));
  }

  if (D_world_v_imu != nullptr) {
    Eigen::Matrix<Scalar, 2, 3>& _D_world_v_imu = (*D_world_v_imu);

    _D_world_v_imu(0, 0) =
        camera(0, 0) * (_tmp195 * _tmp683 + _tmp312 * row_time - _tmp313 * row_time -
                        _tmp314 * row_time - _tmp315 * row_time + _tmp324 * row_time +
                        camera(8, 0) * (_tmp325 * row_time - _tmp326 * row_time + _tmp680));
    _D_world_v_imu(1, 0) =
        camera(1, 0) * (_tmp301 * _tmp683 + _tmp327 * row_time + _tmp328 * row_time -
                        _tmp329 * row_time - _tmp330 * row_time - _tmp331 * row_time +
                        _tmp93 * (_tmp332 * row_time - _tmp333 * row_time + _tmp681));
    _D_world_v_imu(0, 1) =
        camera(0, 0) * (_tmp195 * _tmp687 + _tmp334 * row_time + _tmp340 * row_time -
                        _tmp341 * row_time - _tmp347 * row_time - _tmp348 * row_time +
                        camera(8, 0) * (-_tmp335 * row_time + _tmp336 * row_time + _tmp684));
    _D_world_v_imu(1, 1) =
        camera(1, 0) * (_tmp301 * _tmp687 + _tmp351 * row_time - _tmp352 * row_time -
                        _tmp353 * row_time + _tmp354 * row_time - _tmp355 * row_time +
                        _tmp93 * (-_tmp349 * row_time + _tmp350 * row_time + _tmp685));
    _D_world_v_imu(0, 2) =
        camera(0, 0) * (_tmp195 * _tmp691 - _tmp356 * row_time - _tmp357 * row_time +
                        _tmp363 * row_time + _tmp364 * row_time - _tmp370 * row_time +
                        camera(8, 0) * (-_tmp358 * row_time + _tmp359 * row_time + _tmp688));
    _D_world_v_imu(1, 2) =
        camera(1, 0) * (_tmp301 * _tmp691 - _tmp371 * row_time + _tmp374 * row_time -
                        _tmp375 * row_time + _tmp376 * row_time - _tmp377 * row_time +
                        _tmp93 * (-_tmp372 * row_time + _tmp373 * row_time + _tmp689));
  }

  if (D_p_world != nullptr) {
    Eigen::Matrix<Scalar, 2, 3>& _D_p_world = (*D_p_world);

    _D_p_world(0, 0) = camera(0, 0) * (_tmp195 * _tmp695 - _tmp312 + _tmp313 + _tmp314 + _tmp315 -
                                       _tmp324 + camera(8, 0) * (-_tmp325 + _tmp326 + _tmp692));
    _D_p_world(1, 0) = camera(1, 0) * (_tmp301 * _tmp695 - _tmp327 - _tmp328 + _tmp329 + _tmp330 +
                                       _tmp331 + _tmp93 * (-_tmp332 + _tmp333 + _tmp693));
    _D_p_world(0, 1) = camera(0, 0) * (_tmp195 * _tmp699 - _tmp334 - _tmp340 + _tmp341 + _tmp347 +
                                       _tmp348 + camera(8, 0) * (_tmp335 - _tmp336 + _tmp696));
    _D_p_world(1, 1) = camera(1, 0) * (_tmp301 * _tmp699 - _tmp351 + _tmp352 + _tmp353 - _tmp354 +
                                       _tmp355 + _tmp93 * (_tmp349 - _tmp350 + _tmp697));
    _D_p_world(0, 2) = camera(0, 0) * (_tmp195 * _tmp703 + _tmp356 + _tmp357 - _tmp363 - _tmp364 +
                                       _tmp370 + camera(8, 0) * (_tmp358 - _tmp359 + _tmp700));
    _D_p_world(1, 2) = camera(1, 0) * (_tmp301 * _tmp703 + _tmp371 - _tmp374 + _tmp375 - _tmp376 +
                                       _tmp377 + _tmp93 * (_tmp372 - _tmp373 + _tmp701));
  }
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
