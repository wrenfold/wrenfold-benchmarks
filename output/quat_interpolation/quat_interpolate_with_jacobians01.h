// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

#include <sym/rot3.h>

namespace sym {

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: quat_interpolate
 *
 * Args:
 *     q0: Rot3
 *     q1: Rot3
 *     alpha: Scalar
 *
 * Outputs:
 *     res: Rot3
 *     res_D_q0: (3x3) jacobian of res (3) wrt arg q0 (3)
 *     res_D_q1: (3x3) jacobian of res (3) wrt arg q1 (3)
 */
template <typename Scalar>
sym::Rot3<Scalar> QuatInterpolateWithJacobians01(
    const sym::Rot3<Scalar>& q0, const sym::Rot3<Scalar>& q1, const Scalar alpha,
    Eigen::Matrix<Scalar, 3, 3>* const res_D_q0 = nullptr,
    Eigen::Matrix<Scalar, 3, 3>* const res_D_q1 = nullptr) {
  // Total ops: 1322

  // Input arrays
  const Eigen::Matrix<Scalar, 4, 1>& _q0 = q0.Data();
  const Eigen::Matrix<Scalar, 4, 1>& _q1 = q1.Data();

  // Intermediate terms (305)
  const Scalar _tmp0 = _q0[1] * _q1[3];
  const Scalar _tmp1 = _q0[0] * _q1[2];
  const Scalar _tmp2 = _q0[2] * _q1[0];
  const Scalar _tmp3 = _q0[3] * _q1[1];
  const Scalar _tmp4 = -_tmp0 + _tmp1 - _tmp2 + _tmp3;
  const Scalar _tmp5 = _q0[2] * _q1[2];
  const Scalar _tmp6 = _q0[0] * _q1[0];
  const Scalar _tmp7 = _q0[1] * _q1[1];
  const Scalar _tmp8 = -_tmp5 - _tmp6 - _tmp7;
  const Scalar _tmp9 = _q0[3] * _q1[3];
  const Scalar _tmp10 =
      2 * std::min<Scalar>(0, (((-_tmp8 + _tmp9) > 0) - ((-_tmp8 + _tmp9) < 0))) + 1;
  const Scalar _tmp11 = _tmp10 * alpha;
  const Scalar _tmp12 = _tmp11 * _tmp4;
  const Scalar _tmp13 = _q0[2] * _tmp12;
  const Scalar _tmp14 = _q0[2] * _q1[3];
  const Scalar _tmp15 = _q0[3] * _q1[2];
  const Scalar _tmp16 = _q0[1] * _q1[0];
  const Scalar _tmp17 = _q0[0] * _q1[1];
  const Scalar _tmp18 = -_tmp14 + _tmp15 + _tmp16 - _tmp17;
  const Scalar _tmp19 = std::pow(_tmp10, Scalar(2)) * std::pow(alpha, Scalar(2));
  const Scalar _tmp20 = 4 * _tmp19;
  const Scalar _tmp21 = std::pow(_tmp18, Scalar(2)) * _tmp20;
  const Scalar _tmp22 = std::min<Scalar>(Scalar(1.0), std::fabs(_tmp8 - _tmp9));
  const Scalar _tmp23 = 1 - std::pow(_tmp22, Scalar(2));
  const Scalar _tmp24 = std::acos(_tmp22);
  const Scalar _tmp25 = std::pow(_tmp24, Scalar(2)) / _tmp23;
  const Scalar _tmp26 = _q0[0] * _q1[3];
  const Scalar _tmp27 = _q0[1] * _q1[2];
  const Scalar _tmp28 = _q0[3] * _q1[0];
  const Scalar _tmp29 = _q0[2] * _q1[1];
  const Scalar _tmp30 = -_tmp26 - _tmp27 + _tmp28 + _tmp29;
  const Scalar _tmp31 = _tmp20 * std::pow(_tmp30, Scalar(2));
  const Scalar _tmp32 = _tmp20 * std::pow(_tmp4, Scalar(2));
  const Scalar _tmp33 = std::sqrt(
      Scalar(_tmp21 * _tmp25 + _tmp25 * _tmp31 + _tmp25 * _tmp32 + Scalar(1.0000000000000001e-32)));
  const Scalar _tmp34 = (Scalar(1) / Scalar(2)) * _tmp33;
  const Scalar _tmp35 = 2 * _tmp24 * std::sin(_tmp34) / (std::sqrt(_tmp23) * _tmp33);
  const Scalar _tmp36 = std::cos(_tmp34);
  const Scalar _tmp37 = _tmp11 * _tmp30;
  const Scalar _tmp38 = _q0[3] * _tmp37;
  const Scalar _tmp39 = _tmp11 * _tmp18;
  const Scalar _tmp40 = _q0[1] * _tmp39;
  const Scalar _tmp41 = _q0[2] * _tmp37;
  const Scalar _tmp42 = _q0[3] * _tmp12;
  const Scalar _tmp43 = _q0[0] * _tmp39;
  const Scalar _tmp44 = _q0[1] * _tmp37;
  const Scalar _tmp45 = _q0[3] * _tmp39;
  const Scalar _tmp46 = _q0[0] * _tmp12;
  const Scalar _tmp47 = _q0[0] * _tmp37;
  const Scalar _tmp48 = _q0[1] * _tmp12;
  const Scalar _tmp49 = _q0[2] * _tmp39;
  const Scalar _tmp50 = _tmp5 + _tmp6 + _tmp7 + _tmp9;
  const Scalar _tmp51 = std::fabs(_tmp50);
  const Scalar _tmp52 = std::min<Scalar>(Scalar(1.0), _tmp51);
  const Scalar _tmp53 = 1 - std::pow(_tmp52, Scalar(2));
  const Scalar _tmp54 = Scalar(1.0) / (_tmp53);
  const Scalar _tmp55 = std::acos(_tmp52);
  const Scalar _tmp56 = std::pow(_tmp55, Scalar(2));
  const Scalar _tmp57 = _tmp54 * _tmp56;
  const Scalar _tmp58 =
      _tmp21 * _tmp57 + _tmp31 * _tmp57 + _tmp32 * _tmp57 + Scalar(1.0000000000000001e-32);
  const Scalar _tmp59 = std::sqrt(_tmp58);
  const Scalar _tmp60 = (Scalar(1) / Scalar(2)) * _tmp59;
  const Scalar _tmp61 = std::sin(_tmp60);
  const Scalar _tmp62 = _tmp61 / _tmp59;
  const Scalar _tmp63 = _tmp55 / std::sqrt(_tmp53);
  const Scalar _tmp64 = _tmp62 * _tmp63;
  const Scalar _tmp65 = _tmp12 * _tmp64;
  const Scalar _tmp66 = _q0[2] * _tmp65;
  const Scalar _tmp67 = -_tmp66;
  const Scalar _tmp68 = _tmp52 * _tmp56 / std::pow(_tmp53, Scalar(2));
  const Scalar _tmp69 = _tmp21 * _tmp68;
  const Scalar _tmp70 = (Scalar(1) / Scalar(2)) * _tmp26;
  const Scalar _tmp71 = (Scalar(1) / Scalar(2)) * _tmp27;
  const Scalar _tmp72 = (Scalar(1) / Scalar(2)) * _tmp28;
  const Scalar _tmp73 = (Scalar(1) / Scalar(2)) * _tmp29;
  const Scalar _tmp74 = -_tmp70 - _tmp71 + _tmp72 + _tmp73;
  const Scalar _tmp75 = ((((Scalar(1.0) - _tmp51) > 0) - ((Scalar(1.0) - _tmp51) < 0)) + 1) *
                        (((_tmp50) > 0) - ((_tmp50) < 0));
  const Scalar _tmp76 = _tmp74 * _tmp75;
  const Scalar _tmp77 = _tmp55 / (_tmp53 * std::sqrt(_tmp53));
  const Scalar _tmp78 = _tmp75 * _tmp77;
  const Scalar _tmp79 = _tmp32 * _tmp78;
  const Scalar _tmp80 = _tmp31 * _tmp78;
  const Scalar _tmp81 = (Scalar(1) / Scalar(2)) * _tmp9;
  const Scalar _tmp82 = (Scalar(1) / Scalar(2)) * _tmp5;
  const Scalar _tmp83 = (Scalar(1) / Scalar(2)) * _tmp6;
  const Scalar _tmp84 = (Scalar(1) / Scalar(2)) * _tmp7;
  const Scalar _tmp85 = -_tmp81 - _tmp82 - _tmp83 - _tmp84;
  const Scalar _tmp86 = 8 * _tmp19 * _tmp57;
  const Scalar _tmp87 = _tmp30 * _tmp86;
  const Scalar _tmp88 = _tmp31 * _tmp68;
  const Scalar _tmp89 = _tmp21 * _tmp78;
  const Scalar _tmp90 = _tmp32 * _tmp68;
  const Scalar _tmp91 = (Scalar(1) / Scalar(2)) * _tmp0;
  const Scalar _tmp92 = (Scalar(1) / Scalar(2)) * _tmp1;
  const Scalar _tmp93 = (Scalar(1) / Scalar(2)) * _tmp2;
  const Scalar _tmp94 = (Scalar(1) / Scalar(2)) * _tmp3;
  const Scalar _tmp95 = _tmp91 - _tmp92 + _tmp93 - _tmp94;
  const Scalar _tmp96 = _tmp18 * _tmp86;
  const Scalar _tmp97 = (Scalar(1) / Scalar(2)) * _tmp14;
  const Scalar _tmp98 = (Scalar(1) / Scalar(2)) * _tmp15;
  const Scalar _tmp99 = (Scalar(1) / Scalar(2)) * _tmp16;
  const Scalar _tmp100 = (Scalar(1) / Scalar(2)) * _tmp17;
  const Scalar _tmp101 = -_tmp100 - _tmp97 + _tmp98 + _tmp99;
  const Scalar _tmp102 = _tmp4 * _tmp86;
  const Scalar _tmp103 = _tmp101 * _tmp102 + _tmp95 * _tmp96;
  const Scalar _tmp104 = _tmp103 + _tmp69 * _tmp76 - _tmp74 * _tmp79 - _tmp74 * _tmp80 -
                         _tmp74 * _tmp89 + _tmp76 * _tmp88 + _tmp76 * _tmp90 + _tmp85 * _tmp87;
  const Scalar _tmp105 = Scalar(1.0) / (_tmp58);
  const Scalar _tmp106 = _tmp105 * _tmp63;
  const Scalar _tmp107 = std::cos(_tmp60);
  const Scalar _tmp108 = _q0[0] * _tmp107;
  const Scalar _tmp109 = (Scalar(1) / Scalar(2)) * _tmp108;
  const Scalar _tmp110 = _tmp109 * _tmp37;
  const Scalar _tmp111 = _tmp106 * _tmp110;
  const Scalar _tmp112 = _tmp49 * _tmp74;
  const Scalar _tmp113 = _tmp52 * _tmp62;
  const Scalar _tmp114 = _tmp113 * _tmp78;
  const Scalar _tmp115 = _tmp61 / (_tmp58 * std::sqrt(_tmp58));
  const Scalar _tmp116 = _tmp115 * _tmp63;
  const Scalar _tmp117 = _tmp104 * _tmp116;
  const Scalar _tmp118 = _tmp114 * _tmp74;
  const Scalar _tmp119 = _q0[1] * _tmp74;
  const Scalar _tmp120 = _tmp54 * _tmp62;
  const Scalar _tmp121 = _tmp120 * _tmp75;
  const Scalar _tmp122 = _tmp119 * _tmp121;
  const Scalar _tmp123 = _tmp11 * _tmp64;
  const Scalar _tmp124 = _tmp123 * _tmp18;
  const Scalar _tmp125 = _q0[1] * _tmp124;
  const Scalar _tmp126 = _tmp121 * _tmp74;
  const Scalar _tmp127 = _tmp123 * _tmp30;
  const Scalar _tmp128 = _q0[3] * _tmp127;
  const Scalar _tmp129 = -_tmp128;
  const Scalar _tmp130 = _q0[2] * _tmp107;
  const Scalar _tmp131 = (Scalar(1) / Scalar(2)) * _tmp130;
  const Scalar _tmp132 = _tmp106 * _tmp39;
  const Scalar _tmp133 = _tmp131 * _tmp132;
  const Scalar _tmp134 = (Scalar(1) / Scalar(4)) * _tmp62;
  const Scalar _tmp135 = _tmp104 * _tmp134;
  const Scalar _tmp136 = _tmp114 * _tmp119;
  const Scalar _tmp137 = _q0[1] * _tmp107;
  const Scalar _tmp138 = (Scalar(1) / Scalar(2)) * _tmp137;
  const Scalar _tmp139 = _tmp106 * _tmp12;
  const Scalar _tmp140 = _tmp104 * _tmp139;
  const Scalar _tmp141 = 2 * _tmp123;
  const Scalar _tmp142 = _q0[2] * _tmp141;
  const Scalar _tmp143 = _q0[1] * _tmp141;
  const Scalar _tmp144 = -_tmp101 * _tmp143 - _tmp142 * _tmp95;
  const Scalar _tmp145 = _q0[0] * _tmp141;
  const Scalar _tmp146 = _tmp145 * _tmp85;
  const Scalar _tmp147 = -_tmp109 - _tmp146;
  const Scalar _tmp148 = -_q0[3] * _tmp135 - _tmp104 * _tmp111 - _tmp104 * _tmp133 -
                         _tmp112 * _tmp114 + _tmp112 * _tmp121 + _tmp117 * _tmp47 +
                         _tmp117 * _tmp48 + _tmp117 * _tmp49 - _tmp118 * _tmp47 + _tmp12 * _tmp122 -
                         _tmp12 * _tmp136 + _tmp125 + _tmp126 * _tmp47 + _tmp129 -
                         _tmp138 * _tmp140 + _tmp144 + _tmp147 + _tmp67;
  const Scalar _tmp149 = _tmp108 + 2 * _tmp125 + 2 * _tmp128 - 2 * _tmp66;
  const Scalar _tmp150 = 2 * _tmp149;
  const Scalar _tmp151 = _q0[3] * _tmp141;
  const Scalar _tmp152 = _tmp151 * _tmp85;
  const Scalar _tmp153 = _q0[1] * _tmp65;
  const Scalar _tmp154 = _q0[3] * _tmp107;
  const Scalar _tmp155 = (Scalar(1) / Scalar(2)) * _tmp154;
  const Scalar _tmp156 = _q0[2] * _tmp124;
  const Scalar _tmp157 = _tmp131 * _tmp139;
  const Scalar _tmp158 = _q0[0] * _tmp127;
  const Scalar _tmp159 = _tmp120 * _tmp38;
  const Scalar _tmp160 = _tmp104 * _tmp138;
  const Scalar _tmp161 = _tmp155 * _tmp37;
  const Scalar _tmp162 = _tmp106 * _tmp161;
  const Scalar _tmp163 = -_tmp101 * _tmp142 + _tmp143 * _tmp95;
  const Scalar _tmp164 = -_q0[0] * _tmp135 - _tmp104 * _tmp157 + _tmp104 * _tmp162 +
                         _tmp117 * _tmp13 - _tmp117 * _tmp38 - _tmp117 * _tmp40 - _tmp118 * _tmp13 +
                         _tmp118 * _tmp38 - _tmp122 * _tmp39 + _tmp126 * _tmp13 +
                         _tmp132 * _tmp160 + _tmp136 * _tmp39 + _tmp152 + _tmp153 + _tmp155 +
                         _tmp156 - _tmp158 - _tmp159 * _tmp76 + _tmp163;
  const Scalar _tmp165 = -4 * _tmp153 + 2 * _tmp154 - 4 * _tmp156 - 4 * _tmp158;
  const Scalar _tmp166 = _q0[3] * _tmp124;
  const Scalar _tmp167 = -_tmp166;
  const Scalar _tmp168 = _tmp114 * _tmp43;
  const Scalar _tmp169 = _tmp142 * _tmp85;
  const Scalar _tmp170 = _tmp106 * _tmp37;
  const Scalar _tmp171 = _tmp131 * _tmp170;
  const Scalar _tmp172 = _tmp109 * _tmp132;
  const Scalar _tmp173 = _tmp101 * _tmp151 - _tmp145 * _tmp95;
  const Scalar _tmp174 = _q0[1] * _tmp127;
  const Scalar _tmp175 = -_tmp174;
  const Scalar _tmp176 = _q0[0] * _tmp65;
  const Scalar _tmp177 = _tmp175 - _tmp176;
  const Scalar _tmp178 = -_q0[1] * _tmp135 + _tmp104 * _tmp171 - _tmp104 * _tmp172 -
                         _tmp117 * _tmp41 - _tmp117 * _tmp42 + _tmp117 * _tmp43 + _tmp118 * _tmp41 +
                         _tmp118 * _tmp42 - _tmp126 * _tmp41 - _tmp126 * _tmp42 + _tmp126 * _tmp43 +
                         _tmp131 + _tmp140 * _tmp155 + _tmp167 - _tmp168 * _tmp74 + _tmp169 +
                         _tmp173 + _tmp177;
  const Scalar _tmp179 = 2 * _tmp130 + 4 * _tmp166 - 4 * _tmp174 + 4 * _tmp176;
  const Scalar _tmp180 = _tmp42 * _tmp64;
  const Scalar _tmp181 = _tmp132 * _tmp155;
  const Scalar _tmp182 = _q0[2] * _tmp134;
  const Scalar _tmp183 = _tmp101 * _tmp145 + _tmp151 * _tmp95;
  const Scalar _tmp184 = _q0[0] * _tmp124;
  const Scalar _tmp185 = -_tmp184;
  const Scalar _tmp186 = _q0[2] * _tmp127;
  const Scalar _tmp187 = _tmp185 - _tmp186;
  const Scalar _tmp188 = _tmp143 * _tmp85;
  const Scalar _tmp189 = -_tmp138 - _tmp188;
  const Scalar _tmp190 = _tmp104 * _tmp181 - _tmp104 * _tmp182 + _tmp109 * _tmp140 +
                         _tmp117 * _tmp44 - _tmp117 * _tmp45 - _tmp117 * _tmp46 + _tmp118 * _tmp45 +
                         _tmp118 * _tmp46 + _tmp122 * _tmp37 - _tmp126 * _tmp45 - _tmp126 * _tmp46 -
                         _tmp136 * _tmp37 - _tmp160 * _tmp170 + _tmp180 + _tmp183 + _tmp187 +
                         _tmp189;
  const Scalar _tmp191 = _tmp137 + 2 * _tmp180 - 2 * _tmp184 + 2 * _tmp186;
  const Scalar _tmp192 = 2 * _tmp191;
  const Scalar _tmp193 = -_tmp91 + _tmp92 - _tmp93 + _tmp94;
  const Scalar _tmp194 = _tmp193 * _tmp78;
  const Scalar _tmp195 = _tmp193 * _tmp75;
  const Scalar _tmp196 = _tmp100 + _tmp97 - _tmp98 - _tmp99;
  const Scalar _tmp197 = _tmp196 * _tmp87 + _tmp74 * _tmp96;
  const Scalar _tmp198 = _tmp102 * _tmp85 - _tmp193 * _tmp79 - _tmp194 * _tmp21 - _tmp194 * _tmp31 +
                         _tmp195 * _tmp69 + _tmp195 * _tmp88 + _tmp195 * _tmp90 + _tmp197;
  const Scalar _tmp199 = _tmp116 * _tmp198;
  const Scalar _tmp200 = _tmp121 * _tmp193;
  const Scalar _tmp201 = _tmp134 * _tmp198;
  const Scalar _tmp202 = _tmp113 * _tmp194;
  const Scalar _tmp203 = _tmp139 * _tmp198;
  const Scalar _tmp204 = _tmp106 * _tmp198;
  const Scalar _tmp205 = _tmp204 * _tmp39;
  const Scalar _tmp206 = _tmp119 * _tmp141 + _tmp151 * _tmp196;
  const Scalar _tmp207 = -_tmp131 - _tmp169;
  const Scalar _tmp208 = -_q0[0] * _tmp201 + _tmp13 * _tmp199 + _tmp13 * _tmp200 -
                         _tmp13 * _tmp202 - _tmp131 * _tmp203 + _tmp138 * _tmp205 -
                         _tmp159 * _tmp195 + _tmp161 * _tmp204 + _tmp166 + _tmp177 -
                         _tmp199 * _tmp38 - _tmp199 * _tmp40 - _tmp200 * _tmp40 + _tmp202 * _tmp38 +
                         _tmp202 * _tmp40 + _tmp206 + _tmp207;
  const Scalar _tmp209 = _tmp116 * _tmp37;
  const Scalar _tmp210 = _q0[2] * _tmp209;
  const Scalar _tmp211 = _tmp131 * _tmp37;
  const Scalar _tmp212 = _tmp109 * _tmp39;
  const Scalar _tmp213 = _tmp142 * _tmp196 - _tmp145 * _tmp74;
  const Scalar _tmp214 = _tmp152 + _tmp155 + _tmp158;
  const Scalar _tmp215 = -_q0[1] * _tmp201 - _tmp153 + _tmp155 * _tmp203 + _tmp156 -
                         _tmp198 * _tmp210 - _tmp199 * _tmp42 + _tmp199 * _tmp43 -
                         _tmp200 * _tmp41 - _tmp200 * _tmp42 + _tmp200 * _tmp43 + _tmp202 * _tmp41 +
                         _tmp202 * _tmp42 - _tmp202 * _tmp43 + _tmp204 * _tmp211 -
                         _tmp204 * _tmp212 + _tmp213 + _tmp214;
  const Scalar _tmp216 = -_tmp180;
  const Scalar _tmp217 = -_tmp142 * _tmp74 - _tmp145 * _tmp196;
  const Scalar _tmp218 = _q0[0] * _tmp198 * _tmp209 - _q0[3] * _tmp201 - _tmp110 * _tmp204 -
                         _tmp131 * _tmp205 - _tmp138 * _tmp203 + _tmp185 + _tmp186 + _tmp189 +
                         _tmp199 * _tmp48 + _tmp199 * _tmp49 + _tmp200 * _tmp47 + _tmp200 * _tmp48 +
                         _tmp200 * _tmp49 - _tmp202 * _tmp47 - _tmp202 * _tmp48 - _tmp202 * _tmp49 +
                         _tmp216 + _tmp217;
  const Scalar _tmp219 = _tmp138 * _tmp37;
  const Scalar _tmp220 = -_tmp143 * _tmp196 + _tmp151 * _tmp74;
  const Scalar _tmp221 = -_tmp125 + _tmp67;
  const Scalar _tmp222 = _tmp109 * _tmp203 + _tmp109 + _tmp129 + _tmp146 + _tmp155 * _tmp205 -
                         _tmp182 * _tmp198 + _tmp199 * _tmp44 - _tmp199 * _tmp45 -
                         _tmp199 * _tmp46 + _tmp200 * _tmp44 - _tmp200 * _tmp45 - _tmp200 * _tmp46 -
                         _tmp202 * _tmp44 + _tmp202 * _tmp45 + _tmp202 * _tmp46 -
                         _tmp204 * _tmp219 + _tmp220 + _tmp221;
  const Scalar _tmp223 = _tmp101 * _tmp75;
  const Scalar _tmp224 = _tmp223 * _tmp77;
  const Scalar _tmp225 = _tmp113 * _tmp224;
  const Scalar _tmp226 = _tmp21 * _tmp223;
  const Scalar _tmp227 = _tmp70 + _tmp71 - _tmp72 - _tmp73;
  const Scalar _tmp228 = _tmp227 * _tmp4;
  const Scalar _tmp229 = _tmp193 * _tmp87 + _tmp228 * _tmp86;
  const Scalar _tmp230 = _tmp223 * _tmp88 + _tmp223 * _tmp90 - _tmp224 * _tmp31 - _tmp224 * _tmp32 +
                         _tmp226 * _tmp68 - _tmp226 * _tmp77 + _tmp229 + _tmp85 * _tmp96;
  const Scalar _tmp231 = _tmp139 * _tmp155;
  const Scalar _tmp232 = _tmp120 * _tmp223;
  const Scalar _tmp233 = _tmp134 * _tmp230;
  const Scalar _tmp234 = _tmp116 * _tmp230;
  const Scalar _tmp235 = _tmp131 * _tmp230;
  const Scalar _tmp236 = _tmp142 * _tmp193 + _tmp151 * _tmp227;
  const Scalar _tmp237 = -_q0[1] * _tmp233 + _tmp128 + _tmp147 + _tmp170 * _tmp235 -
                         _tmp172 * _tmp230 - _tmp210 * _tmp230 + _tmp221 + _tmp225 * _tmp41 +
                         _tmp225 * _tmp42 - _tmp225 * _tmp43 + _tmp230 * _tmp231 -
                         _tmp232 * _tmp41 - _tmp232 * _tmp42 + _tmp232 * _tmp43 - _tmp234 * _tmp42 +
                         _tmp234 * _tmp43 + _tmp236;
  const Scalar _tmp238 = _tmp132 * _tmp138;
  const Scalar _tmp239 = -_tmp142 * _tmp227 + _tmp151 * _tmp193;
  const Scalar _tmp240 = -_q0[0] * _tmp233 - _tmp13 * _tmp225 + _tmp13 * _tmp232 +
                         _tmp13 * _tmp234 + _tmp138 - _tmp157 * _tmp230 - _tmp159 * _tmp223 +
                         _tmp162 * _tmp230 + _tmp187 + _tmp188 + _tmp216 + _tmp225 * _tmp38 +
                         _tmp225 * _tmp40 + _tmp230 * _tmp238 - _tmp232 * _tmp40 -
                         _tmp234 * _tmp38 - _tmp234 * _tmp40 + _tmp239;
  const Scalar _tmp241 = _tmp109 * _tmp139;
  const Scalar _tmp242 = _q0[0] * _tmp230;
  const Scalar _tmp243 = _tmp116 * _tmp12;
  const Scalar _tmp244 = _tmp138 * _tmp170;
  const Scalar _tmp245 = -_tmp143 * _tmp193 + _tmp145 * _tmp227;
  const Scalar _tmp246 = _tmp153 - _tmp156 + _tmp181 * _tmp230 - _tmp182 * _tmp230 + _tmp214 -
                         _tmp225 * _tmp44 + _tmp225 * _tmp45 + _tmp225 * _tmp46 +
                         _tmp230 * _tmp241 - _tmp230 * _tmp244 + _tmp232 * _tmp44 -
                         _tmp232 * _tmp45 - _tmp232 * _tmp46 + _tmp234 * _tmp44 - _tmp234 * _tmp45 -
                         _tmp242 * _tmp243 + _tmp245;
  const Scalar _tmp247 = _tmp138 * _tmp139;
  const Scalar _tmp248 = -_tmp143 * _tmp227 - _tmp145 * _tmp193;
  const Scalar _tmp249 = -_q0[3] * _tmp233 - _tmp111 * _tmp230 - _tmp132 * _tmp235 + _tmp167 +
                         _tmp175 + _tmp176 + _tmp207 + _tmp209 * _tmp242 - _tmp225 * _tmp47 -
                         _tmp225 * _tmp48 - _tmp225 * _tmp49 - _tmp230 * _tmp247 +
                         _tmp232 * _tmp47 + _tmp232 * _tmp48 + _tmp232 * _tmp49 + _tmp234 * _tmp48 +
                         _tmp234 * _tmp49 + _tmp248;
  const Scalar _tmp250 = _tmp114 * _tmp227;
  const Scalar _tmp251 = _tmp121 * _tmp227;
  const Scalar _tmp252 = _tmp227 * _tmp75;
  const Scalar _tmp253 = _tmp81 + _tmp82 + _tmp83 + _tmp84;
  const Scalar _tmp254 = _tmp103 - _tmp227 * _tmp79 - _tmp227 * _tmp80 - _tmp227 * _tmp89 +
                         _tmp252 * _tmp69 + _tmp252 * _tmp88 + _tmp252 * _tmp90 + _tmp253 * _tmp87;
  const Scalar _tmp255 = _tmp11 * _tmp228;
  const Scalar _tmp256 = _tmp121 * _tmp255;
  const Scalar _tmp257 = _tmp143 * _tmp253;
  const Scalar _tmp258 = -_tmp257;
  const Scalar _tmp259 = _tmp114 * _tmp255;
  const Scalar _tmp260 = _tmp116 * _tmp254;
  const Scalar _tmp261 = _tmp134 * _tmp254;
  const Scalar _tmp262 = _q0[1] * _tmp254;
  const Scalar _tmp263 = -_q0[0] * _tmp256 + _q0[0] * _tmp259 - _q0[2] * _tmp261 +
                         _tmp181 * _tmp254 + _tmp183 + _tmp209 * _tmp262 + _tmp241 * _tmp254 -
                         _tmp244 * _tmp254 - _tmp250 * _tmp44 + _tmp250 * _tmp45 +
                         _tmp251 * _tmp44 - _tmp251 * _tmp45 + _tmp258 - _tmp260 * _tmp45 -
                         _tmp260 * _tmp46;
  const Scalar _tmp264 = 2 * _tmp263;
  const Scalar _tmp265 = _tmp145 * _tmp253;
  const Scalar _tmp266 = -_tmp265;
  const Scalar _tmp267 = _q0[1] * _tmp256 - _q0[1] * _tmp259 - _q0[3] * _tmp261 -
                         _tmp111 * _tmp254 - _tmp133 * _tmp254 + _tmp144 + _tmp243 * _tmp262 -
                         _tmp247 * _tmp254 - _tmp250 * _tmp47 - _tmp250 * _tmp49 +
                         _tmp251 * _tmp47 + _tmp251 * _tmp49 + _tmp260 * _tmp47 + _tmp260 * _tmp49 +
                         _tmp266;
  const Scalar _tmp268 = _tmp151 * _tmp253;
  const Scalar _tmp269 = -_q0[0] * _tmp261 + _q0[2] * _tmp256 - _q0[2] * _tmp259 -
                         _tmp116 * _tmp262 * _tmp39 + _tmp13 * _tmp260 - _tmp157 * _tmp254 -
                         _tmp159 * _tmp252 + _tmp162 * _tmp254 + _tmp163 + _tmp238 * _tmp254 +
                         _tmp250 * _tmp38 + _tmp250 * _tmp40 - _tmp251 * _tmp40 - _tmp260 * _tmp38 +
                         _tmp268;
  const Scalar _tmp270 = _tmp142 * _tmp253;
  const Scalar _tmp271 = -_q0[3] * _tmp256 + _q0[3] * _tmp259 - _tmp134 * _tmp262 -
                         _tmp168 * _tmp227 + _tmp171 * _tmp254 - _tmp172 * _tmp254 + _tmp173 +
                         _tmp231 * _tmp254 + _tmp250 * _tmp41 - _tmp251 * _tmp41 +
                         _tmp251 * _tmp43 - _tmp260 * _tmp41 - _tmp260 * _tmp42 + _tmp260 * _tmp43 +
                         _tmp270;
  const Scalar _tmp272 = _tmp114 * _tmp95;
  const Scalar _tmp273 = _tmp75 * _tmp95;
  const Scalar _tmp274 = _tmp102 * _tmp253 + _tmp197 + _tmp273 * _tmp69 + _tmp273 * _tmp88 +
                         _tmp273 * _tmp90 - _tmp79 * _tmp95 - _tmp80 * _tmp95 - _tmp89 * _tmp95;
  const Scalar _tmp275 = _tmp106 * _tmp274;
  const Scalar _tmp276 = _tmp134 * _tmp274;
  const Scalar _tmp277 = _tmp275 * _tmp39;
  const Scalar _tmp278 = _tmp121 * _tmp95;
  const Scalar _tmp279 = _tmp116 * _tmp274;
  const Scalar _tmp280 = _tmp12 * _tmp275;
  const Scalar _tmp281 = -_q0[1] * _tmp276 - _tmp109 * _tmp277 + _tmp155 * _tmp280 -
                         _tmp168 * _tmp95 - _tmp210 * _tmp274 + _tmp211 * _tmp275 + _tmp213 +
                         _tmp268 + _tmp272 * _tmp41 + _tmp272 * _tmp42 - _tmp278 * _tmp41 -
                         _tmp278 * _tmp42 + _tmp278 * _tmp43 - _tmp279 * _tmp42 + _tmp279 * _tmp43;
  const Scalar _tmp282 = -_tmp270;
  const Scalar _tmp283 = _tmp12 * _tmp131;
  const Scalar _tmp284 = -_q0[0] * _tmp276 - _tmp13 * _tmp272 + _tmp13 * _tmp278 +
                         _tmp13 * _tmp279 + _tmp138 * _tmp277 - _tmp159 * _tmp273 +
                         _tmp161 * _tmp275 + _tmp206 + _tmp272 * _tmp38 + _tmp272 * _tmp40 -
                         _tmp275 * _tmp283 - _tmp278 * _tmp40 - _tmp279 * _tmp38 -
                         _tmp279 * _tmp40 + _tmp282;
  const Scalar _tmp285 = _q0[0] * _tmp274;
  const Scalar _tmp286 = -_q0[3] * _tmp276 - _tmp110 * _tmp275 - _tmp131 * _tmp277 -
                         _tmp138 * _tmp280 + _tmp209 * _tmp285 + _tmp217 + _tmp258 -
                         _tmp272 * _tmp47 - _tmp272 * _tmp48 - _tmp272 * _tmp49 + _tmp278 * _tmp47 +
                         _tmp278 * _tmp48 + _tmp278 * _tmp49 + _tmp279 * _tmp48 + _tmp279 * _tmp49;
  const Scalar _tmp287 = _tmp109 * _tmp280 + _tmp155 * _tmp277 - _tmp182 * _tmp274 -
                         _tmp219 * _tmp275 + _tmp220 - _tmp243 * _tmp285 + _tmp265 -
                         _tmp272 * _tmp44 + _tmp272 * _tmp45 + _tmp272 * _tmp46 + _tmp278 * _tmp44 -
                         _tmp278 * _tmp45 - _tmp278 * _tmp46 + _tmp279 * _tmp44 - _tmp279 * _tmp45;
  const Scalar _tmp288 = _tmp196 * _tmp75;
  const Scalar _tmp289 = -_tmp196 * _tmp79 - _tmp196 * _tmp80 - _tmp196 * _tmp89 + _tmp229 +
                         _tmp253 * _tmp96 + _tmp288 * _tmp69 + _tmp288 * _tmp88 + _tmp288 * _tmp90;
  const Scalar _tmp290 = _tmp289 * _tmp63;
  const Scalar _tmp291 = _tmp105 * _tmp290;
  const Scalar _tmp292 = _tmp138 * _tmp291;
  const Scalar _tmp293 = _tmp114 * _tmp196;
  const Scalar _tmp294 = _tmp120 * _tmp288;
  const Scalar _tmp295 = _tmp115 * _tmp290;
  const Scalar _tmp296 = _tmp295 * _tmp39;
  const Scalar _tmp297 = _tmp131 * _tmp291;
  const Scalar _tmp298 = _tmp134 * _tmp289;
  const Scalar _tmp299 = _tmp295 * _tmp37;
  const Scalar _tmp300 = _q0[0] * _tmp299 + _q0[2] * _tmp296 - _q0[3] * _tmp298 -
                         _tmp110 * _tmp291 - _tmp12 * _tmp292 + _tmp248 + _tmp282 -
                         _tmp293 * _tmp47 - _tmp293 * _tmp48 - _tmp293 * _tmp49 + _tmp294 * _tmp47 +
                         _tmp294 * _tmp48 + _tmp294 * _tmp49 + _tmp295 * _tmp48 - _tmp297 * _tmp39;
  const Scalar _tmp301 = -_q0[0] * _tmp298 - _q0[1] * _tmp296 - _tmp13 * _tmp293 +
                         _tmp13 * _tmp294 + _tmp13 * _tmp295 - _tmp159 * _tmp288 +
                         _tmp161 * _tmp291 + _tmp239 + _tmp257 - _tmp283 * _tmp291 +
                         _tmp292 * _tmp39 + _tmp293 * _tmp38 + _tmp293 * _tmp40 - _tmp294 * _tmp40 -
                         _tmp295 * _tmp38;
  const Scalar _tmp302 = _tmp155 * _tmp291;
  const Scalar _tmp303 = -_q0[3] * _tmp296 + _tmp109 * _tmp12 * _tmp291 - _tmp182 * _tmp289 +
                         _tmp245 + _tmp268 - _tmp292 * _tmp37 - _tmp293 * _tmp44 +
                         _tmp293 * _tmp45 + _tmp293 * _tmp46 + _tmp294 * _tmp44 - _tmp294 * _tmp45 -
                         _tmp294 * _tmp46 + _tmp295 * _tmp44 - _tmp295 * _tmp46 + _tmp302 * _tmp39;
  const Scalar _tmp304 = -_q0[1] * _tmp298 - _q0[2] * _tmp299 + _tmp12 * _tmp302 -
                         _tmp212 * _tmp291 + _tmp236 + _tmp266 + _tmp293 * _tmp41 +
                         _tmp293 * _tmp42 - _tmp293 * _tmp43 - _tmp294 * _tmp41 - _tmp294 * _tmp42 +
                         _tmp294 * _tmp43 - _tmp295 * _tmp42 + _tmp295 * _tmp43 + _tmp297 * _tmp37;

  // Output terms (3)
  Eigen::Matrix<Scalar, 4, 1> _res;

  _res[0] = _q0[0] * _tmp36 - _tmp13 * _tmp35 + _tmp35 * _tmp38 + _tmp35 * _tmp40;
  _res[1] = _q0[1] * _tmp36 + _tmp35 * _tmp41 + _tmp35 * _tmp42 - _tmp35 * _tmp43;
  _res[2] = _q0[2] * _tmp36 - _tmp35 * _tmp44 + _tmp35 * _tmp45 + _tmp35 * _tmp46;
  _res[3] = _q0[3] * _tmp36 - _tmp35 * _tmp47 - _tmp35 * _tmp48 - _tmp35 * _tmp49;

  if (res_D_q0 != nullptr) {
    Eigen::Matrix<Scalar, 3, 3>& _res_D_q0 = (*res_D_q0);

    _res_D_q0(0, 0) =
        -_tmp148 * _tmp150 + _tmp164 * _tmp165 + _tmp178 * _tmp179 - _tmp190 * _tmp192;
    _res_D_q0(1, 0) =
        -_tmp148 * _tmp192 + _tmp150 * _tmp190 - _tmp164 * _tmp179 + _tmp165 * _tmp178;
    _res_D_q0(2, 0) =
        -_tmp148 * _tmp179 - _tmp150 * _tmp178 + _tmp164 * _tmp192 + _tmp165 * _tmp190;
    _res_D_q0(0, 1) =
        -_tmp150 * _tmp218 + _tmp165 * _tmp208 + _tmp179 * _tmp215 - _tmp192 * _tmp222;
    _res_D_q0(1, 1) = _tmp150 * _tmp222 + _tmp165 * _tmp215 - _tmp179 * _tmp208 - _tmp192 * _tmp218;
    _res_D_q0(2, 1) =
        -_tmp150 * _tmp215 + _tmp165 * _tmp222 - _tmp179 * _tmp218 + _tmp192 * _tmp208;
    _res_D_q0(0, 2) =
        -_tmp150 * _tmp249 + _tmp165 * _tmp240 + _tmp179 * _tmp237 - _tmp192 * _tmp246;
    _res_D_q0(1, 2) = _tmp150 * _tmp246 + _tmp165 * _tmp237 - _tmp179 * _tmp240 - _tmp192 * _tmp249;
    _res_D_q0(2, 2) =
        -_tmp150 * _tmp237 + _tmp165 * _tmp246 - _tmp179 * _tmp249 + _tmp192 * _tmp240;
  }

  if (res_D_q1 != nullptr) {
    Eigen::Matrix<Scalar, 3, 3>& _res_D_q1 = (*res_D_q1);

    _res_D_q1(0, 0) =
        -_tmp150 * _tmp267 + _tmp165 * _tmp269 + _tmp179 * _tmp271 - _tmp191 * _tmp264;
    _res_D_q1(1, 0) = _tmp149 * _tmp264 + _tmp165 * _tmp271 - _tmp179 * _tmp269 - _tmp192 * _tmp267;
    _res_D_q1(2, 0) =
        -_tmp150 * _tmp271 + _tmp165 * _tmp263 - _tmp179 * _tmp267 + _tmp192 * _tmp269;
    _res_D_q1(0, 1) =
        -_tmp150 * _tmp286 + _tmp165 * _tmp284 + _tmp179 * _tmp281 - _tmp192 * _tmp287;
    _res_D_q1(1, 1) = _tmp150 * _tmp287 + _tmp165 * _tmp281 - _tmp179 * _tmp284 - _tmp192 * _tmp286;
    _res_D_q1(2, 1) =
        -_tmp150 * _tmp281 + _tmp165 * _tmp287 - _tmp179 * _tmp286 + _tmp192 * _tmp284;
    _res_D_q1(0, 2) =
        -_tmp150 * _tmp300 + _tmp165 * _tmp301 + _tmp179 * _tmp304 - _tmp192 * _tmp303;
    _res_D_q1(1, 2) = _tmp150 * _tmp303 + _tmp165 * _tmp304 - _tmp179 * _tmp301 - _tmp192 * _tmp300;
    _res_D_q1(2, 2) =
        -_tmp150 * _tmp304 + _tmp165 * _tmp303 - _tmp179 * _tmp300 + _tmp192 * _tmp301;
  }

  return sym::Rot3<Scalar>(_res);
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
